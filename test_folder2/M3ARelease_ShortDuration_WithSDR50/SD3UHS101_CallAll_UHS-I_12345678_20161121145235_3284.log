14:52:29: Sata Disconnector Board found in COM1.
14:52:33: *****************************************************

14:52:33: *  SDR/USD Driver version '10.0.0.1 (0x a.0.0.1)'   *

14:52:33: *                                                   *

14:52:33: *  Compatibility with this version is not verified! *

14:52:33: *****************************************************

14:52:35: [ DeviceSetupCompletion() , Command count = 7 ] 
14:52:35: Testname Mapping: ScriptName=[SD3UHS101_CallAll_UHS-I] -> TestId=[SD3UHS101]
14:52:35: [ ReadFile(<0x200/0x200, Arb>, 0x33, 0x1) , Command count = 8 ] 
14:52:35: [ GetPhysicalChipsInfo() , Command count = 9 ] 
14:52:35: [ GetFileSize(0xEA) , Command count = 10 ] 
14:52:35: [ ReadFile(<0xA00/0x200, Arb>, 0xEA, 0x1) , Command count = 11 ] 
14:52:35: [ GetFileSize(0x16) , Command count = 12 ] 
14:52:35: [ GetCardStatus() , Command count = 13 ] 
14:52:35: [ GetFileSize(0x18) , Command count = 14 ] 
14:52:35: [ ReadFile(<0x1000/0x200, Arb>, 0x18, 0x8) , Command count = 15 ] 
14:52:35: [ GetFileSize(0x15) , Command count = 16 ] 
14:52:35: [ ReadFile(<0x1000/0x200, Arb>, 0x15, 0x1) , Command count = 17 ] 
14:52:36: Can not find revision of File 21 in file 'config.xml' or card is in the ROM mode
14:52:36: [ GetFileSize(0xE) , Command count = 18 ] 
14:52:36: [ ReadFile(<0x1000/0x200, Arb>, 0xE, 0x1) , Command count = 19 ] 
14:52:36: [ GetFileSize(0x1E) , Command count = 20 ] 
14:52:36: [ GetCardStatus() , Command count = 21 ] 
14:52:36: [ GetFileSize(0x21) , Command count = 22 ] 
14:52:36: [ GetCardStatus() , Command count = 23 ] 
14:52:36: [ GetFileSize(0x33) , Command count = 24 ] 
14:52:36: [ ReadFile(<0x1000/0x200, Spc, pat:0x0>, 0x33, 0x1) , Command count = 25 ] 
14:52:36: [ GetFileSize(0x1F) , Command count = 26 ] 
14:52:36: [ ReadFile(<0x1000/0x200, Spc, pat:0x0>, 0x1F, 0x1) , Command count = 27 ] 
14:52:36: [ GetFileSize(0x2A) , Command count = 28 ] 
14:52:36: [ ReadFile(<0x1000/0x200, Spc, pat:0x0>, 0x2A, 0x1) , Command count = 29 ] 
14:52:36: [ ReadCfgConf(<0x1000/0x200, Spc, pat:0x0>, 0x1) , Command count = 30 ] 
14:52:36: [ ReadFirmwareParameter(<0x1000/0x200, Spc, pat:0x0>, 0x2) , Command count = 31 ] 
14:52:36: [ GetIpInformation(<0x1000/0x200, Spc, pat:0x0>, py_sfcl.IpComponentId.ID_BE) , Command count = 32 ] 
14:52:36: [ GetIpInformation(<0x1000/0x200, Spc, pat:0x0>, py_sfcl.IpComponentId.ID_PRODUCT) , Command count = 33 ] 
14:52:36: [ GetIpInformation(<0x1000/0x200, Spc, pat:0x0>, py_sfcl.IpComponentId.ID_FE_SD) , Command count = 34 ] 
14:52:36: [ GetIpInformation(<0x1000/0x200, Spc, pat:0x0>, 0x0) , Command count = 35 ] 
14:52:36: [ GetFileSize(0x33) , Command count = 36 ] 
14:52:36: [ ReadFile(<0x200/0x200, Arb>, 0x33, 0x1) , Command count = 37 ] 
14:52:36: [ GetFileSize(0x33) , Command count = 38 ] 
14:52:36: [ ReadFile(<0x200/0x200, Arb>, 0x33, 0x1) , Command count = 39 ] 
14:52:36: [ GetIpVersionInfo() , Command count = 40 ] 
14:52:36: [ GetPhysicalChipsInfo() , Command count = 41 ] 
14:52:36: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0601A6C0>, <0x200/0x200, Arb>) , Command count = 42 ] 
14:52:36: [ SendDiagnostic(<0x200/0x200, Spc, pat:0x0>, [0x9A, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0], 0x0, 0x1) , Command count = 43 ] 

<<<<<<<<<<<<<<<         TEST HEADER          >>>>>>>>>>>>>>>

Application                :  TestRunner.py
Application version        :  SD_DVT 2.0.0
Application folder         :  C:\SDDVT_Python_Package\SDDVT
Command line               :  --protocol=sd --sdtestid=SD3UHS101 --dbconnection=none --adapter=SD05412_9ADT --sdConfiguration=SDR50 --projectconfig=C:\SDDVT_Python_Package\SDDVT\Projects_configuration\Colibri_32GB --paramsfile=C:\Colibri_SD_HC_I070_SDR104_Prof_C10_U3_V30_A1.txt --logfilename=C:\Results\[U]
Protocol                   :  sd
Serial number (CInfo)      :  sdin1091
Adapter                    :  SDR Tester (S#: SD05412_9ADT): (Slot#:0)
Adapter serial number      :  SD05412_9ADT
Adapter type               :  USD
Capacity                   :  32G
Firmware revision          :  6RB C030
Flashware revision         :  6RB C030
IP Version Info            :  '' 01.04.00... ID 0x20
                           :  '' 00.01.00... ID 0x10
Memory ID                  :  453CA9A27A510B140000000000000000
Controller                 :  81
Trim settings              :  <Unavailable>
Model revision             :  <Unavailable>
Stream name                :  <Unavailable>
FE IP                      :  1
Romware revision           :  RRBZ1152
Architecture               :  Gen 6
Model                      :  SanDisk   COLIBRI
Memory type                :  Unknown Device Type-2LC x 1
ASIC id                    :  81
Controller type            :  Unknown Controller   UMC-J
Driver version (actual)    :  10.0.0.1 (0x a.0.0.1)
Driver version (released)  :  7.1.4.3 (0x 7.1.4.3)
Date and time              :  2016-11-21 14:52:36
Host name                  :  SDDVT_Test2
Host IP address            :  10.65.153.121
Operating system           :  Microsoft Windows [Version 6.1.7601] Service Pack 1
SanDisk Python version     :  1.17.5rc3
CTF/PySFCL build number    :  1.3.0.131072
PySFCL version             :  1.3.0
CTF version                :  1.3
Python version             :  2.4.2
Project Name(Validation)   :  <None>


<<<<<<<<<<<<<<<      SFCL CONFIGURATION      >>>>>>>>>>>>>>>

[SD enumeration]
cmdtiming=0
useRelay=0
autocompare=0
relayPolarity=1
relaySleep=500
measureCmdLatency=1
logicalChunkSize=0
diagDisabled=0
diagCmdTimeout=800
useVddf=on
nethostloglevel=
nethostautoCompare=on
CmdManShowProgress=off
nethostsendtimeout=240000
nethostreceivetimeout=240000
countOfRetryCmdIfCrc=3
enableOORPatch=
lbaForSctpCommands=0x100
subProtocol=0
doDle=0
diagnosticChunkSize=128
logmsgformat=timeMessage
logtimeformat=time
relaySlot=0
unloadDll=on
hardTimeoutUnloadDll=on
minDuration=7200
remoteDevice=
skipProduction=0
ishighspeedmode=0
highfreqinhz=500
modeldelaytimeindiagnostic=0
sataPort0ToRelaySlot=0
sataPort1ToRelaySlot=0
sataPort2ToRelaySlot=0
sataPort3ToRelaySlot=0
relayToComportMapping=1
sdbToComportMapping=1
sataAdapterPort0=0
sataAdapterPort1=0
sataAdapterPort2=0
sataAdapterPort3=0
sataPort0ToMubIndx=1
sataPort1ToMubIndx=1
sataPort2ToMubIndx=1
sataPort3ToMubIndx=1

[Common]
enableChunkTraces=off
enablePythonTraceback=1
sctpPhaseDelay=0
printcommandcount=on
debugfilepath=
initXMLPath=\\regression.lab.sandisk.com\shared\configurations
delayBeforePwrCycle=0
delayAfterPwrCycle=0
reportCountStatistics=1
reportPackage=0
sfclConfig=Common

<<<<<<<<<<<<<<<          CARD INFO           >>>>>>>>>>>>>>>

Number Of LBAs  :  0x3b72400
Card Is Locked  :  No
Secure Area     :  0x28000
Card Secure     :  No
WP map          :

<<<<<<<<<<<<<<<           CID INFO           >>>>>>>>>>>>>>>

Manufacturer Id  :  0x3
Card/BGA         :  0
Application Id   :  0x5344
ProductName      :  AGGCD
ProductRev       :  0x80
SerialNumber     :  0x23482900
Reserved         :  0x23482900
Year             :  2000
Month            :  11
CRC Check Sum    :  0x5
Not Used         :

<<<<<<<<<<<<<<<           CSD INFO           >>>>>>>>>>>>>>>

CSD Structure                     :  0x1
reserv. 1                         :  0x0
TAAC                              :  0xe
NSAC*100                          :  0x0
data transfer rate                :  0x32
card command classes CCC          :  0x5b5
max. read data Blk. length        :  0x9
partial blocks for read allowed   :  0x0
write block misalignment          :  0x0
read block misalignment           :  0x0
DSR implemented                   :  0x0
reserved 2                        :  0x0
device size                       :  0xedc8
Reserv3                           :  0x0
SD Erase Blk Len En               :  0x1
SD Sec Size                       :  0x7f
write protect group size          :  0x0
write protect group enable        :  0x0
Reserv4                           :  0x0
write speed factor                :  0x2
max. write data blk. length       :  0x9
partial blocks for write allowed  :  0x0
File Format Group                 :  0x0
copy flag(OTP)                    :  0x1
permanent write protection        :  0x0
temporary write protection        :  0x0
File Format                       :  0x0
CRC                               :  0x0
<<<<<<<<<<<<<<<         M-CONF INFO          >>>>>>>>>>>>>>>

Max LBA                      :  0x3b9b000
FW Revision                  :  0x20425236
Internal Flashware Revision  :
Romware revision             :  RRBZ1152
Device Count                 :  0x0
Device Type                  :  0x0
Device Configuration         :  0x0
ASIC id                      :  81
ASIC Vendor                  :  0x2
ASIC Revision                :  0x0
Security                     :  0x0
File Number                  :  0x0
File Version                 :  0x0
File Sign                    :  0x0
Bot File Version             :  COLB1S5211C0f30r_11UHB05D.
Param File Version           :  0x70a006a0
Lot Number                   :  0x0
Talisman Security Code       :  0x0
Reserved                     :  0x0
SNDK Version                 :  0x0
CRYS Version                 :  0x0
PDL Version                  :  0x0
Talisman Security Code       :  0x0
Memory ID                    :  453CA9A27A510B140000000000000000
File21 Version               :  11UHB05D
Secured Flashware            :  0x0
Compilation Date             :  Apr 22 2016
Compilation Time             :  14:59:40
Sectors Per Block            :  0x0
FFU State                    :  0x0
Set0 Cpu Clock               :  165964
Set0 Cpu Divider             :  2
Set0 Fim Write Clock         :  33000
Set0 Fim Write Divider       :  11
Set0 Fim Read Clock          :  33000
Set0 Fim Read Divider        :  11
Set0 Hs Cpu Clock            :  0
Set0 Hs Cpu Divider          :  0
Set0 Ecc Clock               :  166000
Set0 Ecc Divider             :  2
Set0 Hs Fim Clock            :  83000
Set0 Hs Fim Divider          :  2
Set0 System Divider          :  2
File21 Version               :  11UHB05D
Secured Flashware            :  0x0
Compilation Date             :  Apr 22 2016
Compilation Time             :  14:59:40
Sectors Per Block            :  0x0
FFU State                    :  0x0
Set0 Cpu Clock               :  165964
Set0 Cpu Divider             :  2
Set0 Fim Write Clock         :  33000
Set0 Fim Write Divider       :  11
Set0 Fim Read Clock          :  33000
Set0 Fim Read Divider        :  11
Set0 Hs Cpu Clock            :  0
Set0 Hs Cpu Divider          :  0
Set0 Ecc Clock               :  166000
Set0 Ecc Divider             :  2
Set0 Hs Fim Clock            :  83000
Set0 Hs Fim Divider          :  2
Set0 System Divider          :  2
Set1 Cpu Clock               :
Set1 Cpu Divider             :
Set1 Fim Write Clock         :
Set1 Fim Write Divider       :
Set1 Fim Read Clock          :
Set1 Fim Read Divider        :
Set1 Hs Cpu Clock            :  0
Set1 Hs Cpu Divider          :  0
Set1 Hs Ecc Clock            :  0
Set1 Hs Ecc Divider          :  0
Set1 Hs Fim Clock            :  0
Set1 Hs Fim Divider          :  0
Set1 System Divider          :  0
Update Blocks                :  0x43
Chaotic Blocks               :
Die Interleave               :  0x2
Lower Page                   :  0x0
File 31 In User Area         :  0x0
SSA Version                  :
App Versions                 :  0x0L
Top Level IPartNum           :
Part Number                  :
Set2 Cpu Clock               :
Set2 Cpu Divider             :
Set2 Fim Write Clock         :
Set2 Fim Write Divider       :
Set2 Fim Read Clock          :
Set2 Fim Read Divider        :
Set2 Hs Cpu Clock            :  0
Set2 Hs Cpu Divider          :  0
Set2 Hs Ecc Clock            :  0
Set2 Hs Ecc Divider          :  0
Set2 Hs Fim Clock            :  0
Set2 Hs Fim Divider          :  0
Set2 System Divider          :  0
Set3 Cpu Clock               :
Set3 Cpu Divider             :
Set3 Fim Write Clock         :
Set3 Fim Write Divider       :
Set3 Fim Read Clock          :
Set3 Fim Read Divider        :
Set3 Hs Cpu Clock            :  0
Set3 Hs Cpu Divider          :  0
Set3 Hs Ecc Clock            :  0
Set3 Hs Ecc Divider          :  0
Set3 Hs Fim Clock            :  0
Set3 Hs Fim Divider          :  0
Set3 System Divider          :  0
Set4 Cpu Clock               :
Set4 Cpu Divider             :
Set4 Fim Write Clock         :
Set4 Fim Write Divider       :
Set4 Fim Read Clock          :
Set4 Fim Read Divider        :
Set4 Hs Cpu Clock            :  0
Set4 Hs Cpu Divider          :  0
Set4 Hs Ecc Clock            :  0
Set4 Hs Ecc Divider          :  0
Set4 Hs Fim Clock            :  0
Set4 Hs Fim Divider          :  0
Set4 System Divider          :  0
Set5 Cpu Clock               :
Set5 Cpu Divider             :
Set5 Fim Write Clock         :
Set5 Fim Write Divider       :
Set5 Fim Read Clock          :
Set5 Fim Read Divider        :
Set5 Hs Cpu Clock            :  0
Set5 Hs Cpu Divider          :  0
Set5 Hs Ecc Clock            :  0
Set5 Hs Ecc Divider          :  0
Set5 Hs Fim Clock            :  0
Set5 Hs Fim Divider          :  0
Set5 System Divider          :  0
MetaBlockSize                :  32768
Card Physical Size           :  0
WORM Card Lock               :  0
OTEC Version                 :  0
Meta Page Size               :  192
Worm Version                 :  0

<<<<<<<<<<<<<<<    COMMAND LINE ARGUMENTS    >>>>>>>>>>>>>>>


Processed command-line options:
   --protocol                                       : sd
   --adapterspecifier                               : ain:-1,desc:SD05412_9ADT
   --extcmdset                                      : FBCC
   --sdtestid                                       : SD3UHS101
   --sdconfiguration                                : SDR50
   --cyclecount                                     : 1
   --testduration                                   : 20h
   --writereadpercent                               : 100
   --paramsfile                                     : 'C:\Colibri_SD_HC_I070_SDR104_Prof_C10_U3_V30_A1.txt'
   --randomseed                                     : 22421318354
   --projectconfig                                  : C:\SDDVT_Python_Package\SDDVT\Projects_configuration\Colibri_32GB
   --logfiledir                                     : C:\SDDVT_Python_Package\SDDVT\DvtTestLogs
   --hostlog                                        : 0
   --dbconnection                                   : 'none'
   --temperature                                    : 25
   --voltage                                        : 0.00
   --logfilename                                    : 'C:\Results\[U]'
   --logtostdout                                    : Y
   --overwriteexistinglogfile                       : Y
   --logrotationspecifier                           : NoRotation
   --loglevel                                       : <4, INFO>
   --testcomment                                    : None
   --dbproject                                      : CTFW_QA
   --mdfwprojectid                                  : None
   --mdconfigid                                     : None
   --mdtestid                                       : None
   --valid                                          : True
   --waitTime                                       : None
   --jitter                                         : F
   --testlimits                                     : <None>-<None>
   --LabID                                          : None
   --DutID                                          : None
   --LaunchId                                       : None
   --TestQueueId                                    : None
   --xfermode                                       : <N>
   --networkperiod                                  : <N>
   --networkpath                                    : <N>
   --dumpfile                                       : 
   --printcommandcount                              : N
   --debugfilepath                                  : <N>
   --chpfilename                                    : <N>
   --enablecmdhistory                               : Y
   --cmdhistextfilename                             : <N>
   --cmdhistcsvfilename                             : <N>
   --histdisplaysizes                               : 0,250
   --stoponcommands                                 : <N>
   --notifyemailid                                  : <N>
   --spyoncommands                                  : <N>
   --notifyoncommands                               : <N>
   --CmdManShowProgress                             : 'off'
   --enablePowerCycle                               : '1'
   --measureCmdLatency                              : '1'
   --useVddf                                        : 'on'
   --gvi                                            : 'off'
   --gviOnFly                                       : 'off'
   --gviEncryption                                  : '0'
   --remoteDevice                                   : ''
   --skipProduction                                 : '0'
   --forceMultipleMode                              : 'off'
   --countOfRetryCmdIfCrc                           : '3'
   --enableOORPatch                                 : 'on'
   --connectonly                                    : 'off'
   --nethostautocompare                             : 'on'
   --nethostpowercycle                              : '0'
   --nethostloglevel                                : '3'
   --nethostlogconsole                              : '0'
   --nethostsanitychecks                            : '0'
   --nethostsendtimeout                             : '240000'
   --nethostreceivetimeout                          : '240000'
   --subProtocol                                    : '0'
   --useVccq                                        : '3.3'
   --maxprotocoloverhead                            : '0'
   --maxprotocoltimingmode                          : '0'
   --isHighSpeedMode                                : '0'
   --highFreqInHz                                   : '500'
   --doDle                                          : '0'
   --lbaForSctpCommands                             : '0x100'
   --cmdfilename                                    : ''
   --cmdtofilewrites                                : '0'
   --cmdtiming                                      : '0'
   --cmdtocsv                                       : '0'
   --logicalChunkSize                               : '0'
   --diagnosticChunkSize                            : '128'
   --readChunkSize                                  : '0'
   --writeChunkSize                                 : '0'
   --useRelay                                       : '0'
   --sataPort0ToRelaySlot                           : '0'
   --sataPort1ToRelaySlot                           : '0'
   --sataPort2ToRelaySlot                           : '0'
   --sataPort3ToRelaySlot                           : '0'
   --relayToComportMapping                          : '1'
   --useSDB                                         : '0'
   --sdbToComportMapping                            : '1'
   --sataAdapterPort0                               : '0'
   --sataAdapterPort1                               : '0'
   --sataAdapterPort2                               : '0'
   --sataAdapterPort3                               : '0'
   --relayPolarity                                  : '1'
   --relaySleep                                     : '500'
   --diagCmdTimeout                                 : '800'
   --diagDisabled                                   : '0'
   --hardTimeout                                    : '30000'
   --commandscriptfolder                            : ''
   --commandscriptstart                             : '0'
   --logmsgformat                                   : 'timeMessage'
   --logtimeformat                                  : 'time'
   --relaySlot                                      : '0'
   --atbuRelaySlot                                  : '3'
   --diskCacheStore                                 : ''
   --stopOnStart                                    : '0'
   --notifyserver                                   : ''
   --notifyretry                                    : '2'
   --notifytimeout                                  : '60'
   --failonnotifytimeout                            : '0'
   --revertactions                                  : ''
   --timechangedetection                            : '0'
   --timechangecondition                            : '600'
   --timechangecheckinterval                        : '1000'
   --inputmonitor                                   : '1'
   --logtimeprecision                               : '2'
   --nonSndkDevEnumeration                          : '0'
   --modelini                                       : 'C:\Program Files\SanDisk\CTF\Dlls\model.ini'
   --sfclini                                        : 'C:\Program Files\SanDisk\CTF\Dlls\sfcl.ini'
   --relayForceDownload                             : 'off'
   --powercycleoninit                               : 'off'
   --stopBgOperationOnFail                          : 'off'
   --autocompare                                    : '0'
   --autocompareRandomseed                          : '12345678'
   --modeldelaytimeindiagnostic                     : '0'
   --ForceDownloadMechanism                         : '0'
   --EnableUARTDebugLog                             : '0'
   --UARTBaudRate                                   : '230400'
   --SerialUARTToCom                                : '0'
   --UARTDebugFilePath                              : ''
   --sataPort0ToMubIndx                             : '1'
   --sataPort1ToMubIndx                             : '1'
   --sataPort2ToMubIndx                             : '1'
   --sataPort3ToMubIndx                             : '1'
   --fclStep                                        : '0'
   --fclCollectReads                                : '0'
   --fclCollectWrites                               : '0'
   --fclCollectErases                               : '0'
   --fclCollectAOMReads                             : '0'
   --fclAomBase                                     : '10'
   --aomStep                                        : '0'
   --aomMapFile                                     : '0'
   --fclAomSaveFilesStep                            : '1000'
   --gfa                                            : '0'
   --atbuSoftwareLocation                           : ''
   --atbuMemoryName                                 : ''
   --atbuProfilesLocation                           : ''
   --atbuThresholdValue                             : '0'
   --atbuTransitionTime                             : '0'
   --atbuDcCompensation                             : ''


<<<<<<<<<<<<<<< RUNNING TEST: SD3UHS101_CallAll_UHS-I >>>>>>>>>>>>>>>



14:52:42: ###### Running CallAll_UHS_I scripts  ######
14:52:42: Call script globalInitCard STARTED
14:52:49: FPGA Image Downloaded Is:SD_LEGACY-SDR2_2-01-00-0001.bin
14:52:49: MaxLba of the card: 0x3B72400 
14:52:52: [GO7_globalPreTestingSettings]### Default Initialization Start
14:52:52: [DVTCommonLib]###  SwitchHostVoltageRegion called
14:52:52: [ SwitchHostVoltageRegion(False) , Command count = 44 ] 
14:52:52: [DVTCommonLib]###  SwitchHostVoltageRegion Completed 

14:52:52: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 45 ] 
14:52:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <None>, 0x0, 0x0, 0x1, True, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 46 ] 
14:52:55: [ CardInit() , Command count = 47 ] 
14:52:55: [ SendDiagnostic(<0x200/0x200, Spc, pat:0x0>, [0x9A, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0], 0x0, 0x1) , Command count = 48 ] 

<<<<<<<<<<<<<<<         M-CONF INFO          >>>>>>>>>>>>>>>

Max LBA                      :  0x3b9b000
FW Revision                  :  0x20425236
Internal Flashware Revision  :
Romware revision             :  RRBZ1152
Device Count                 :  0x0
Device Type                  :  0x0
Device Configuration         :  0x0
ASIC id                      :  81
ASIC Vendor                  :  0x2
ASIC Revision                :  0x0
Security                     :  0x0
File Number                  :  0x0
File Version                 :  0x0
File Sign                    :  0x0
Bot File Version             :  COLB1S5211C0f30r_11UHB05D.
Param File Version           :  0x70a006a0
Lot Number                   :  0x0
Talisman Security Code       :  0x0
Reserved                     :  0x0
SNDK Version                 :  0x0
CRYS Version                 :  0x0
PDL Version                  :  0x0
Talisman Security Code       :  0x0
Memory ID                    :  453CA9A27A510B140000000000000000
File21 Version               :  11UHB05D
Secured Flashware            :  0x0
Compilation Date             :  Apr 22 2016
Compilation Time             :  14:59:40
Sectors Per Block            :  0x0
FFU State                    :  0x0
Set0 Cpu Clock               :  165964
Set0 Cpu Divider             :  2
Set0 Fim Write Clock         :  33000
Set0 Fim Write Divider       :  11
Set0 Fim Read Clock          :  33000
Set0 Fim Read Divider        :  11
Set0 Hs Cpu Clock            :  0
Set0 Hs Cpu Divider          :  0
Set0 Ecc Clock               :  166000
Set0 Ecc Divider             :  2
Set0 Hs Fim Clock            :  83000
Set0 Hs Fim Divider          :  2
Set0 System Divider          :  2
File21 Version               :  11UHB05D
Secured Flashware            :  0x0
Compilation Date             :  Apr 22 2016
Compilation Time             :  14:59:40
Sectors Per Block            :  0x0
FFU State                    :  0x0
Set0 Cpu Clock               :  165964
Set0 Cpu Divider             :  2
Set0 Fim Write Clock         :  33000
Set0 Fim Write Divider       :  11
Set0 Fim Read Clock          :  33000
Set0 Fim Read Divider        :  11
Set0 Hs Cpu Clock            :  0
Set0 Hs Cpu Divider          :  0
Set0 Ecc Clock               :  166000
Set0 Ecc Divider             :  2
Set0 Hs Fim Clock            :  83000
Set0 Hs Fim Divider          :  2
Set0 System Divider          :  2
Set1 Cpu Clock               :
Set1 Cpu Divider             :
Set1 Fim Write Clock         :
Set1 Fim Write Divider       :
Set1 Fim Read Clock          :
Set1 Fim Read Divider        :
Set1 Hs Cpu Clock            :  0
Set1 Hs Cpu Divider          :  0
Set1 Hs Ecc Clock            :  0
Set1 Hs Ecc Divider          :  0
Set1 Hs Fim Clock            :  0
Set1 Hs Fim Divider          :  0
Set1 System Divider          :  0
Update Blocks                :  0x43
Chaotic Blocks               :
Die Interleave               :  0x2
Lower Page                   :  0x0
File 31 In User Area         :  0x0
SSA Version                  :
App Versions                 :  0x0L
Top Level IPartNum           :
Part Number                  :
Set2 Cpu Clock               :
Set2 Cpu Divider             :
Set2 Fim Write Clock         :
Set2 Fim Write Divider       :
Set2 Fim Read Clock          :
Set2 Fim Read Divider        :
Set2 Hs Cpu Clock            :  0
Set2 Hs Cpu Divider          :  0
Set2 Hs Ecc Clock            :  0
Set2 Hs Ecc Divider          :  0
Set2 Hs Fim Clock            :  0
Set2 Hs Fim Divider          :  0
Set2 System Divider          :  0
Set3 Cpu Clock               :
Set3 Cpu Divider             :
Set3 Fim Write Clock         :
Set3 Fim Write Divider       :
Set3 Fim Read Clock          :
Set3 Fim Read Divider        :
Set3 Hs Cpu Clock            :  0
Set3 Hs Cpu Divider          :  0
Set3 Hs Ecc Clock            :  0
Set3 Hs Ecc Divider          :  0
Set3 Hs Fim Clock            :  0
Set3 Hs Fim Divider          :  0
Set3 System Divider          :  0
Set4 Cpu Clock               :
Set4 Cpu Divider             :
Set4 Fim Write Clock         :
Set4 Fim Write Divider       :
Set4 Fim Read Clock          :
Set4 Fim Read Divider        :
Set4 Hs Cpu Clock            :  0
Set4 Hs Cpu Divider          :  0
Set4 Hs Ecc Clock            :  0
Set4 Hs Ecc Divider          :  0
Set4 Hs Fim Clock            :  0
Set4 Hs Fim Divider          :  0
Set4 System Divider          :  0
Set5 Cpu Clock               :
Set5 Cpu Divider             :
Set5 Fim Write Clock         :
Set5 Fim Write Divider       :
Set5 Fim Read Clock          :
Set5 Fim Read Divider        :
Set5 Hs Cpu Clock            :  0
Set5 Hs Cpu Divider          :  0
Set5 Hs Ecc Clock            :  0
Set5 Hs Ecc Divider          :  0
Set5 Hs Fim Clock            :  0
Set5 Hs Fim Divider          :  0
Set5 System Divider          :  0
MetaBlockSize                :  32768
Card Physical Size           :  0
WORM Card Lock               :  0
OTEC Version                 :  0
Meta Page Size               :  192
Worm Version                 :  0

14:52:55: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:52:55: ####CSD Registe 2.0 Values####
14:52:55: CSD_STRUCTURE                                 :0x1
14:52:55: Reserv1                                       :0x0
14:52:55: Time Access 1 TAAC                            :0xe
14:52:55: Time Access 2 NSAC*100                        :0x0
14:52:55: Data Transfer Rate TRAN_SPEED                 :0x32
14:52:55: Card Command Classess CCC                     :0x5b5
14:52:55: Max Read Data Block Length  READ_BL_LEN       :0x9
14:52:55: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:52:55: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:52:55: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:52:55: DSR(driver stage register)  DSR_IMP           :0x0
14:52:55: Reserv2                                       :0x0
14:52:55: Device Size C_SIZE                            :0xedc8
14:52:56: Reserv3                                       :0x0
14:52:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:52:56: Erase Sector Size SECTOR_SIZE                 :0x7f
14:52:56: Write Protect Group Size WP_GRP_SIZE          :0x0
14:52:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:52:56: Reserv4                                       :0x0
14:52:56: Write Speed Factor R2W_FACTOR                 :0x2
14:52:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:52:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:52:56: FILE_FORMAT_GRP                               :0x0
14:52:56: COPY flag                                     :0x1
14:52:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:52:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:52:56: File_Format                                   :0x0
14:52:56: CRC                                           :0x0
14:52:56: ####CSD Registe Values####  

14:52:56: [DVTCommonLib]### CardInfo :###****CARD INFO****
14:52:56: ProductSerialNumber = 0x23482900
14:52:56: CardMaximumLBA      = 0x3b72400
14:52:56: CardCapacity        = 32G
14:52:56: Is card secure      = 0
14:52:56: [DVTCommonLib]### CardInfo :###****CARD INFO**** 

14:52:56: [GO7_globalPreTestingSettings]### Default Initialization Completed 


14:52:56: [GO4_globalInitCard]### Switch to Specify Card Type
14:52:58: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:52:58: Host Frequency set to 25000 KHz
14:52:58: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:52:58: [GO18_globalSetVolt]### Set Host Voltage value.
14:52:58: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:52:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, True) , Command count = 49 ] 
14:52:58: [GO18_globalSetVolt]### Host voltage value is set.
14:52:58: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:52:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C60>, 0x0, False) , Command count = 50 ] 
14:52:58: [GO18_globalSetVolt]### Host voltage value is set.
14:52:58: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 51 ] 
14:52:58: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:52:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 52 ] 
14:52:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:52:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:52:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:52:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:52:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:52:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 53 ] 
14:52:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:52:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1720>, <py_sfcl.CommandDataDefinition object at 0x060C1510>) , Command count = 54 ] 
14:52:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1840>, <py_sfcl.CommandDataDefinition object at 0x060C1A80>) , Command count = 55 ] 
14:52:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:52:59: [ SetCardRCA(0x1, 0xD555) , Command count = 56 ] 
14:52:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:52:59: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:52:59: Host Frequency set to 25000 KHz
14:52:59: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:52:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:52:59: ####CSD Registe 2.0 Values####
14:52:59: CSD_STRUCTURE                                 :0x1
14:52:59: Reserv1                                       :0x0
14:52:59: Time Access 1 TAAC                            :0xe
14:52:59: Time Access 2 NSAC*100                        :0x0
14:52:59: Data Transfer Rate TRAN_SPEED                 :0x32
14:52:59: Card Command Classess CCC                     :0x5b5
14:52:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:52:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:52:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:52:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:52:59: DSR(driver stage register)  DSR_IMP           :0x0
14:52:59: Reserv2                                       :0x0
14:52:59: Device Size C_SIZE                            :0xedc8
14:52:59: Reserv3                                       :0x0
14:52:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:52:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:52:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:52:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:52:59: Reserv4                                       :0x0
14:52:59: Write Speed Factor R2W_FACTOR                 :0x2
14:52:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:52:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:52:59: FILE_FORMAT_GRP                               :0x0
14:52:59: COPY flag                                     :0x1
14:52:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:52:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:52:59: File_Format                                   :0x0
14:52:59: CRC                                           :0x0
14:52:59: ####CSD Registe Values####  

14:52:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:52:59: [GetSCRRegisterEntry] Passed
14:52:59: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:52:59: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:52:59: Data_Status_After Erases          : 0
14:52:59: CPRM Security Support             : No Security
14:52:59: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:52:59: Spec. Version                     : Version 3.0X
14:52:59: Extended Security Support         : Extended_Security_Not_Supported
14:52:59: Command Support                   : COMMAND_SUPPORT
14:52:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x061000C0>) , Command count = 57 ] 
14:52:59: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x06100150>) , Command count = 58 ] 
14:52:59: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:52:59: [ SetBusWidth(0x4) , Command count = 59 ] 
14:52:59: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:52:59: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06100270>, <0x200/0x200, Spc, pat:0x0>) , Command count = 60 ] 
14:52:59: Protected Area Size 0x28000
14:52:59: Bus Width           2
14:52:59: Secure Mode         0
14:52:59: Speed  Class        4
14:52:59: Perf Move           0
14:52:59: Au Size             9
14:52:59: Erase Size          15
14:52:59: Erase Timeout       1
14:52:59: Erase offset        1
14:52:59: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:52:59: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:52:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:52:59: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 61 ] 
14:52:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:52:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:52:59: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:52:59: Host Frequency set to 100000 KHz
14:52:59: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:52:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:52:59: ####CSD Registe 2.0 Values####
14:52:59: CSD_STRUCTURE                                 :0x1
14:52:59: Reserv1                                       :0x0
14:52:59: Time Access 1 TAAC                            :0xe
14:52:59: Time Access 2 NSAC*100                        :0x0
14:52:59: Data Transfer Rate TRAN_SPEED                 :0xb
14:52:59: Card Command Classess CCC                     :0x5b5
14:52:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:52:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:52:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:52:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:52:59: DSR(driver stage register)  DSR_IMP           :0x0
14:52:59: Reserv2                                       :0x0
14:52:59: Device Size C_SIZE                            :0xedc8
14:52:59: Reserv3                                       :0x0
14:52:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:52:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:52:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:52:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:52:59: Reserv4                                       :0x0
14:52:59: Write Speed Factor R2W_FACTOR                 :0x2
14:52:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:52:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:52:59: FILE_FORMAT_GRP                               :0x0
14:52:59: COPY flag                                     :0x1
14:52:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:52:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:52:59: File_Format                                   :0x0
14:52:59: CRC                                           :0x0
14:52:59: ####CSD Registe Values####  

14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100690>, <py_sfcl.CommandDataDefinition object at 0x061004B0>) , Command count = 62 ] 
14:52:59: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:52:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100510>, <py_sfcl.CommandDataDefinition object at 0x06100540>) , Command count = 63 ] 
14:52:59: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:00: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:00: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061005D0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 64 ] 
14:53:00: Protected Area Size 0x28000
14:53:00: Bus Width           2
14:53:00: Secure Mode         0
14:53:00: Speed  Class        4
14:53:00: Perf Move           0
14:53:00: Au Size             9
14:53:00: Erase Size          15
14:53:00: Erase Timeout       1
14:53:00: Erase offset        1
14:53:00: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:00: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:00: Call script globalInitCard COMPLETED
14:53:00: Started Running \SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1 Scripts 

14:53:00: ########################################
14:53:00: Stated Running script SD3UHS102_DVT_SD3_00_3_4_1_1_1_UHS_RESET_MAIN_FLOW 
14:53:00: ########################################
14:53:00: ###### Running SD3UHS102_DVT_SD3.00_3_4_1_1_1_UHS_RESET_MAIN_FLOW
14:53:00: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:02: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:02: Host Frequency set to 25000 KHz
14:53:02: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:02: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:02: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E720>, 0x0, True) , Command count = 65 ] 
14:53:02: [GO18_globalSetVolt]### Host voltage value is set.
14:53:02: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EF00>, 0x0, False) , Command count = 66 ] 
14:53:02: [GO18_globalSetVolt]### Host voltage value is set.
14:53:02: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 67 ] 
14:53:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 68 ] 
14:53:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:02: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 69 ] 
14:53:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 70 ] 
14:53:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAB0>, <py_sfcl.CommandDataDefinition object at 0x0610E7B0>) , Command count = 71 ] 
14:53:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:02: [ SetCardRCA(0x1, 0xD555) , Command count = 72 ] 
14:53:03: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:03: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:03: Host Frequency set to 25000 KHz
14:53:03: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:03: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:03: ####CSD Registe 2.0 Values####
14:53:03: CSD_STRUCTURE                                 :0x1
14:53:03: Reserv1                                       :0x0
14:53:03: Time Access 1 TAAC                            :0xe
14:53:03: Time Access 2 NSAC*100                        :0x0
14:53:03: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:03: Card Command Classess CCC                     :0x5b5
14:53:03: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:03: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:03: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:03: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:03: DSR(driver stage register)  DSR_IMP           :0x0
14:53:03: Reserv2                                       :0x0
14:53:03: Device Size C_SIZE                            :0xedc8
14:53:03: Reserv3                                       :0x0
14:53:03: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:03: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:03: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:03: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:03: Reserv4                                       :0x0
14:53:03: Write Speed Factor R2W_FACTOR                 :0x2
14:53:03: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:03: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:03: FILE_FORMAT_GRP                               :0x0
14:53:03: COPY flag                                     :0x1
14:53:03: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:03: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:03: File_Format                                   :0x0
14:53:03: CRC                                           :0x0
14:53:03: ####CSD Registe Values####  

14:53:03: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:03: [GetSCRRegisterEntry] Passed
14:53:03: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:03: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:03: Data_Status_After Erases          : 0
14:53:03: CPRM Security Support             : No Security
14:53:03: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:03: Spec. Version                     : Version 3.0X
14:53:03: Extended Security Support         : Extended_Security_Not_Supported
14:53:03: Command Support                   : COMMAND_SUPPORT
14:53:03: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E990>, <py_sfcl.CommandDataDefinition object at 0x0610E8A0>) , Command count = 73 ] 
14:53:03: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E810>, <py_sfcl.CommandDataDefinition object at 0x0610EE70>) , Command count = 74 ] 
14:53:03: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:03: [ SetBusWidth(0x4) , Command count = 75 ] 
14:53:03: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:03: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610E960>, <0x200/0x200, Spc, pat:0x0>) , Command count = 76 ] 
14:53:03: Protected Area Size 0x28000
14:53:03: Bus Width           2
14:53:03: Secure Mode         0
14:53:03: Speed  Class        4
14:53:03: Perf Move           0
14:53:03: Au Size             9
14:53:03: Erase Size          15
14:53:03: Erase Timeout       1
14:53:03: Erase offset        1
14:53:03: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:03: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:03: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 77 ] 
14:53:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:03: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:03: Host Frequency set to 100000 KHz
14:53:03: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:03: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:03: ####CSD Registe 2.0 Values####
14:53:03: CSD_STRUCTURE                                 :0x1
14:53:03: Reserv1                                       :0x0
14:53:03: Time Access 1 TAAC                            :0xe
14:53:03: Time Access 2 NSAC*100                        :0x0
14:53:03: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:03: Card Command Classess CCC                     :0x5b5
14:53:03: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:03: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:03: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:03: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:03: DSR(driver stage register)  DSR_IMP           :0x0
14:53:03: Reserv2                                       :0x0
14:53:03: Device Size C_SIZE                            :0xedc8
14:53:03: Reserv3                                       :0x0
14:53:03: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:03: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:03: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:03: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:03: Reserv4                                       :0x0
14:53:03: Write Speed Factor R2W_FACTOR                 :0x2
14:53:03: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:03: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:03: FILE_FORMAT_GRP                               :0x0
14:53:03: COPY flag                                     :0x1
14:53:03: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:03: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:03: File_Format                                   :0x0
14:53:03: CRC                                           :0x0
14:53:03: ####CSD Registe Values####  

14:53:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E600>, <py_sfcl.CommandDataDefinition object at 0x0610E780>) , Command count = 78 ] 
14:53:03: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EB10>, <py_sfcl.CommandDataDefinition object at 0x0610E9F0>) , Command count = 79 ] 
14:53:03: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:03: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:03: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:05: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:05: Host Frequency set to 25000 KHz
14:53:05: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:05: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:05: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EBA0>, 0x0, True) , Command count = 80 ] 
14:53:05: [GO18_globalSetVolt]### Host voltage value is set.
14:53:05: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E8D0>, 0x0, False) , Command count = 81 ] 
14:53:05: [GO18_globalSetVolt]### Host voltage value is set.
14:53:05: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 82 ] 
14:53:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 83 ] 
14:53:06: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:06: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:06: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:06: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:06: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:06: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 84 ] 
14:53:06: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:06: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EBD0>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 85 ] 
14:53:06: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED80>, <py_sfcl.CommandDataDefinition object at 0x0610EA80>) , Command count = 86 ] 
14:53:06: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:06: [ SetCardRCA(0x1, 0xD555) , Command count = 87 ] 
14:53:06: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:06: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:06: Host Frequency set to 25000 KHz
14:53:06: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:06: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:06: ####CSD Registe 2.0 Values####
14:53:06: CSD_STRUCTURE                                 :0x1
14:53:06: Reserv1                                       :0x0
14:53:06: Time Access 1 TAAC                            :0xe
14:53:06: Time Access 2 NSAC*100                        :0x0
14:53:06: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:06: Card Command Classess CCC                     :0x5b5
14:53:06: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:06: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:06: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:06: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:06: DSR(driver stage register)  DSR_IMP           :0x0
14:53:06: Reserv2                                       :0x0
14:53:06: Device Size C_SIZE                            :0xedc8
14:53:06: Reserv3                                       :0x0
14:53:06: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:06: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:06: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:06: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:06: Reserv4                                       :0x0
14:53:06: Write Speed Factor R2W_FACTOR                 :0x2
14:53:06: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:06: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:06: FILE_FORMAT_GRP                               :0x0
14:53:06: COPY flag                                     :0x1
14:53:06: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:06: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:06: File_Format                                   :0x0
14:53:06: CRC                                           :0x0
14:53:06: ####CSD Registe Values####  

14:53:06: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:06: [GetSCRRegisterEntry] Passed
14:53:06: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:06: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:06: Data_Status_After Erases          : 0
14:53:06: CPRM Security Support             : No Security
14:53:06: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:06: Spec. Version                     : Version 3.0X
14:53:06: Extended Security Support         : Extended_Security_Not_Supported
14:53:06: Command Support                   : COMMAND_SUPPORT
14:53:06: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC30>, <py_sfcl.CommandDataDefinition object at 0x0610EF90>) , Command count = 88 ] 
14:53:06: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E930>, <py_sfcl.CommandDataDefinition object at 0x0610EEA0>) , Command count = 89 ] 
14:53:06: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:06: [ SetBusWidth(0x4) , Command count = 90 ] 
14:53:06: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:06: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610EB40>, <0x200/0x200, Spc, pat:0x0>) , Command count = 91 ] 
14:53:06: Protected Area Size 0x28000
14:53:06: Bus Width           2
14:53:06: Secure Mode         0
14:53:06: Speed  Class        4
14:53:06: Perf Move           0
14:53:06: Au Size             9
14:53:06: Erase Size          15
14:53:06: Erase Timeout       1
14:53:06: Erase offset        1
14:53:06: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:06: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:06: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 92 ] 
14:53:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:06: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:06: Host Frequency set to 100000 KHz
14:53:06: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:06: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:06: ####CSD Registe 2.0 Values####
14:53:06: CSD_STRUCTURE                                 :0x1
14:53:06: Reserv1                                       :0x0
14:53:06: Time Access 1 TAAC                            :0xe
14:53:06: Time Access 2 NSAC*100                        :0x0
14:53:06: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:06: Card Command Classess CCC                     :0x5b5
14:53:06: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:06: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:06: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:06: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:06: DSR(driver stage register)  DSR_IMP           :0x0
14:53:06: Reserv2                                       :0x0
14:53:06: Device Size C_SIZE                            :0xedc8
14:53:06: Reserv3                                       :0x0
14:53:06: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:06: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:06: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:06: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:06: Reserv4                                       :0x0
14:53:06: Write Speed Factor R2W_FACTOR                 :0x2
14:53:06: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:06: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:06: FILE_FORMAT_GRP                               :0x0
14:53:06: COPY flag                                     :0x1
14:53:06: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:06: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:06: File_Format                                   :0x0
14:53:06: CRC                                           :0x0
14:53:06: ####CSD Registe Values####  

14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111210>, <py_sfcl.CommandDataDefinition object at 0x06111030>) , Command count = 93 ] 
14:53:06: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x061110C0>) , Command count = 94 ] 
14:53:06: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:07: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:09: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111120>, 0x0, False) , Command count = 95 ] 
14:53:09: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:09: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111120>, 0x0, True) , Command count = 96 ] 
14:53:09: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:09: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 97 ] 
14:53:09: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:09: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:09: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:09: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:09: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:09: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:09: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 98 ] 
14:53:09: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:09: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111270>, <py_sfcl.CommandDataDefinition object at 0x061112A0>) , Command count = 99 ] 
14:53:09: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111300>, <py_sfcl.CommandDataDefinition object at 0x06111330>) , Command count = 100 ] 
14:53:09: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:09: [ SetCardRCA(0x1, 0xD555) , Command count = 101 ] 
14:53:09: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:09: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:09: [ SetBusWidth(0x4) , Command count = 102 ] 
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:09: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 103 ] 
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:09: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:09: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 104 ] 
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:09: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:09: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 105 ] 
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:10: Host Frequency set to 25000 KHz

14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:10: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 106 ] 
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x061115A0>, 0x0, False) , Command count = 107 ] 
14:53:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:10: SendOCR: 1107263488
14:53:10: ExcpectOCR: 3254747136
14:53:10: SendFirstOCR: 1107263488
14:53:10: SendNextOCR: 1107263488
14:53:10: SingleCommand: 0
14:53:10: SingleCommandTestType: 1
14:53:10: Identification: 1
14:53:10: ProtocolMode: 1
14:53:10: VerifyType: 0
14:53:10: SendCMD0: 1
14:53:10: SendCMD8: 1
14:53:10: SendCMD58: 1
14:53:10: SetPower: 1
14:53:10: HcsXpcS18r000: 16744448
14:53:10: HcsXpcS18r001: 33521664
14:53:10: HcsXpcS18r010: 285179904
14:53:10: HcsXpcS18r011: 301957120
14:53:10: HcsXpcS18r100: 1090486272
14:53:10: HcsXpcS18r101: 1107263488
14:53:10: HcsXpcS18r110: 1358921728
14:53:10: HcsXpcS18r111: 1375698944
14:53:10: ReadyCcs18a000: 16744448
14:53:10: ReadyCcs18a001: 33521664
14:53:10: ReadyCcs18a010: 1090486272
14:53:10: ReadyCcs18a011: 1107263488
14:53:10: ReadyCcs18a100: 2164228096
14:53:10: ReadyCcs18a101: 2181005312
14:53:10: ReadyCcs18a110: 3237969920
14:53:10: ReadyCcs18a111: 3254747136
14:53:10: Card Capacity is : 32.000000 GB
14:53:10: SendFirstOCR : 1375698944
14:53:10: SendOCR : 1375698944
14:53:10: SendOCR : 1375698944
14:53:10: ExpectOCR : 3254747136
14:53:10: globalSpeedMode : SDR50
14:53:10: globalPowerUp : powerCycle
14:53:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, False) , Command count = 108 ] 
14:53:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, True) , Command count = 109 ] 
14:53:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:12: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 110 ] 
14:53:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:12: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 111 ] 
14:53:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116F0>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 112 ] 
14:53:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111780>, <py_sfcl.CommandDataDefinition object at 0x061117B0>) , Command count = 113 ] 
14:53:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:13: [ SetCardRCA(0x1, 0xD555) , Command count = 114 ] 
14:53:13: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:13: [ SelectCard(0x1, True) , Command count = 115 ] 
14:53:13: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:13: [ SetBusWidth(0x4) , Command count = 116 ] 
14:53:13: VS_Flag========================1
14:53:13: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:13: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 117 ] 
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:13: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 118 ] 
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:13: Host Frequency set to 25000 KHz

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:13: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 119 ] 
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111A50>, 0x0, False) , Command count = 120 ] 
14:53:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:13: ####CSD Registe 2.0 Values####
14:53:13: CSD_STRUCTURE                                 :0x1
14:53:13: Reserv1                                       :0x0
14:53:13: Time Access 1 TAAC                            :0xe
14:53:13: Time Access 2 NSAC*100                        :0x0
14:53:13: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:13: Card Command Classess CCC                     :0x5b5
14:53:13: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:14: DSR(driver stage register)  DSR_IMP           :0x0
14:53:14: Reserv2                                       :0x0
14:53:14: Device Size C_SIZE                            :0xedc8
14:53:14: Reserv3                                       :0x0
14:53:14: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:14: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:14: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:14: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:14: Reserv4                                       :0x0
14:53:14: Write Speed Factor R2W_FACTOR                 :0x2
14:53:14: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:14: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:14: FILE_FORMAT_GRP                               :0x0
14:53:14: COPY flag                                     :0x1
14:53:14: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:14: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:14: File_Format                                   :0x0
14:53:14: CRC                                           :0x0
14:53:14: ####CSD Registe Values####  

14:53:14: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:14: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111AE0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 121 ] 
14:53:14: Protected Area Size 0x28000
14:53:14: Bus Width           2
14:53:14: Secure Mode         0
14:53:14: Speed  Class        4
14:53:14: Perf Move           0
14:53:14: Au Size             9
14:53:14: Erase Size          15
14:53:14: Erase Timeout       1
14:53:14: Erase offset        1
14:53:14: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:14: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:14: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 122 ] 
14:53:14: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:14: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:14: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 123 ] 
14:53:14: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:14: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:16: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:16: Host Frequency set to 25000 KHz
14:53:16: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:16: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:16: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111EA0>, 0x0, True) , Command count = 124 ] 
14:53:16: [GO18_globalSetVolt]### Host voltage value is set.
14:53:16: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111CF0>, 0x0, False) , Command count = 125 ] 
14:53:16: [GO18_globalSetVolt]### Host voltage value is set.
14:53:16: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 126 ] 
14:53:16: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 127 ] 
14:53:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:16: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 128 ] 
14:53:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:16: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E40>, <py_sfcl.CommandDataDefinition object at 0x06111DE0>) , Command count = 129 ] 
14:53:16: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E70>, <py_sfcl.CommandDataDefinition object at 0x06111ED0>) , Command count = 130 ] 
14:53:16: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:16: [ SetCardRCA(0x1, 0xD555) , Command count = 131 ] 
14:53:16: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:16: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:16: Host Frequency set to 25000 KHz
14:53:16: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:16: ####CSD Registe 2.0 Values####
14:53:16: CSD_STRUCTURE                                 :0x1
14:53:16: Reserv1                                       :0x0
14:53:16: Time Access 1 TAAC                            :0xe
14:53:16: Time Access 2 NSAC*100                        :0x0
14:53:16: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:16: Card Command Classess CCC                     :0x5b5
14:53:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:16: DSR(driver stage register)  DSR_IMP           :0x0
14:53:16: Reserv2                                       :0x0
14:53:16: Device Size C_SIZE                            :0xedc8
14:53:16: Reserv3                                       :0x0
14:53:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:16: Reserv4                                       :0x0
14:53:16: Write Speed Factor R2W_FACTOR                 :0x2
14:53:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:16: FILE_FORMAT_GRP                               :0x0
14:53:16: COPY flag                                     :0x1
14:53:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:16: File_Format                                   :0x0
14:53:16: CRC                                           :0x0
14:53:16: ####CSD Registe Values####  

14:53:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:16: [GetSCRRegisterEntry] Passed
14:53:16: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:16: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:16: Data_Status_After Erases          : 0
14:53:16: CPRM Security Support             : No Security
14:53:16: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:16: Spec. Version                     : Version 3.0X
14:53:16: Extended Security Support         : Extended_Security_Not_Supported
14:53:16: Command Support                   : COMMAND_SUPPORT
14:53:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F60>, <py_sfcl.CommandDataDefinition object at 0x06111F90>) , Command count = 132 ] 
14:53:16: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x06119030>) , Command count = 133 ] 
14:53:16: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:16: [ SetBusWidth(0x4) , Command count = 134 ] 
14:53:16: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:16: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061190F0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 135 ] 
14:53:16: Protected Area Size 0x28000
14:53:16: Bus Width           2
14:53:16: Secure Mode         0
14:53:16: Speed  Class        4
14:53:16: Perf Move           0
14:53:16: Au Size             9
14:53:16: Erase Size          15
14:53:16: Erase Timeout       1
14:53:16: Erase offset        1
14:53:16: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:16: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:16: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 136 ] 
14:53:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:17: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:17: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:17: Host Frequency set to 100000 KHz
14:53:17: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:17: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:17: ####CSD Registe 2.0 Values####
14:53:17: CSD_STRUCTURE                                 :0x1
14:53:17: Reserv1                                       :0x0
14:53:17: Time Access 1 TAAC                            :0xe
14:53:17: Time Access 2 NSAC*100                        :0x0
14:53:17: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:17: Card Command Classess CCC                     :0x5b5
14:53:17: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:17: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:17: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:17: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:17: DSR(driver stage register)  DSR_IMP           :0x0
14:53:17: Reserv2                                       :0x0
14:53:17: Device Size C_SIZE                            :0xedc8
14:53:17: Reserv3                                       :0x0
14:53:17: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:17: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:17: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:17: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:17: Reserv4                                       :0x0
14:53:17: Write Speed Factor R2W_FACTOR                 :0x2
14:53:17: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:17: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:17: FILE_FORMAT_GRP                               :0x0
14:53:17: COPY flag                                     :0x1
14:53:17: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:17: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:17: File_Format                                   :0x0
14:53:17: CRC                                           :0x0
14:53:17: ####CSD Registe Values####  

14:53:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193C0>, <py_sfcl.CommandDataDefinition object at 0x061191E0>) , Command count = 137 ] 
14:53:17: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119240>, <py_sfcl.CommandDataDefinition object at 0x06119270>) , Command count = 138 ] 
14:53:17: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:17: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x061192D0>, 0x0, False) , Command count = 139 ] 
14:53:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x061192D0>, 0x0, True) , Command count = 140 ] 
14:53:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:19: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 141 ] 
14:53:19: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:19: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:19: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:19: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:19: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:19: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:19: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 142 ] 
14:53:19: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:19: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119420>, <py_sfcl.CommandDataDefinition object at 0x06119450>) , Command count = 143 ] 
14:53:19: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194B0>, <py_sfcl.CommandDataDefinition object at 0x061194E0>) , Command count = 144 ] 
14:53:19: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:19: [ SetCardRCA(0x1, 0xD555) , Command count = 145 ] 
14:53:19: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:19: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:19: [ SetBusWidth(0x4) , Command count = 146 ] 
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:19: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 147 ] 
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:19: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:19: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 148 ] 
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:20: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 149 ] 
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:20: Host Frequency set to 25000 KHz

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:20: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 150 ] 
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119750>, 0x0, False) , Command count = 151 ] 
14:53:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:21: SendOCR: 1107263488
14:53:21: ExcpectOCR: 3254747136
14:53:21: SendFirstOCR: 1107263488
14:53:21: SendNextOCR: 1107263488
14:53:21: SingleCommand: 0
14:53:21: SingleCommandTestType: 1
14:53:21: Identification: 1
14:53:21: ProtocolMode: 1
14:53:21: VerifyType: 0
14:53:21: SendCMD0: 1
14:53:21: SendCMD8: 1
14:53:21: SendCMD58: 1
14:53:21: SetPower: 1
14:53:21: HcsXpcS18r000: 16744448
14:53:21: HcsXpcS18r001: 33521664
14:53:21: HcsXpcS18r010: 285179904
14:53:21: HcsXpcS18r011: 301957120
14:53:21: HcsXpcS18r100: 1090486272
14:53:21: HcsXpcS18r101: 1107263488
14:53:21: HcsXpcS18r110: 1358921728
14:53:21: HcsXpcS18r111: 1375698944
14:53:21: ReadyCcs18a000: 16744448
14:53:21: ReadyCcs18a001: 33521664
14:53:21: ReadyCcs18a010: 1090486272
14:53:21: ReadyCcs18a011: 1107263488
14:53:21: ReadyCcs18a100: 2164228096
14:53:21: ReadyCcs18a101: 2181005312
14:53:21: ReadyCcs18a110: 3237969920
14:53:21: ReadyCcs18a111: 3254747136
14:53:21: Card Capacity is : 32.000000 GB
14:53:21: SendFirstOCR : 1375698944
14:53:21: SendOCR : 1375698944
14:53:21: SendOCR : 1375698944
14:53:21: ExpectOCR : 3254747136
14:53:21: globalSpeedMode : SDR50
14:53:21: globalPowerUp : powerCycle
14:53:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, False) , Command count = 152 ] 
14:53:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, True) , Command count = 153 ] 
14:53:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:23: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 154 ] 
14:53:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:23: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 155 ] 
14:53:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:23: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061198A0>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 156 ] 
14:53:23: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119930>, <py_sfcl.CommandDataDefinition object at 0x06119960>) , Command count = 157 ] 
14:53:23: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:23: [ SetCardRCA(0x1, 0xD555) , Command count = 158 ] 
14:53:23: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:23: [ SelectCard(0x1, True) , Command count = 159 ] 
14:53:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:23: [ SetBusWidth(0x4) , Command count = 160 ] 
14:53:23: VS_Flag========================1
14:53:23: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:23: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 161 ] 
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:23: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 162 ] 
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:24: Host Frequency set to 25000 KHz

14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:24: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 163 ] 
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119B70>, 0x0, False) , Command count = 164 ] 
14:53:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:24: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:24: ####CSD Registe 2.0 Values####
14:53:24: CSD_STRUCTURE                                 :0x1
14:53:24: Reserv1                                       :0x0
14:53:24: Time Access 1 TAAC                            :0xe
14:53:24: Time Access 2 NSAC*100                        :0x0
14:53:24: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:24: Card Command Classess CCC                     :0x5b5
14:53:24: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:24: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:24: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:24: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:24: DSR(driver stage register)  DSR_IMP           :0x0
14:53:24: Reserv2                                       :0x0
14:53:24: Device Size C_SIZE                            :0xedc8
14:53:24: Reserv3                                       :0x0
14:53:24: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:24: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:24: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:24: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:24: Reserv4                                       :0x0
14:53:24: Write Speed Factor R2W_FACTOR                 :0x2
14:53:24: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:24: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:24: FILE_FORMAT_GRP                               :0x0
14:53:24: COPY flag                                     :0x1
14:53:24: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:24: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:24: File_Format                                   :0x0
14:53:25: CRC                                           :0x0
14:53:25: ####CSD Registe Values####  

14:53:25: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:25: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119C00>, <0x200/0x200, Spc, pat:0x0>) , Command count = 165 ] 
14:53:25: Protected Area Size 0x28000
14:53:25: Bus Width           2
14:53:25: Secure Mode         0
14:53:25: Speed  Class        4
14:53:25: Perf Move           0
14:53:25: Au Size             9
14:53:25: Erase Size          15
14:53:25: Erase Timeout       1
14:53:25: Erase offset        1
14:53:25: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:25: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:25: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 166 ] 
14:53:25: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:25: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:25: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 167 ] 
14:53:25: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:25: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:27: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:27: Host Frequency set to 25000 KHz
14:53:27: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:27: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:27: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119EA0>, 0x0, True) , Command count = 168 ] 
14:53:27: [GO18_globalSetVolt]### Host voltage value is set.
14:53:27: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119CF0>, 0x0, False) , Command count = 169 ] 
14:53:27: [GO18_globalSetVolt]### Host voltage value is set.
14:53:27: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 170 ] 
14:53:27: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 171 ] 
14:53:27: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:27: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:27: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:27: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:27: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:27: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 172 ] 
14:53:27: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:27: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py_sfcl.CommandDataDefinition object at 0x06119DE0>) , Command count = 173 ] 
14:53:27: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E70>, <py_sfcl.CommandDataDefinition object at 0x06119ED0>) , Command count = 174 ] 
14:53:27: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:27: [ SetCardRCA(0x1, 0xD555) , Command count = 175 ] 
14:53:27: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:27: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:27: Host Frequency set to 25000 KHz
14:53:27: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:27: ####CSD Registe 2.0 Values####
14:53:27: CSD_STRUCTURE                                 :0x1
14:53:27: Reserv1                                       :0x0
14:53:27: Time Access 1 TAAC                            :0xe
14:53:27: Time Access 2 NSAC*100                        :0x0
14:53:27: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:27: Card Command Classess CCC                     :0x5b5
14:53:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:27: DSR(driver stage register)  DSR_IMP           :0x0
14:53:27: Reserv2                                       :0x0
14:53:27: Device Size C_SIZE                            :0xedc8
14:53:27: Reserv3                                       :0x0
14:53:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:27: Reserv4                                       :0x0
14:53:27: Write Speed Factor R2W_FACTOR                 :0x2
14:53:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:27: FILE_FORMAT_GRP                               :0x0
14:53:27: COPY flag                                     :0x1
14:53:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:27: File_Format                                   :0x0
14:53:27: CRC                                           :0x0
14:53:27: ####CSD Registe Values####  

14:53:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:27: [GetSCRRegisterEntry] Passed
14:53:27: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:27: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:27: Data_Status_After Erases          : 0
14:53:27: CPRM Security Support             : No Security
14:53:27: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:27: Spec. Version                     : Version 3.0X
14:53:27: Extended Security Support         : Extended_Security_Not_Supported
14:53:27: Command Support                   : COMMAND_SUPPORT
14:53:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F60>, <py_sfcl.CommandDataDefinition object at 0x06119F90>) , Command count = 176 ] 
14:53:27: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E180>, <py_sfcl.CommandDataDefinition object at 0x0611E030>) , Command count = 177 ] 
14:53:27: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:27: [ SetBusWidth(0x4) , Command count = 178 ] 
14:53:27: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:27: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E0F0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 179 ] 
14:53:27: Protected Area Size 0x28000
14:53:27: Bus Width           2
14:53:27: Secure Mode         0
14:53:27: Speed  Class        4
14:53:27: Perf Move           0
14:53:27: Au Size             9
14:53:27: Erase Size          15
14:53:27: Erase Timeout       1
14:53:27: Erase offset        1
14:53:27: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:27: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:27: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 180 ] 
14:53:27: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:27: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:27: Host Frequency set to 100000 KHz
14:53:27: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:27: ####CSD Registe 2.0 Values####
14:53:27: CSD_STRUCTURE                                 :0x1
14:53:27: Reserv1                                       :0x0
14:53:27: Time Access 1 TAAC                            :0xe
14:53:28: Time Access 2 NSAC*100                        :0x0
14:53:28: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:28: Card Command Classess CCC                     :0x5b5
14:53:28: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:28: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:28: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:28: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:28: DSR(driver stage register)  DSR_IMP           :0x0
14:53:28: Reserv2                                       :0x0
14:53:28: Device Size C_SIZE                            :0xedc8
14:53:28: Reserv3                                       :0x0
14:53:28: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:28: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:28: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:28: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:28: Reserv4                                       :0x0
14:53:28: Write Speed Factor R2W_FACTOR                 :0x2
14:53:28: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:28: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:28: FILE_FORMAT_GRP                               :0x0
14:53:28: COPY flag                                     :0x1
14:53:28: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:28: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:28: File_Format                                   :0x0
14:53:28: CRC                                           :0x0
14:53:28: ####CSD Registe Values####  

14:53:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x0611E150>) , Command count = 181 ] 
14:53:28: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1E0>, <py_sfcl.CommandDataDefinition object at 0x0611E210>) , Command count = 182 ] 
14:53:28: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:28: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E270>, 0x0, False) , Command count = 183 ] 
14:53:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E270>, 0x0, True) , Command count = 184 ] 
14:53:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:30: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 185 ] 
14:53:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 186 ] 
14:53:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3C0>, <py_sfcl.CommandDataDefinition object at 0x0611E3F0>) , Command count = 187 ] 
14:53:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E450>, <py_sfcl.CommandDataDefinition object at 0x0611E480>) , Command count = 188 ] 
14:53:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:30: [ SetCardRCA(0x1, 0xD555) , Command count = 189 ] 
14:53:31: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:31: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:31: [ SetBusWidth(0x4) , Command count = 190 ] 
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:31: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 191 ] 
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:31: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 192 ] 
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:31: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 193 ] 
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:31: Host Frequency set to 25000 KHz

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:31: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 194 ] 
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:31: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E6F0>, 0x0, False) , Command count = 195 ] 
14:53:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:32: SendOCR: 1107263488
14:53:32: ExcpectOCR: 3254747136
14:53:32: SendFirstOCR: 1107263488
14:53:32: SendNextOCR: 1107263488
14:53:32: SingleCommand: 0
14:53:32: SingleCommandTestType: 1
14:53:32: Identification: 1
14:53:32: ProtocolMode: 1
14:53:32: VerifyType: 0
14:53:32: SendCMD0: 1
14:53:32: SendCMD8: 1
14:53:32: SendCMD58: 1
14:53:32: SetPower: 1
14:53:32: HcsXpcS18r000: 16744448
14:53:32: HcsXpcS18r001: 33521664
14:53:32: HcsXpcS18r010: 285179904
14:53:32: HcsXpcS18r011: 301957120
14:53:32: HcsXpcS18r100: 1090486272
14:53:32: HcsXpcS18r101: 1107263488
14:53:32: HcsXpcS18r110: 1358921728
14:53:32: HcsXpcS18r111: 1375698944
14:53:32: ReadyCcs18a000: 16744448
14:53:32: ReadyCcs18a001: 33521664
14:53:32: ReadyCcs18a010: 1090486272
14:53:32: ReadyCcs18a011: 1107263488
14:53:32: ReadyCcs18a100: 2164228096
14:53:32: ReadyCcs18a101: 2181005312
14:53:32: ReadyCcs18a110: 3237969920
14:53:32: ReadyCcs18a111: 3254747136
14:53:32: Card Capacity is : 32.000000 GB
14:53:32: SendFirstOCR : 1375698944
14:53:32: SendOCR : 1375698944
14:53:32: SendOCR : 1375698944
14:53:32: ExpectOCR : 3254747136
14:53:32: globalSpeedMode : SDR50
14:53:32: globalPowerUp : powerCycle
14:53:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, False) , Command count = 196 ] 
14:53:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, True) , Command count = 197 ] 
14:53:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:34: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 198 ] 
14:53:34: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:34: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:34: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:34: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:34: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 199 ] 
14:53:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:34: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x0611E870>) , Command count = 200 ] 
14:53:34: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E8D0>, <py_sfcl.CommandDataDefinition object at 0x0611E900>) , Command count = 201 ] 
14:53:34: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:34: [ SetCardRCA(0x1, 0xD555) , Command count = 202 ] 
14:53:34: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:34: [ SelectCard(0x1, True) , Command count = 203 ] 
14:53:34: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:34: [ SetBusWidth(0x4) , Command count = 204 ] 
14:53:34: VS_Flag========================1
14:53:34: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:34: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 205 ] 
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:34: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 206 ] 
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:34: Host Frequency set to 25000 KHz

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:34: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 207 ] 
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EB10>, 0x0, False) , Command count = 208 ] 
14:53:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:34: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:34: ####CSD Registe 2.0 Values####
14:53:34: CSD_STRUCTURE                                 :0x1
14:53:34: Reserv1                                       :0x0
14:53:34: Time Access 1 TAAC                            :0xe
14:53:34: Time Access 2 NSAC*100                        :0x0
14:53:34: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:34: Card Command Classess CCC                     :0x5b5
14:53:34: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:34: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:34: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:34: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:34: DSR(driver stage register)  DSR_IMP           :0x0
14:53:34: Reserv2                                       :0x0
14:53:34: Device Size C_SIZE                            :0xedc8
14:53:34: Reserv3                                       :0x0
14:53:34: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:34: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:34: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:34: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:34: Reserv4                                       :0x0
14:53:34: Write Speed Factor R2W_FACTOR                 :0x2
14:53:34: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:34: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:34: FILE_FORMAT_GRP                               :0x0
14:53:34: COPY flag                                     :0x1
14:53:34: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:34: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:34: File_Format                                   :0x0
14:53:34: CRC                                           :0x0
14:53:34: ####CSD Registe Values####  

14:53:34: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:34: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611EBA0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 209 ] 
14:53:34: Protected Area Size 0x28000
14:53:34: Bus Width           2
14:53:34: Secure Mode         0
14:53:34: Speed  Class        4
14:53:34: Perf Move           0
14:53:34: Au Size             9
14:53:34: Erase Size          15
14:53:34: Erase Timeout       1
14:53:34: Erase offset        1
14:53:34: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:34: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 210 ] 
14:53:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:34: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 211 ] 
14:53:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:34: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:36: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:36: Host Frequency set to 25000 KHz
14:53:36: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:36: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:36: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EE40>, 0x0, True) , Command count = 212 ] 
14:53:36: [GO18_globalSetVolt]### Host voltage value is set.
14:53:36: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EC90>, 0x0, False) , Command count = 213 ] 
14:53:36: [GO18_globalSetVolt]### Host voltage value is set.
14:53:36: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 214 ] 
14:53:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 215 ] 
14:53:37: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:37: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:37: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:37: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:37: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 216 ] 
14:53:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:37: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EDE0>, <py_sfcl.CommandDataDefinition object at 0x0611ED80>) , Command count = 217 ] 
14:53:37: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE10>, <py_sfcl.CommandDataDefinition object at 0x0611EE70>) , Command count = 218 ] 
14:53:37: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:37: [ SetCardRCA(0x1, 0xD555) , Command count = 219 ] 
14:53:37: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:37: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:37: Host Frequency set to 25000 KHz
14:53:37: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:37: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:37: ####CSD Registe 2.0 Values####
14:53:37: CSD_STRUCTURE                                 :0x1
14:53:37: Reserv1                                       :0x0
14:53:37: Time Access 1 TAAC                            :0xe
14:53:37: Time Access 2 NSAC*100                        :0x0
14:53:37: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:37: Card Command Classess CCC                     :0x5b5
14:53:37: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:37: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:37: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:37: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:37: DSR(driver stage register)  DSR_IMP           :0x0
14:53:37: Reserv2                                       :0x0
14:53:37: Device Size C_SIZE                            :0xedc8
14:53:37: Reserv3                                       :0x0
14:53:37: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:37: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:37: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:37: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:37: Reserv4                                       :0x0
14:53:37: Write Speed Factor R2W_FACTOR                 :0x2
14:53:37: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:37: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:37: FILE_FORMAT_GRP                               :0x0
14:53:37: COPY flag                                     :0x1
14:53:37: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:37: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:37: File_Format                                   :0x0
14:53:37: CRC                                           :0x0
14:53:37: ####CSD Registe Values####  

14:53:37: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:37: [GetSCRRegisterEntry] Passed
14:53:37: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:37: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:37: Data_Status_After Erases          : 0
14:53:37: CPRM Security Support             : No Security
14:53:37: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:37: Spec. Version                     : Version 3.0X
14:53:37: Extended Security Support         : Extended_Security_Not_Supported
14:53:37: Command Support                   : COMMAND_SUPPORT
14:53:37: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF00>, <py_sfcl.CommandDataDefinition object at 0x0611EF30>) , Command count = 220 ] 
14:53:37: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF90>, <py_sfcl.CommandDataDefinition object at 0x0611EFC0>) , Command count = 221 ] 
14:53:37: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:37: [ SetBusWidth(0x4) , Command count = 222 ] 
14:53:37: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:37: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061230C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 223 ] 
14:53:37: Protected Area Size 0x28000
14:53:37: Bus Width           2
14:53:37: Secure Mode         0
14:53:37: Speed  Class        4
14:53:37: Perf Move           0
14:53:37: Au Size             9
14:53:37: Erase Size          15
14:53:37: Erase Timeout       1
14:53:37: Erase offset        1
14:53:37: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:37: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:37: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 224 ] 
14:53:37: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:37: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:37: Host Frequency set to 100000 KHz
14:53:37: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:37: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:37: ####CSD Registe 2.0 Values####
14:53:37: CSD_STRUCTURE                                 :0x1
14:53:37: Reserv1                                       :0x0
14:53:37: Time Access 1 TAAC                            :0xe
14:53:37: Time Access 2 NSAC*100                        :0x0
14:53:37: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:37: Card Command Classess CCC                     :0x5b5
14:53:37: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:37: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:37: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:37: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:37: DSR(driver stage register)  DSR_IMP           :0x0
14:53:37: Reserv2                                       :0x0
14:53:37: Device Size C_SIZE                            :0xedc8
14:53:37: Reserv3                                       :0x0
14:53:37: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:37: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:37: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:37: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:37: Reserv4                                       :0x0
14:53:37: Write Speed Factor R2W_FACTOR                 :0x2
14:53:37: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:37: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:37: FILE_FORMAT_GRP                               :0x0
14:53:37: COPY flag                                     :0x1
14:53:37: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:37: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:37: File_Format                                   :0x0
14:53:37: CRC                                           :0x0
14:53:37: ####CSD Registe Values####  

14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 225 ] 
14:53:37: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123180>, <py_sfcl.CommandDataDefinition object at 0x061231B0>) , Command count = 226 ] 
14:53:37: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:37: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123210>, 0x0, False) , Command count = 227 ] 
14:53:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123210>, 0x0, True) , Command count = 228 ] 
14:53:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 229 ] 
14:53:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 230 ] 
14:53:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123360>, <py_sfcl.CommandDataDefinition object at 0x06123390>) , Command count = 231 ] 
14:53:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233F0>, <py_sfcl.CommandDataDefinition object at 0x06123420>) , Command count = 232 ] 
14:53:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:39: [ SetCardRCA(0x1, 0xD555) , Command count = 233 ] 
14:53:39: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:39: [ SetBusWidth(0x4) , Command count = 234 ] 
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:39: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 235 ] 
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:39: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 236 ] 
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:40: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 237 ] 
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:40: Host Frequency set to 25000 KHz

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 238 ] 
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123690>, 0x0, False) , Command count = 239 ] 
14:53:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:40: SendOCR: 1107263488
14:53:40: ExcpectOCR: 3254747136
14:53:40: SendFirstOCR: 1107263488
14:53:40: SendNextOCR: 1107263488
14:53:40: SingleCommand: 0
14:53:40: SingleCommandTestType: 1
14:53:40: Identification: 1
14:53:40: ProtocolMode: 1
14:53:40: VerifyType: 0
14:53:40: SendCMD0: 1
14:53:40: SendCMD8: 1
14:53:40: SendCMD58: 1
14:53:40: SetPower: 1
14:53:40: HcsXpcS18r000: 16744448
14:53:40: HcsXpcS18r001: 33521664
14:53:40: HcsXpcS18r010: 285179904
14:53:40: HcsXpcS18r011: 301957120
14:53:40: HcsXpcS18r100: 1090486272
14:53:40: HcsXpcS18r101: 1107263488
14:53:40: HcsXpcS18r110: 1358921728
14:53:40: HcsXpcS18r111: 1375698944
14:53:41: ReadyCcs18a000: 16744448
14:53:41: ReadyCcs18a001: 33521664
14:53:41: ReadyCcs18a010: 1090486272
14:53:41: ReadyCcs18a011: 1107263488
14:53:41: ReadyCcs18a100: 2164228096
14:53:41: ReadyCcs18a101: 2181005312
14:53:41: ReadyCcs18a110: 3237969920
14:53:41: ReadyCcs18a111: 3254747136
14:53:41: Card Capacity is : 32.000000 GB
14:53:41: SendFirstOCR : 1375698944
14:53:41: SendOCR : 1375698944
14:53:41: SendOCR : 1375698944
14:53:41: ExpectOCR : 3254747136
14:53:41: globalSpeedMode : SDR50
14:53:41: globalPowerUp : powerCycle
14:53:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061234E0>, 0x0, False) , Command count = 240 ] 
14:53:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061234E0>, 0x0, True) , Command count = 241 ] 
14:53:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:43: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 242 ] 
14:53:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 243 ] 
14:53:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061237E0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 244 ] 
14:53:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123870>, <py_sfcl.CommandDataDefinition object at 0x061238A0>) , Command count = 245 ] 
14:53:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:43: [ SetCardRCA(0x1, 0xD555) , Command count = 246 ] 
14:53:43: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:43: [ SelectCard(0x1, True) , Command count = 247 ] 
14:53:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:43: [ SetBusWidth(0x4) , Command count = 248 ] 
14:53:43: VS_Flag========================1
14:53:43: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 249 ] 
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:43: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 250 ] 
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:43: Host Frequency set to 25000 KHz

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 251 ] 
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x05172060>, 0x0, False) , Command count = 252 ] 
14:53:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:44: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:44: ####CSD Registe 2.0 Values####
14:53:44: CSD_STRUCTURE                                 :0x1
14:53:44: Reserv1                                       :0x0
14:53:44: Time Access 1 TAAC                            :0xe
14:53:44: Time Access 2 NSAC*100                        :0x0
14:53:44: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:44: Card Command Classess CCC                     :0x5b5
14:53:44: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:44: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:44: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:44: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:44: DSR(driver stage register)  DSR_IMP           :0x0
14:53:44: Reserv2                                       :0x0
14:53:44: Device Size C_SIZE                            :0xedc8
14:53:44: Reserv3                                       :0x0
14:53:44: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:44: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:44: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:44: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:44: Reserv4                                       :0x0
14:53:44: Write Speed Factor R2W_FACTOR                 :0x2
14:53:44: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:44: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:44: FILE_FORMAT_GRP                               :0x0
14:53:44: COPY flag                                     :0x1
14:53:44: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:44: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:44: File_Format                                   :0x0
14:53:44: CRC                                           :0x0
14:53:44: ####CSD Registe Values####  

14:53:44: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:44: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123A20>, <0x200/0x200, Spc, pat:0x0>) , Command count = 253 ] 
14:53:44: Protected Area Size 0x28000
14:53:44: Bus Width           2
14:53:44: Secure Mode         0
14:53:44: Speed  Class        4
14:53:44: Perf Move           0
14:53:44: Au Size             9
14:53:44: Erase Size          15
14:53:44: Erase Timeout       1
14:53:44: Erase offset        1
14:53:44: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:44: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:44: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 254 ] 
14:53:44: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:44: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:44: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 255 ] 
14:53:44: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:44: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:46: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:46: Host Frequency set to 25000 KHz
14:53:46: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:46: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:46: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x05267E70>, 0x0, True) , Command count = 256 ] 
14:53:46: [GO18_globalSetVolt]### Host voltage value is set.
14:53:46: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0526B450>, 0x0, False) , Command count = 257 ] 
14:53:46: [GO18_globalSetVolt]### Host voltage value is set.
14:53:46: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 258 ] 
14:53:46: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 259 ] 
14:53:46: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:46: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:46: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:46: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:46: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 260 ] 
14:53:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:46: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C210>, <py_sfcl.CommandDataDefinition object at 0x06123C00>) , Command count = 261 ] 
14:53:46: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x06123B70>) , Command count = 262 ] 
14:53:46: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:46: [ SetCardRCA(0x1, 0xD555) , Command count = 263 ] 
14:53:46: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:46: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:46: Host Frequency set to 25000 KHz
14:53:46: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:46: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:46: ####CSD Registe 2.0 Values####
14:53:46: CSD_STRUCTURE                                 :0x1
14:53:46: Reserv1                                       :0x0
14:53:46: Time Access 1 TAAC                            :0xe
14:53:46: Time Access 2 NSAC*100                        :0x0
14:53:46: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:46: Card Command Classess CCC                     :0x5b5
14:53:46: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:46: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:46: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:46: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:46: DSR(driver stage register)  DSR_IMP           :0x0
14:53:46: Reserv2                                       :0x0
14:53:46: Device Size C_SIZE                            :0xedc8
14:53:46: Reserv3                                       :0x0
14:53:46: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:46: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:46: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:46: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:46: Reserv4                                       :0x0
14:53:46: Write Speed Factor R2W_FACTOR                 :0x2
14:53:46: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:46: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:46: FILE_FORMAT_GRP                               :0x0
14:53:46: COPY flag                                     :0x1
14:53:46: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:46: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:46: File_Format                                   :0x0
14:53:46: CRC                                           :0x0
14:53:46: ####CSD Registe Values####  

14:53:46: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:46: [GetSCRRegisterEntry] Passed
14:53:46: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:46: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:46: Data_Status_After Erases          : 0
14:53:46: CPRM Security Support             : No Security
14:53:46: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:46: Spec. Version                     : Version 3.0X
14:53:46: Extended Security Support         : Extended_Security_Not_Supported
14:53:46: Command Support                   : COMMAND_SUPPORT
14:53:46: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CC60>, <py_sfcl.CommandDataDefinition object at 0x06123E40>) , Command count = 264 ] 
14:53:46: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 265 ] 
14:53:46: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:46: [ SetBusWidth(0x4) , Command count = 266 ] 
14:53:46: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:46: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123D20>, <0x200/0x200, Spc, pat:0x0>) , Command count = 267 ] 
14:53:46: Protected Area Size 0x28000
14:53:46: Bus Width           2
14:53:46: Secure Mode         0
14:53:46: Speed  Class        4
14:53:46: Perf Move           0
14:53:46: Au Size             9
14:53:46: Erase Size          15
14:53:46: Erase Timeout       1
14:53:46: Erase offset        1
14:53:46: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:46: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:46: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 268 ] 
14:53:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:46: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:47: Host Frequency set to 100000 KHz
14:53:47: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:47: ####CSD Registe 2.0 Values####
14:53:47: CSD_STRUCTURE                                 :0x1
14:53:47: Reserv1                                       :0x0
14:53:47: Time Access 1 TAAC                            :0xe
14:53:47: Time Access 2 NSAC*100                        :0x0
14:53:47: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:47: Card Command Classess CCC                     :0x5b5
14:53:47: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:47: DSR(driver stage register)  DSR_IMP           :0x0
14:53:47: Reserv2                                       :0x0
14:53:47: Device Size C_SIZE                            :0xedc8
14:53:47: Reserv3                                       :0x0
14:53:47: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:47: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:47: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:47: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:47: Reserv4                                       :0x0
14:53:47: Write Speed Factor R2W_FACTOR                 :0x2
14:53:47: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:47: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:47: FILE_FORMAT_GRP                               :0x0
14:53:47: COPY flag                                     :0x1
14:53:47: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:47: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:47: File_Format                                   :0x0
14:53:47: CRC                                           :0x0
14:53:47: ####CSD Registe Values####  

14:53:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CF90>, <py_sfcl.CommandDataDefinition object at 0x06123F30>) , Command count = 269 ] 
14:53:47: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CDE0>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 270 ] 
14:53:47: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:47: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285FC0>, 0x0, False) , Command count = 271 ] 
14:53:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285FC0>, 0x0, True) , Command count = 272 ] 
14:53:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 273 ] 
14:53:49: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:49: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:49: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:49: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:49: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:49: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 274 ] 
14:53:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:49: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285510>, <py_sfcl.CommandDataDefinition object at 0x0528AA20>) , Command count = 275 ] 
14:53:49: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285960>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 276 ] 
14:53:49: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:49: [ SetCardRCA(0x1, 0xD555) , Command count = 277 ] 
14:53:49: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:49: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:49: [ SetBusWidth(0x4) , Command count = 278 ] 
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:49: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 279 ] 
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:49: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 280 ] 
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:49: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 281 ] 
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:49: Host Frequency set to 25000 KHz

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:49: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 282 ] 
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, False) , Command count = 283 ] 
14:53:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:49: SendOCR: 1107263488
14:53:49: ExcpectOCR: 3254747136
14:53:49: SendFirstOCR: 1107263488
14:53:49: SendNextOCR: 1107263488
14:53:49: SingleCommand: 0
14:53:49: SingleCommandTestType: 1
14:53:49: Identification: 1
14:53:49: ProtocolMode: 1
14:53:49: VerifyType: 0
14:53:49: SendCMD0: 1
14:53:49: SendCMD8: 1
14:53:49: SendCMD58: 1
14:53:49: SetPower: 1
14:53:49: HcsXpcS18r000: 16744448
14:53:49: HcsXpcS18r001: 33521664
14:53:49: HcsXpcS18r010: 285179904
14:53:49: HcsXpcS18r011: 301957120
14:53:49: HcsXpcS18r100: 1090486272
14:53:49: HcsXpcS18r101: 1107263488
14:53:49: HcsXpcS18r110: 1358921728
14:53:49: HcsXpcS18r111: 1375698944
14:53:49: ReadyCcs18a000: 16744448
14:53:49: ReadyCcs18a001: 33521664
14:53:49: ReadyCcs18a010: 1090486272
14:53:49: ReadyCcs18a011: 1107263488
14:53:49: ReadyCcs18a100: 2164228096
14:53:49: ReadyCcs18a101: 2181005312
14:53:49: ReadyCcs18a110: 3237969920
14:53:49: ReadyCcs18a111: 3254747136
14:53:49: Card Capacity is : 32.000000 GB
14:53:49: SendFirstOCR : 1375698944
14:53:49: SendOCR : 1375698944
14:53:49: SendOCR : 1375698944
14:53:49: ExpectOCR : 3254747136
14:53:49: globalSpeedMode : SDR50
14:53:49: globalPowerUp : powerCycle
14:53:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, False) , Command count = 284 ] 
14:53:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, True) , Command count = 285 ] 
14:53:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:51: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 286 ] 
14:53:51: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:51: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:51: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:51: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:51: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:51: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 287 ] 
14:53:51: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:51: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A090>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 288 ] 
14:53:51: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A030>, <py_sfcl.CommandDataDefinition object at 0x06127120>) , Command count = 289 ] 
14:53:51: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:51: [ SetCardRCA(0x1, 0xD555) , Command count = 290 ] 
14:53:51: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:52: [ SelectCard(0x1, True) , Command count = 291 ] 
14:53:52: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:52: [ SetBusWidth(0x4) , Command count = 292 ] 
14:53:52: VS_Flag========================1
14:53:52: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:52: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 293 ] 
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:52: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 294 ] 
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:52: Host Frequency set to 25000 KHz

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:52: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 295 ] 
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:52: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:52: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1BD0>, 0x0, False) , Command count = 296 ] 
14:53:52: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:52: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:52: ####CSD Registe 2.0 Values####
14:53:52: CSD_STRUCTURE                                 :0x1
14:53:52: Reserv1                                       :0x0
14:53:52: Time Access 1 TAAC                            :0xe
14:53:52: Time Access 2 NSAC*100                        :0x0
14:53:52: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:52: Card Command Classess CCC                     :0x5b5
14:53:52: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:52: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:52: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:52: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:52: DSR(driver stage register)  DSR_IMP           :0x0
14:53:52: Reserv2                                       :0x0
14:53:52: Device Size C_SIZE                            :0xedc8
14:53:52: Reserv3                                       :0x0
14:53:52: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:52: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:52: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:52: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:52: Reserv4                                       :0x0
14:53:52: Write Speed Factor R2W_FACTOR                 :0x2
14:53:52: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:52: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:52: FILE_FORMAT_GRP                               :0x0
14:53:52: COPY flag                                     :0x1
14:53:52: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:52: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:52: File_Format                                   :0x0
14:53:52: CRC                                           :0x0
14:53:52: ####CSD Registe Values####  

14:53:52: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:52: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127210>, <0x200/0x200, Spc, pat:0x0>) , Command count = 297 ] 
14:53:52: Protected Area Size 0x28000
14:53:52: Bus Width           2
14:53:52: Secure Mode         0
14:53:52: Speed  Class        4
14:53:52: Perf Move           0
14:53:52: Au Size             9
14:53:52: Erase Size          15
14:53:52: Erase Timeout       1
14:53:52: Erase offset        1
14:53:52: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:52: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:52: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 298 ] 
14:53:52: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:52: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:53:52: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 299 ] 
14:53:52: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:53:52: [GO4_globalInitCard]### Switch to Specify Card Type
14:53:54: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:54: Host Frequency set to 25000 KHz
14:53:54: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:54: [GO18_globalSetVolt]### Set Host Voltage value.
14:53:54: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:53:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C00>, 0x0, True) , Command count = 300 ] 
14:53:54: [GO18_globalSetVolt]### Host voltage value is set.
14:53:54: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:53:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, False) , Command count = 301 ] 
14:53:54: [GO18_globalSetVolt]### Host voltage value is set.
14:53:54: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 302 ] 
14:53:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 303 ] 
14:53:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:54: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 304 ] 
14:53:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:54: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1900>, <py_sfcl.CommandDataDefinition object at 0x060C1A20>) , Command count = 305 ] 
14:53:54: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1720>, <py_sfcl.CommandDataDefinition object at 0x060C1510>) , Command count = 306 ] 
14:53:54: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:54: [ SetCardRCA(0x1, 0xD555) , Command count = 307 ] 
14:53:54: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:54: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:53:54: Host Frequency set to 25000 KHz
14:53:54: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:53:54: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:54: ####CSD Registe 2.0 Values####
14:53:54: CSD_STRUCTURE                                 :0x1
14:53:54: Reserv1                                       :0x0
14:53:54: Time Access 1 TAAC                            :0xe
14:53:54: Time Access 2 NSAC*100                        :0x0
14:53:54: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:54: Card Command Classess CCC                     :0x5b5
14:53:54: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:54: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:54: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:54: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:54: DSR(driver stage register)  DSR_IMP           :0x0
14:53:54: Reserv2                                       :0x0
14:53:54: Device Size C_SIZE                            :0xedc8
14:53:54: Reserv3                                       :0x0
14:53:54: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:54: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:54: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:54: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:54: Reserv4                                       :0x0
14:53:54: Write Speed Factor R2W_FACTOR                 :0x2
14:53:54: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:54: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:54: FILE_FORMAT_GRP                               :0x0
14:53:54: COPY flag                                     :0x1
14:53:54: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:54: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:54: File_Format                                   :0x0
14:53:54: CRC                                           :0x0
14:53:54: ####CSD Registe Values####  

14:53:54: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:53:54: [GetSCRRegisterEntry] Passed
14:53:54: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:53:54: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:53:54: Data_Status_After Erases          : 0
14:53:54: CPRM Security Support             : No Security
14:53:54: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:53:54: Spec. Version                     : Version 3.0X
14:53:54: Extended Security Support         : Extended_Security_Not_Supported
14:53:54: Command Support                   : COMMAND_SUPPORT
14:53:54: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1840>, <py_sfcl.CommandDataDefinition object at 0x060C1A80>) , Command count = 308 ] 
14:53:54: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x061000C0>) , Command count = 309 ] 
14:53:54: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:53:54: [ SetBusWidth(0x4) , Command count = 310 ] 
14:53:54: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:53:54: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061002D0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 311 ] 
14:53:54: Protected Area Size 0x28000
14:53:54: Bus Width           2
14:53:54: Secure Mode         0
14:53:54: Speed  Class        4
14:53:54: Perf Move           0
14:53:54: Au Size             9
14:53:54: Erase Size          15
14:53:54: Erase Timeout       1
14:53:54: Erase offset        1
14:53:54: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:53:54: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:53:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:54: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 312 ] 
14:53:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:53:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:54: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:53:54: Host Frequency set to 100000 KHz
14:53:54: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:53:54: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:54: ####CSD Registe 2.0 Values####
14:53:54: CSD_STRUCTURE                                 :0x1
14:53:54: Reserv1                                       :0x0
14:53:54: Time Access 1 TAAC                            :0xe
14:53:54: Time Access 2 NSAC*100                        :0x0
14:53:54: Data Transfer Rate TRAN_SPEED                 :0xb
14:53:54: Card Command Classess CCC                     :0x5b5
14:53:54: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:54: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:54: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:54: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:54: DSR(driver stage register)  DSR_IMP           :0x0
14:53:54: Reserv2                                       :0x0
14:53:54: Device Size C_SIZE                            :0xedc8
14:53:54: Reserv3                                       :0x0
14:53:54: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:54: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:54: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:54: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:54: Reserv4                                       :0x0
14:53:54: Write Speed Factor R2W_FACTOR                 :0x2
14:53:54: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:54: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:53:54: FILE_FORMAT_GRP                               :0x0
14:53:54: COPY flag                                     :0x1
14:53:54: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:53:54: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:53:54: File_Format                                   :0x0
14:53:54: CRC                                           :0x0
14:53:54: ####CSD Registe Values####  

14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x06100150>) , Command count = 313 ] 
14:53:54: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:53:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100690>, <py_sfcl.CommandDataDefinition object at 0x061004B0>) , Command count = 314 ] 
14:53:54: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:53:54: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:53:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100240>, 0x0, False) , Command count = 315 ] 
14:53:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100240>, 0x0, True) , Command count = 316 ] 
14:53:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:57: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:53:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 317 ] 
14:53:57: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:57: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:53:57: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:57: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:57: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:57: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 318 ] 
14:53:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:57: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E6C0>, <py_sfcl.CommandDataDefinition object at 0x06100480>) , Command count = 319 ] 
14:53:57: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EE40>, <py_sfcl.CommandDataDefinition object at 0x06127360>) , Command count = 320 ] 
14:53:57: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:57: [ SetCardRCA(0x1, 0xD555) , Command count = 321 ] 
14:53:57: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:57: [ SetBusWidth(0x4) , Command count = 322 ] 
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:57: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 323 ] 
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:57: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 324 ] 
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:57: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 325 ] 
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:57: Host Frequency set to 25000 KHz

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [32799, 49153, 32783, 32783, 32769, 32769]
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:57: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 326 ] 
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EED0>, 0x0, False) , Command count = 327 ] 
14:53:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:57: SendOCR: 1107263488
14:53:57: ExcpectOCR: 3254747136
14:53:57: SendFirstOCR: 1107263488
14:53:57: SendNextOCR: 1107263488
14:53:57: SingleCommand: 0
14:53:57: SingleCommandTestType: 1
14:53:57: Identification: 1
14:53:57: ProtocolMode: 1
14:53:57: VerifyType: 0
14:53:57: SendCMD0: 1
14:53:57: SendCMD8: 1
14:53:57: SendCMD58: 1
14:53:57: SetPower: 1
14:53:57: HcsXpcS18r000: 16744448
14:53:57: HcsXpcS18r001: 33521664
14:53:57: HcsXpcS18r010: 285179904
14:53:57: HcsXpcS18r011: 301957120
14:53:57: HcsXpcS18r100: 1090486272
14:53:57: HcsXpcS18r101: 1107263488
14:53:57: HcsXpcS18r110: 1358921728
14:53:57: HcsXpcS18r111: 1375698944
14:53:57: ReadyCcs18a000: 16744448
14:53:57: ReadyCcs18a001: 33521664
14:53:57: ReadyCcs18a010: 1090486272
14:53:57: ReadyCcs18a011: 1107263488
14:53:57: ReadyCcs18a100: 2164228096
14:53:57: ReadyCcs18a101: 2181005312
14:53:57: ReadyCcs18a110: 3237969920
14:53:57: ReadyCcs18a111: 3254747136
14:53:57: Card Capacity is : 32.000000 GB
14:53:57: SendFirstOCR : 1375698944
14:53:57: SendOCR : 1375698944
14:53:57: SendOCR : 1375698944
14:53:57: ExpectOCR : 3254747136
14:53:57: globalSpeedMode : SDR50
14:53:57: globalPowerUp : powerCycle
14:53:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EAE0>, 0x0, False) , Command count = 328 ] 
14:53:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:53:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EAE0>, 0x0, True) , Command count = 329 ] 
14:53:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:59: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:53:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 330 ] 
14:53:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:53:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:53:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:53:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:53:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:53:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 331 ] 
14:53:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:53:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:53:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EBA0>, <py_sfcl.CommandDataDefinition object at 0x0610ECF0>) , Command count = 332 ] 
14:53:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:53:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED20>, <py_sfcl.CommandDataDefinition object at 0x0610EB70>) , Command count = 333 ] 
14:53:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:53:59: [ SetCardRCA(0x1, 0xD555) , Command count = 334 ] 
14:53:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:53:59: [ SelectCard(0x1, True) , Command count = 335 ] 
14:53:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:53:59: [ SetBusWidth(0x4) , Command count = 336 ] 
14:53:59: VS_Flag========================1
14:53:59: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:59: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 337 ] 
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:59: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 338 ] 
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:59: Host Frequency set to 25000 KHz

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:53:59: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 339 ] 
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:53:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:53:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:53:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EC30>, 0x0, False) , Command count = 340 ] 
14:53:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:53:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:53:59: ####CSD Registe 2.0 Values####
14:53:59: CSD_STRUCTURE                                 :0x1
14:53:59: Reserv1                                       :0x0
14:53:59: Time Access 1 TAAC                            :0xe
14:53:59: Time Access 2 NSAC*100                        :0x0
14:53:59: Data Transfer Rate TRAN_SPEED                 :0x32
14:53:59: Card Command Classess CCC                     :0x5b5
14:53:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:53:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:53:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:53:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:53:59: DSR(driver stage register)  DSR_IMP           :0x0
14:53:59: Reserv2                                       :0x0
14:53:59: Device Size C_SIZE                            :0xedc8
14:53:59: Reserv3                                       :0x0
14:53:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:53:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:53:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:53:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:53:59: Reserv4                                       :0x0
14:53:59: Write Speed Factor R2W_FACTOR                 :0x2
14:53:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:53:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:00: FILE_FORMAT_GRP                               :0x0
14:54:00: COPY flag                                     :0x1
14:54:00: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:00: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:00: File_Format                                   :0x0
14:54:00: CRC                                           :0x0
14:54:00: ####CSD Registe Values####  

14:54:00: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:00: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610E5D0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 341 ] 
14:54:00: Protected Area Size 0x28000
14:54:00: Bus Width           2
14:54:00: Secure Mode         0
14:54:00: Speed  Class        4
14:54:00: Perf Move           0
14:54:00: Au Size             9
14:54:00: Erase Size          15
14:54:00: Erase Timeout       1
14:54:00: Erase offset        1
14:54:00: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:00: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 342 ] 
14:54:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:00: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 343 ] 
14:54:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:00: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:02: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:02: Host Frequency set to 25000 KHz
14:54:02: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:02: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:02: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111060>, 0x0, True) , Command count = 344 ] 
14:54:02: [GO18_globalSetVolt]### Host voltage value is set.
14:54:02: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111210>, 0x0, False) , Command count = 345 ] 
14:54:02: [GO18_globalSetVolt]### Host voltage value is set.
14:54:02: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 346 ] 
14:54:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 347 ] 
14:54:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:02: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 348 ] 
14:54:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x0610E600>) , Command count = 349 ] 
14:54:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x061110C0>) , Command count = 350 ] 
14:54:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:02: [ SetCardRCA(0x1, 0xD555) , Command count = 351 ] 
14:54:02: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:02: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:02: Host Frequency set to 25000 KHz
14:54:02: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:02: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:02: ####CSD Registe 2.0 Values####
14:54:02: CSD_STRUCTURE                                 :0x1
14:54:02: Reserv1                                       :0x0
14:54:02: Time Access 1 TAAC                            :0xe
14:54:02: Time Access 2 NSAC*100                        :0x0
14:54:02: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:02: Card Command Classess CCC                     :0x5b5
14:54:02: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:02: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:02: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:02: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:02: DSR(driver stage register)  DSR_IMP           :0x0
14:54:02: Reserv2                                       :0x0
14:54:02: Device Size C_SIZE                            :0xedc8
14:54:02: Reserv3                                       :0x0
14:54:02: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:02: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:02: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:02: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:02: Reserv4                                       :0x0
14:54:02: Write Speed Factor R2W_FACTOR                 :0x2
14:54:02: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:02: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:02: FILE_FORMAT_GRP                               :0x0
14:54:02: COPY flag                                     :0x1
14:54:02: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:02: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:02: File_Format                                   :0x0
14:54:02: CRC                                           :0x0
14:54:02: ####CSD Registe Values####  

14:54:02: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:02: [GetSCRRegisterEntry] Passed
14:54:02: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:02: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:02: Data_Status_After Erases          : 0
14:54:02: CPRM Security Support             : No Security
14:54:02: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:02: Spec. Version                     : Version 3.0X
14:54:02: Extended Security Support         : Extended_Security_Not_Supported
14:54:02: Command Support                   : COMMAND_SUPPORT
14:54:02: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x061112A0>) , Command count = 352 ] 
14:54:02: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x0610E5A0>) , Command count = 353 ] 
14:54:02: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:02: [ SetBusWidth(0x4) , Command count = 354 ] 
14:54:02: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:02: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610E9F0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 355 ] 
14:54:02: Protected Area Size 0x28000
14:54:02: Bus Width           2
14:54:02: Secure Mode         0
14:54:02: Speed  Class        4
14:54:02: Perf Move           0
14:54:02: Au Size             9
14:54:02: Erase Size          15
14:54:02: Erase Timeout       1
14:54:02: Erase offset        1
14:54:02: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:02: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:02: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 356 ] 
14:54:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:02: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:02: Host Frequency set to 100000 KHz
14:54:02: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:02: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:02: ####CSD Registe 2.0 Values####
14:54:02: CSD_STRUCTURE                                 :0x1
14:54:02: Reserv1                                       :0x0
14:54:02: Time Access 1 TAAC                            :0xe
14:54:02: Time Access 2 NSAC*100                        :0x0
14:54:02: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:02: Card Command Classess CCC                     :0x5b5
14:54:02: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:02: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:02: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:02: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:02: DSR(driver stage register)  DSR_IMP           :0x0
14:54:02: Reserv2                                       :0x0
14:54:02: Device Size C_SIZE                            :0xedc8
14:54:02: Reserv3                                       :0x0
14:54:02: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:02: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:02: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:02: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:02: Reserv4                                       :0x0
14:54:02: Write Speed Factor R2W_FACTOR                 :0x2
14:54:02: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:02: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:02: FILE_FORMAT_GRP                               :0x0
14:54:02: COPY flag                                     :0x1
14:54:02: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:02: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:02: File_Format                                   :0x0
14:54:02: CRC                                           :0x0
14:54:02: ####CSD Registe Values####  

14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111480>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 357 ] 
14:54:02: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x061116C0>) , Command count = 358 ] 
14:54:02: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:02: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x061115A0>, 0x0, False) , Command count = 359 ] 
14:54:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x061115A0>, 0x0, True) , Command count = 360 ] 
14:54:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:04: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 361 ] 
14:54:04: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:04: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:04: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:04: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:04: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:04: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 362 ] 
14:54:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:04: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111300>, <py_sfcl.CommandDataDefinition object at 0x06111330>) , Command count = 363 ] 
14:54:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116F0>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 364 ] 
14:54:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:05: [ SetCardRCA(0x1, 0xD555) , Command count = 365 ] 
14:54:05: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:05: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:05: [ SetBusWidth(0x4) , Command count = 366 ] 
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:05: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 367 ] 
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:05: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 368 ] 
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:05: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 369 ] 
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:05: Host Frequency set to 25000 KHz

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:05: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 370 ] 
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, False) , Command count = 371 ] 
14:54:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:05: SendOCR: 1107263488
14:54:05: ExcpectOCR: 3254747136
14:54:05: SendFirstOCR: 1107263488
14:54:05: SendNextOCR: 1107263488
14:54:05: SingleCommand: 0
14:54:05: SingleCommandTestType: 1
14:54:05: Identification: 1
14:54:05: ProtocolMode: 1
14:54:05: VerifyType: 0
14:54:05: SendCMD0: 1
14:54:05: SendCMD8: 1
14:54:05: SendCMD58: 1
14:54:05: SetPower: 1
14:54:05: HcsXpcS18r000: 16744448
14:54:05: HcsXpcS18r001: 33521664
14:54:05: HcsXpcS18r010: 285179904
14:54:05: HcsXpcS18r011: 301957120
14:54:05: HcsXpcS18r100: 1090486272
14:54:05: HcsXpcS18r101: 1107263488
14:54:05: HcsXpcS18r110: 1358921728
14:54:05: HcsXpcS18r111: 1375698944
14:54:05: ReadyCcs18a000: 16744448
14:54:05: ReadyCcs18a001: 33521664
14:54:05: ReadyCcs18a010: 1090486272
14:54:05: ReadyCcs18a011: 1107263488
14:54:05: ReadyCcs18a100: 2164228096
14:54:05: ReadyCcs18a101: 2181005312
14:54:05: ReadyCcs18a110: 3237969920
14:54:05: ReadyCcs18a111: 3254747136
14:54:05: Card Capacity is : 32.000000 GB
14:54:05: SendFirstOCR : 1375698944
14:54:05: SendOCR : 1375698944
14:54:05: SendOCR : 1375698944
14:54:05: ExpectOCR : 3254747136
14:54:05: globalSpeedMode : SDR50
14:54:05: globalPowerUp : powerCycle
14:54:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ED50>, 0x0, False) , Command count = 372 ] 
14:54:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ED50>, 0x0, True) , Command count = 373 ] 
14:54:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:07: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 374 ] 
14:54:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 375 ] 
14:54:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x06111D20>) , Command count = 376 ] 
14:54:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D80>, <py_sfcl.CommandDataDefinition object at 0x06127360>) , Command count = 377 ] 
14:54:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:07: [ SetCardRCA(0x1, 0xD555) , Command count = 378 ] 
14:54:07: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:07: [ SelectCard(0x1, True) , Command count = 379 ] 
14:54:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:07: [ SetBusWidth(0x4) , Command count = 380 ] 
14:54:07: VS_Flag========================1
14:54:07: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:07: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 381 ] 
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:07: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 382 ] 
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:07: Host Frequency set to 25000 KHz

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:07: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 383 ] 
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119060>, 0x0, False) , Command count = 384 ] 
14:54:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:07: ####CSD Registe 2.0 Values####
14:54:07: CSD_STRUCTURE                                 :0x1
14:54:07: Reserv1                                       :0x0
14:54:07: Time Access 1 TAAC                            :0xe
14:54:07: Time Access 2 NSAC*100                        :0x0
14:54:07: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:07: Card Command Classess CCC                     :0x5b5
14:54:07: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:07: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:07: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:07: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:07: DSR(driver stage register)  DSR_IMP           :0x0
14:54:07: Reserv2                                       :0x0
14:54:07: Device Size C_SIZE                            :0xedc8
14:54:07: Reserv3                                       :0x0
14:54:07: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:07: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:07: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:07: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:07: Reserv4                                       :0x0
14:54:07: Write Speed Factor R2W_FACTOR                 :0x2
14:54:07: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:07: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:07: FILE_FORMAT_GRP                               :0x0
14:54:07: COPY flag                                     :0x1
14:54:07: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:07: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:07: File_Format                                   :0x0
14:54:07: CRC                                           :0x0
14:54:07: ####CSD Registe Values####  

14:54:07: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:07: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111F90>, <0x200/0x200, Spc, pat:0x0>) , Command count = 385 ] 
14:54:07: Protected Area Size 0x28000
14:54:07: Bus Width           2
14:54:07: Secure Mode         0
14:54:07: Speed  Class        4
14:54:07: Perf Move           0
14:54:07: Au Size             9
14:54:07: Erase Size          15
14:54:07: Erase Timeout       1
14:54:07: Erase offset        1
14:54:07: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:07: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:07: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 386 ] 
14:54:07: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:07: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:07: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 387 ] 
14:54:07: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:07: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:09: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:09: Host Frequency set to 25000 KHz
14:54:09: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:09: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:09: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119180>, 0x0, True) , Command count = 388 ] 
14:54:09: [GO18_globalSetVolt]### Host voltage value is set.
14:54:09: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193C0>, 0x0, False) , Command count = 389 ] 
14:54:09: [GO18_globalSetVolt]### Host voltage value is set.
14:54:09: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 390 ] 
14:54:09: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 391 ] 
14:54:10: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:10: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:10: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:10: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:10: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 392 ] 
14:54:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:10: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x06119330>) , Command count = 393 ] 
14:54:10: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119240>, <py_sfcl.CommandDataDefinition object at 0x06119270>) , Command count = 394 ] 
14:54:10: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:10: [ SetCardRCA(0x1, 0xD555) , Command count = 395 ] 
14:54:10: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:10: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:10: Host Frequency set to 25000 KHz
14:54:10: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:10: ####CSD Registe 2.0 Values####
14:54:10: CSD_STRUCTURE                                 :0x1
14:54:10: Reserv1                                       :0x0
14:54:10: Time Access 1 TAAC                            :0xe
14:54:10: Time Access 2 NSAC*100                        :0x0
14:54:10: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:10: Card Command Classess CCC                     :0x5b5
14:54:10: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:10: DSR(driver stage register)  DSR_IMP           :0x0
14:54:10: Reserv2                                       :0x0
14:54:10: Device Size C_SIZE                            :0xedc8
14:54:10: Reserv3                                       :0x0
14:54:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:10: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:10: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:10: Reserv4                                       :0x0
14:54:10: Write Speed Factor R2W_FACTOR                 :0x2
14:54:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:10: FILE_FORMAT_GRP                               :0x0
14:54:10: COPY flag                                     :0x1
14:54:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:10: File_Format                                   :0x0
14:54:10: CRC                                           :0x0
14:54:10: ####CSD Registe Values####  

14:54:10: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:10: [GetSCRRegisterEntry] Passed
14:54:10: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:10: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:10: Data_Status_After Erases          : 0
14:54:10: CPRM Security Support             : No Security
14:54:10: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:10: Spec. Version                     : Version 3.0X
14:54:10: Extended Security Support         : Extended_Security_Not_Supported
14:54:10: Command Support                   : COMMAND_SUPPORT
14:54:10: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06119450>) , Command count = 396 ] 
14:54:10: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119570>, <py_sfcl.CommandDataDefinition object at 0x06111CF0>) , Command count = 397 ] 
14:54:10: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:10: [ SetBusWidth(0x4) , Command count = 398 ] 
14:54:10: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:10: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111FC0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 399 ] 
14:54:10: Protected Area Size 0x28000
14:54:10: Bus Width           2
14:54:10: Secure Mode         0
14:54:10: Speed  Class        4
14:54:10: Perf Move           0
14:54:10: Au Size             9
14:54:10: Erase Size          15
14:54:10: Erase Timeout       1
14:54:10: Erase offset        1
14:54:10: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:10: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:10: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 400 ] 
14:54:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:10: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:10: Host Frequency set to 100000 KHz
14:54:10: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:10: ####CSD Registe 2.0 Values####
14:54:10: CSD_STRUCTURE                                 :0x1
14:54:10: Reserv1                                       :0x0
14:54:10: Time Access 1 TAAC                            :0xe
14:54:10: Time Access 2 NSAC*100                        :0x0
14:54:10: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:10: Card Command Classess CCC                     :0x5b5
14:54:10: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:10: DSR(driver stage register)  DSR_IMP           :0x0
14:54:10: Reserv2                                       :0x0
14:54:10: Device Size C_SIZE                            :0xedc8
14:54:10: Reserv3                                       :0x0
14:54:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:10: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:10: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:10: Reserv4                                       :0x0
14:54:10: Write Speed Factor R2W_FACTOR                 :0x2
14:54:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:10: FILE_FORMAT_GRP                               :0x0
14:54:10: COPY flag                                     :0x1
14:54:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:10: File_Format                                   :0x0
14:54:10: CRC                                           :0x0
14:54:10: ####CSD Registe Values####  

14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119630>, <py_sfcl.CommandDataDefinition object at 0x06111E70>) , Command count = 401 ] 
14:54:10: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x06119870>) , Command count = 402 ] 
14:54:10: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:10: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119750>, 0x0, False) , Command count = 403 ] 
14:54:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119750>, 0x0, True) , Command count = 404 ] 
14:54:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:12: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 405 ] 
14:54:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:12: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:12: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 406 ] 
14:54:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194B0>, <py_sfcl.CommandDataDefinition object at 0x061194E0>) , Command count = 407 ] 
14:54:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061198A0>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 408 ] 
14:54:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:12: [ SetCardRCA(0x1, 0xD555) , Command count = 409 ] 
14:54:12: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:12: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:12: [ SetBusWidth(0x4) , Command count = 410 ] 
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:12: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 411 ] 
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:12: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 412 ] 
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:12: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 413 ] 
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:12: Host Frequency set to 25000 KHz

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:12: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 414 ] 
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, False) , Command count = 415 ] 
14:54:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:12: SendOCR: 1107263488
14:54:12: ExcpectOCR: 3254747136
14:54:12: SendFirstOCR: 1107263488
14:54:12: SendNextOCR: 1107263488
14:54:12: SingleCommand: 0
14:54:12: SingleCommandTestType: 1
14:54:12: Identification: 1
14:54:12: ProtocolMode: 1
14:54:12: VerifyType: 0
14:54:12: SendCMD0: 1
14:54:12: SendCMD8: 1
14:54:12: SendCMD58: 1
14:54:12: SetPower: 1
14:54:12: HcsXpcS18r000: 16744448
14:54:12: HcsXpcS18r001: 33521664
14:54:12: HcsXpcS18r010: 285179904
14:54:12: HcsXpcS18r011: 301957120
14:54:12: HcsXpcS18r100: 1090486272
14:54:12: HcsXpcS18r101: 1107263488
14:54:12: HcsXpcS18r110: 1358921728
14:54:12: HcsXpcS18r111: 1375698944
14:54:12: ReadyCcs18a000: 16744448
14:54:12: ReadyCcs18a001: 33521664
14:54:12: ReadyCcs18a010: 1090486272
14:54:12: ReadyCcs18a011: 1107263488
14:54:12: ReadyCcs18a100: 2164228096
14:54:12: ReadyCcs18a101: 2181005312
14:54:12: ReadyCcs18a110: 3237969920
14:54:12: ReadyCcs18a111: 3254747136
14:54:12: Card Capacity is : 32.000000 GB
14:54:12: SendFirstOCR : 1375698944
14:54:12: SendOCR : 1375698944
14:54:12: SendOCR : 1375698944
14:54:12: ExpectOCR : 3254747136
14:54:12: globalSpeedMode : SDR50
14:54:12: globalPowerUp : powerCycle
14:54:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119A20>, 0x0, False) , Command count = 416 ] 
14:54:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119A20>, 0x0, True) , Command count = 417 ] 
14:54:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:15: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 418 ] 
14:54:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:15: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 419 ] 
14:54:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:15: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119EA0>, <py_sfcl.CommandDataDefinition object at 0x06119D20>) , Command count = 420 ] 
14:54:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D80>, <py_sfcl.CommandDataDefinition object at 0x06127180>) , Command count = 421 ] 
14:54:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:15: [ SetCardRCA(0x1, 0xD555) , Command count = 422 ] 
14:54:15: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:15: [ SelectCard(0x1, True) , Command count = 423 ] 
14:54:15: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:15: [ SetBusWidth(0x4) , Command count = 424 ] 
14:54:15: VS_Flag========================1
14:54:15: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:15: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 425 ] 
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:15: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 426 ] 
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:15: Host Frequency set to 25000 KHz

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:15: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 427 ] 
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E060>, 0x0, False) , Command count = 428 ] 
14:54:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:15: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:15: ####CSD Registe 2.0 Values####
14:54:15: CSD_STRUCTURE                                 :0x1
14:54:15: Reserv1                                       :0x0
14:54:15: Time Access 1 TAAC                            :0xe
14:54:15: Time Access 2 NSAC*100                        :0x0
14:54:15: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:15: Card Command Classess CCC                     :0x5b5
14:54:15: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:15: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:15: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:15: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:15: DSR(driver stage register)  DSR_IMP           :0x0
14:54:15: Reserv2                                       :0x0
14:54:15: Device Size C_SIZE                            :0xedc8
14:54:15: Reserv3                                       :0x0
14:54:15: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:15: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:15: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:15: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:15: Reserv4                                       :0x0
14:54:15: Write Speed Factor R2W_FACTOR                 :0x2
14:54:15: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:15: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:15: FILE_FORMAT_GRP                               :0x0
14:54:15: COPY flag                                     :0x1
14:54:15: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:15: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:15: File_Format                                   :0x0
14:54:15: CRC                                           :0x0
14:54:15: ####CSD Registe Values####  

14:54:15: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:15: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119F90>, <0x200/0x200, Spc, pat:0x0>) , Command count = 429 ] 
14:54:15: Protected Area Size 0x28000
14:54:15: Bus Width           2
14:54:15: Secure Mode         0
14:54:15: Speed  Class        4
14:54:15: Perf Move           0
14:54:15: Au Size             9
14:54:15: Erase Size          15
14:54:15: Erase Timeout       1
14:54:15: Erase offset        1
14:54:15: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:15: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:15: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 430 ] 
14:54:15: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:15: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:15: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 431 ] 
14:54:15: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:15: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:17: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:17: Host Frequency set to 25000 KHz
14:54:17: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:17: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:17: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E180>, 0x0, True) , Command count = 432 ] 
14:54:17: [GO18_globalSetVolt]### Host voltage value is set.
14:54:17: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E360>, 0x0, False) , Command count = 433 ] 
14:54:17: [GO18_globalSetVolt]### Host voltage value is set.
14:54:17: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 434 ] 
14:54:17: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 435 ] 
14:54:17: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:17: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:17: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:17: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:17: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:17: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 436 ] 
14:54:17: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:17: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E390>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 437 ] 
14:54:17: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1E0>, <py_sfcl.CommandDataDefinition object at 0x0611E210>) , Command count = 438 ] 
14:54:17: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:17: [ SetCardRCA(0x1, 0xD555) , Command count = 439 ] 
14:54:17: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:17: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:18: Host Frequency set to 25000 KHz
14:54:18: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:18: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:18: ####CSD Registe 2.0 Values####
14:54:18: CSD_STRUCTURE                                 :0x1
14:54:18: Reserv1                                       :0x0
14:54:18: Time Access 1 TAAC                            :0xe
14:54:18: Time Access 2 NSAC*100                        :0x0
14:54:18: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:18: Card Command Classess CCC                     :0x5b5
14:54:18: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:18: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:18: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:18: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:18: DSR(driver stage register)  DSR_IMP           :0x0
14:54:18: Reserv2                                       :0x0
14:54:18: Device Size C_SIZE                            :0xedc8
14:54:18: Reserv3                                       :0x0
14:54:18: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:18: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:18: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:18: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:18: Reserv4                                       :0x0
14:54:18: Write Speed Factor R2W_FACTOR                 :0x2
14:54:18: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:18: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:18: FILE_FORMAT_GRP                               :0x0
14:54:18: COPY flag                                     :0x1
14:54:18: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:18: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:18: File_Format                                   :0x0
14:54:18: CRC                                           :0x0
14:54:18: ####CSD Registe Values####  

14:54:18: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:18: [GetSCRRegisterEntry] Passed
14:54:18: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:18: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:18: Data_Status_After Erases          : 0
14:54:18: CPRM Security Support             : No Security
14:54:18: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:18: Spec. Version                     : Version 3.0X
14:54:18: Extended Security Support         : Extended_Security_Not_Supported
14:54:18: Command Support                   : COMMAND_SUPPORT
14:54:18: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E4E0>, <py_sfcl.CommandDataDefinition object at 0x0611E3F0>) , Command count = 440 ] 
14:54:18: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E510>, <py_sfcl.CommandDataDefinition object at 0x06119AE0>) , Command count = 441 ] 
14:54:18: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:18: [ SetBusWidth(0x4) , Command count = 442 ] 
14:54:18: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:18: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119F00>, <0x200/0x200, Spc, pat:0x0>) , Command count = 443 ] 
14:54:18: Protected Area Size 0x28000
14:54:18: Bus Width           2
14:54:18: Secure Mode         0
14:54:18: Speed  Class        4
14:54:18: Perf Move           0
14:54:18: Au Size             9
14:54:18: Erase Size          15
14:54:18: Erase Timeout       1
14:54:18: Erase offset        1
14:54:18: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:18: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:18: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 444 ] 
14:54:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:18: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:18: Host Frequency set to 100000 KHz
14:54:18: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:18: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:18: ####CSD Registe 2.0 Values####
14:54:18: CSD_STRUCTURE                                 :0x1
14:54:18: Reserv1                                       :0x0
14:54:18: Time Access 1 TAAC                            :0xe
14:54:18: Time Access 2 NSAC*100                        :0x0
14:54:18: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:18: Card Command Classess CCC                     :0x5b5
14:54:18: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:18: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:18: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:18: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:18: DSR(driver stage register)  DSR_IMP           :0x0
14:54:18: Reserv2                                       :0x0
14:54:18: Device Size C_SIZE                            :0xedc8
14:54:18: Reserv3                                       :0x0
14:54:18: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:18: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:18: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:18: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:18: Reserv4                                       :0x0
14:54:18: Write Speed Factor R2W_FACTOR                 :0x2
14:54:18: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:18: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:18: FILE_FORMAT_GRP                               :0x0
14:54:18: COPY flag                                     :0x1
14:54:18: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:18: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:18: File_Format                                   :0x0
14:54:18: CRC                                           :0x0
14:54:18: ####CSD Registe Values####  

14:54:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E5D0>, <py_sfcl.CommandDataDefinition object at 0x06119E70>) , Command count = 445 ] 
14:54:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x0611E810>) , Command count = 446 ] 
14:54:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:18: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E6F0>, 0x0, False) , Command count = 447 ] 
14:54:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E6F0>, 0x0, True) , Command count = 448 ] 
14:54:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:20: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 449 ] 
14:54:20: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:20: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:20: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:20: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:20: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:20: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:20: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 450 ] 
14:54:20: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:20: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:20: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E450>, <py_sfcl.CommandDataDefinition object at 0x0611E480>) , Command count = 451 ] 
14:54:20: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:20: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x0611E870>) , Command count = 452 ] 
14:54:20: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:20: [ SetCardRCA(0x1, 0xD555) , Command count = 453 ] 
14:54:20: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:20: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:20: [ SetBusWidth(0x4) , Command count = 454 ] 
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:20: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 455 ] 
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:20: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 456 ] 
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:20: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 457 ] 
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:20: Host Frequency set to 25000 KHz

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:20: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 458 ] 
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, False) , Command count = 459 ] 
14:54:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:20: SendOCR: 1107263488
14:54:20: ExcpectOCR: 3254747136
14:54:20: SendFirstOCR: 1107263488
14:54:20: SendNextOCR: 1107263488
14:54:20: SingleCommand: 0
14:54:20: SingleCommandTestType: 1
14:54:20: Identification: 1
14:54:20: ProtocolMode: 1
14:54:20: VerifyType: 0
14:54:20: SendCMD0: 1
14:54:20: SendCMD8: 1
14:54:20: SendCMD58: 1
14:54:20: SetPower: 1
14:54:20: HcsXpcS18r000: 16744448
14:54:20: HcsXpcS18r001: 33521664
14:54:20: HcsXpcS18r010: 285179904
14:54:20: HcsXpcS18r011: 301957120
14:54:20: HcsXpcS18r100: 1090486272
14:54:20: HcsXpcS18r101: 1107263488
14:54:20: HcsXpcS18r110: 1358921728
14:54:20: HcsXpcS18r111: 1375698944
14:54:20: ReadyCcs18a000: 16744448
14:54:20: ReadyCcs18a001: 33521664
14:54:20: ReadyCcs18a010: 1090486272
14:54:20: ReadyCcs18a011: 1107263488
14:54:20: ReadyCcs18a100: 2164228096
14:54:20: ReadyCcs18a101: 2181005312
14:54:20: ReadyCcs18a110: 3237969920
14:54:20: ReadyCcs18a111: 3254747136
14:54:20: Card Capacity is : 32.000000 GB
14:54:20: SendFirstOCR : 1375698944
14:54:20: SendOCR : 1375698944
14:54:20: SendOCR : 1375698944
14:54:20: ExpectOCR : 3254747136
14:54:20: globalSpeedMode : SDR50
14:54:20: globalPowerUp : powerCycle
14:54:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E9C0>, 0x0, False) , Command count = 460 ] 
14:54:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E9C0>, 0x0, True) , Command count = 461 ] 
14:54:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:22: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 462 ] 
14:54:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:23: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 463 ] 
14:54:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:23: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0611ECC0>) , Command count = 464 ] 
14:54:23: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED20>, <py_sfcl.CommandDataDefinition object at 0x06127300>) , Command count = 465 ] 
14:54:23: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:23: [ SetCardRCA(0x1, 0xD555) , Command count = 466 ] 
14:54:23: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:23: [ SelectCard(0x1, True) , Command count = 467 ] 
14:54:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:23: [ SetBusWidth(0x4) , Command count = 468 ] 
14:54:23: VS_Flag========================1
14:54:23: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:23: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 469 ] 
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:23: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 470 ] 
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:23: Host Frequency set to 25000 KHz

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:23: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 471 ] 
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123030>, 0x0, False) , Command count = 472 ] 
14:54:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:23: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:23: ####CSD Registe 2.0 Values####
14:54:23: CSD_STRUCTURE                                 :0x1
14:54:23: Reserv1                                       :0x0
14:54:23: Time Access 1 TAAC                            :0xe
14:54:23: Time Access 2 NSAC*100                        :0x0
14:54:23: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:23: Card Command Classess CCC                     :0x5b5
14:54:23: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:23: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:23: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:23: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:23: DSR(driver stage register)  DSR_IMP           :0x0
14:54:23: Reserv2                                       :0x0
14:54:23: Device Size C_SIZE                            :0xedc8
14:54:23: Reserv3                                       :0x0
14:54:23: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:23: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:23: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:23: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:23: Reserv4                                       :0x0
14:54:23: Write Speed Factor R2W_FACTOR                 :0x2
14:54:23: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:23: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:23: FILE_FORMAT_GRP                               :0x0
14:54:23: COPY flag                                     :0x1
14:54:23: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:23: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:23: File_Format                                   :0x0
14:54:23: CRC                                           :0x0
14:54:23: ####CSD Registe Values####  

14:54:23: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:23: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611EF30>, <0x200/0x200, Spc, pat:0x0>) , Command count = 473 ] 
14:54:23: Protected Area Size 0x28000
14:54:23: Bus Width           2
14:54:23: Secure Mode         0
14:54:23: Speed  Class        4
14:54:23: Perf Move           0
14:54:23: Au Size             9
14:54:23: Erase Size          15
14:54:23: Erase Timeout       1
14:54:23: Erase offset        1
14:54:23: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:23: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 474 ] 
14:54:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:23: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 475 ] 
14:54:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:23: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:25: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:25: Host Frequency set to 25000 KHz
14:54:25: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:25: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:25: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123150>, 0x0, True) , Command count = 476 ] 
14:54:25: [GO18_globalSetVolt]### Host voltage value is set.
14:54:25: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123300>, 0x0, False) , Command count = 477 ] 
14:54:25: [GO18_globalSetVolt]### Host voltage value is set.
14:54:25: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 478 ] 
14:54:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 479 ] 
14:54:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 480 ] 
14:54:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123330>, <py_sfcl.CommandDataDefinition object at 0x061231E0>) , Command count = 481 ] 
14:54:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123180>, <py_sfcl.CommandDataDefinition object at 0x061231B0>) , Command count = 482 ] 
14:54:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:25: [ SetCardRCA(0x1, 0xD555) , Command count = 483 ] 
14:54:25: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:25: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:25: Host Frequency set to 25000 KHz
14:54:25: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:25: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:25: ####CSD Registe 2.0 Values####
14:54:25: CSD_STRUCTURE                                 :0x1
14:54:25: Reserv1                                       :0x0
14:54:25: Time Access 1 TAAC                            :0xe
14:54:25: Time Access 2 NSAC*100                        :0x0
14:54:25: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:25: Card Command Classess CCC                     :0x5b5
14:54:25: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:25: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:25: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:25: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:25: DSR(driver stage register)  DSR_IMP           :0x0
14:54:25: Reserv2                                       :0x0
14:54:25: Device Size C_SIZE                            :0xedc8
14:54:25: Reserv3                                       :0x0
14:54:25: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:25: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:25: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:25: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:25: Reserv4                                       :0x0
14:54:25: Write Speed Factor R2W_FACTOR                 :0x2
14:54:25: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:25: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:25: FILE_FORMAT_GRP                               :0x0
14:54:25: COPY flag                                     :0x1
14:54:25: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:25: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:25: File_Format                                   :0x0
14:54:25: CRC                                           :0x0
14:54:25: ####CSD Registe Values####  

14:54:25: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:25: [GetSCRRegisterEntry] Passed
14:54:25: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:25: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:25: Data_Status_After Erases          : 0
14:54:25: CPRM Security Support             : No Security
14:54:25: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:25: Spec. Version                     : Version 3.0X
14:54:25: Extended Security Support         : Extended_Security_Not_Supported
14:54:25: Command Support                   : COMMAND_SUPPORT
14:54:25: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123480>, <py_sfcl.CommandDataDefinition object at 0x06123390>) , Command count = 484 ] 
14:54:25: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061234B0>, <py_sfcl.CommandDataDefinition object at 0x0611EA80>) , Command count = 485 ] 
14:54:25: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:25: [ SetBusWidth(0x4) , Command count = 486 ] 
14:54:25: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:25: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611EEA0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 487 ] 
14:54:25: Protected Area Size 0x28000
14:54:25: Bus Width           2
14:54:25: Secure Mode         0
14:54:25: Speed  Class        4
14:54:25: Perf Move           0
14:54:25: Au Size             9
14:54:25: Erase Size          15
14:54:25: Erase Timeout       1
14:54:25: Erase offset        1
14:54:25: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:25: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:25: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 488 ] 
14:54:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:25: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:25: Host Frequency set to 100000 KHz
14:54:25: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:25: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:25: ####CSD Registe 2.0 Values####
14:54:25: CSD_STRUCTURE                                 :0x1
14:54:25: Reserv1                                       :0x0
14:54:25: Time Access 1 TAAC                            :0xe
14:54:25: Time Access 2 NSAC*100                        :0x0
14:54:25: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:25: Card Command Classess CCC                     :0x5b5
14:54:25: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:25: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:25: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:25: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:25: DSR(driver stage register)  DSR_IMP           :0x0
14:54:25: Reserv2                                       :0x0
14:54:25: Device Size C_SIZE                            :0xedc8
14:54:25: Reserv3                                       :0x0
14:54:25: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:25: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:25: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:25: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:25: Reserv4                                       :0x0
14:54:25: Write Speed Factor R2W_FACTOR                 :0x2
14:54:25: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:25: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:25: FILE_FORMAT_GRP                               :0x0
14:54:25: COPY flag                                     :0x1
14:54:25: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:25: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:25: File_Format                                   :0x0
14:54:25: CRC                                           :0x0
14:54:25: ####CSD Registe Values####  

14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123570>, <py_sfcl.CommandDataDefinition object at 0x0611EE10>) , Command count = 489 ] 
14:54:25: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123210>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 490 ] 
14:54:25: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:25: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:27: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123690>, 0x0, False) , Command count = 491 ] 
14:54:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123690>, 0x0, True) , Command count = 492 ] 
14:54:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:28: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 493 ] 
14:54:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:28: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:28: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 494 ] 
14:54:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233F0>, <py_sfcl.CommandDataDefinition object at 0x06123420>) , Command count = 495 ] 
14:54:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061237E0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 496 ] 
14:54:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:28: [ SetCardRCA(0x1, 0xD555) , Command count = 497 ] 
14:54:28: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:28: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:28: [ SetBusWidth(0x4) , Command count = 498 ] 
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:28: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 499 ] 
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:28: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 500 ] 
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:28: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 501 ] 
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:28: Host Frequency set to 25000 KHz

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:28: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 502 ] 
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x061234E0>, 0x0, False) , Command count = 503 ] 
14:54:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:28: SendOCR: 1107263488
14:54:28: ExcpectOCR: 3254747136
14:54:28: SendFirstOCR: 1107263488
14:54:28: SendNextOCR: 1107263488
14:54:28: SingleCommand: 0
14:54:28: SingleCommandTestType: 1
14:54:28: Identification: 1
14:54:28: ProtocolMode: 1
14:54:28: VerifyType: 0
14:54:28: SendCMD0: 1
14:54:28: SendCMD8: 1
14:54:28: SendCMD58: 1
14:54:28: SetPower: 1
14:54:28: HcsXpcS18r000: 16744448
14:54:28: HcsXpcS18r001: 33521664
14:54:28: HcsXpcS18r010: 285179904
14:54:28: HcsXpcS18r011: 301957120
14:54:28: HcsXpcS18r100: 1090486272
14:54:28: HcsXpcS18r101: 1107263488
14:54:28: HcsXpcS18r110: 1358921728
14:54:28: HcsXpcS18r111: 1375698944
14:54:28: ReadyCcs18a000: 16744448
14:54:28: ReadyCcs18a001: 33521664
14:54:28: ReadyCcs18a010: 1090486272
14:54:28: ReadyCcs18a011: 1107263488
14:54:28: ReadyCcs18a100: 2164228096
14:54:28: ReadyCcs18a101: 2181005312
14:54:28: ReadyCcs18a110: 3237969920
14:54:28: ReadyCcs18a111: 3254747136
14:54:28: Card Capacity is : 32.000000 GB
14:54:28: SendFirstOCR : 1375698944
14:54:28: SendOCR : 1375698944
14:54:28: SendOCR : 1375698944
14:54:28: ExpectOCR : 3254747136
14:54:28: globalSpeedMode : SDR50
14:54:28: globalPowerUp : powerCycle
14:54:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123960>, 0x0, False) , Command count = 504 ] 
14:54:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123960>, 0x0, True) , Command count = 505 ] 
14:54:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:30: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 506 ] 
14:54:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 507 ] 
14:54:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05267E70>, <py_sfcl.CommandDataDefinition object at 0x06123CF0>) , Command count = 508 ] 
14:54:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x061274E0>) , Command count = 509 ] 
14:54:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:30: [ SetCardRCA(0x1, 0xD555) , Command count = 510 ] 
14:54:30: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:30: [ SelectCard(0x1, True) , Command count = 511 ] 
14:54:30: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:30: [ SetBusWidth(0x4) , Command count = 512 ] 
14:54:30: VS_Flag========================1
14:54:30: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:30: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 513 ] 
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:30: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 514 ] 
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:30: Host Frequency set to 25000 KHz

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:30: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 515 ] 
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CC60>, 0x0, False) , Command count = 516 ] 
14:54:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:30: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:30: ####CSD Registe 2.0 Values####
14:54:30: CSD_STRUCTURE                                 :0x1
14:54:30: Reserv1                                       :0x0
14:54:30: Time Access 1 TAAC                            :0xe
14:54:30: Time Access 2 NSAC*100                        :0x0
14:54:30: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:30: Card Command Classess CCC                     :0x5b5
14:54:30: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:30: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:30: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:30: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:30: DSR(driver stage register)  DSR_IMP           :0x0
14:54:30: Reserv2                                       :0x0
14:54:30: Device Size C_SIZE                            :0xedc8
14:54:30: Reserv3                                       :0x0
14:54:30: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:30: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:30: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:30: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:30: Reserv4                                       :0x0
14:54:30: Write Speed Factor R2W_FACTOR                 :0x2
14:54:30: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:30: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:30: FILE_FORMAT_GRP                               :0x0
14:54:30: COPY flag                                     :0x1
14:54:30: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:30: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:30: File_Format                                   :0x0
14:54:30: CRC                                           :0x0
14:54:30: ####CSD Registe Values####  

14:54:30: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:31: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123CC0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 517 ] 
14:54:31: Protected Area Size 0x28000
14:54:31: Bus Width           2
14:54:31: Secure Mode         0
14:54:31: Speed  Class        4
14:54:31: Perf Move           0
14:54:31: Au Size             9
14:54:31: Erase Size          15
14:54:31: Erase Timeout       1
14:54:31: Erase offset        1
14:54:31: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:31: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:31: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 518 ] 
14:54:31: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:31: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:31: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 519 ] 
14:54:31: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:31: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:33: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:33: Host Frequency set to 25000 KHz
14:54:33: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:33: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:33: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C2A0>, 0x0, True) , Command count = 520 ] 
14:54:33: [GO18_globalSetVolt]### Host voltage value is set.
14:54:33: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CF90>, 0x0, False) , Command count = 521 ] 
14:54:33: [GO18_globalSetVolt]### Host voltage value is set.
14:54:33: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 522 ] 
14:54:33: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 523 ] 
14:54:33: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:33: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:33: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:33: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:33: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 524 ] 
14:54:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:33: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x06123D50>) , Command count = 525 ] 
14:54:33: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CDE0>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 526 ] 
14:54:33: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:33: [ SetCardRCA(0x1, 0xD555) , Command count = 527 ] 
14:54:33: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:33: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:33: Host Frequency set to 25000 KHz
14:54:33: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:33: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:33: ####CSD Registe 2.0 Values####
14:54:33: CSD_STRUCTURE                                 :0x1
14:54:33: Reserv1                                       :0x0
14:54:33: Time Access 1 TAAC                            :0xe
14:54:33: Time Access 2 NSAC*100                        :0x0
14:54:33: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:33: Card Command Classess CCC                     :0x5b5
14:54:33: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:33: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:33: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:33: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:33: DSR(driver stage register)  DSR_IMP           :0x0
14:54:33: Reserv2                                       :0x0
14:54:33: Device Size C_SIZE                            :0xedc8
14:54:33: Reserv3                                       :0x0
14:54:33: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:33: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:33: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:33: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:33: Reserv4                                       :0x0
14:54:33: Write Speed Factor R2W_FACTOR                 :0x2
14:54:33: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:33: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:33: FILE_FORMAT_GRP                               :0x0
14:54:33: COPY flag                                     :0x1
14:54:33: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:33: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:33: File_Format                                   :0x0
14:54:33: CRC                                           :0x0
14:54:33: ####CSD Registe Values####  

14:54:33: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:33: [GetSCRRegisterEntry] Passed
14:54:33: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:33: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:33: Data_Status_After Erases          : 0
14:54:33: CPRM Security Support             : No Security
14:54:33: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:33: Spec. Version                     : Version 3.0X
14:54:33: Extended Security Support         : Extended_Security_Not_Supported
14:54:33: Command Support                   : COMMAND_SUPPORT
14:54:33: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC60>, <py_sfcl.CommandDataDefinition object at 0x0528AA20>) , Command count = 528 ] 
14:54:33: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x06123AE0>) , Command count = 529 ] 
14:54:33: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:33: [ SetBusWidth(0x4) , Command count = 530 ] 
14:54:33: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:33: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123C30>, <0x200/0x200, Spc, pat:0x0>) , Command count = 531 ] 
14:54:33: Protected Area Size 0x28000
14:54:33: Bus Width           2
14:54:33: Secure Mode         0
14:54:33: Speed  Class        4
14:54:33: Perf Move           0
14:54:33: Au Size             9
14:54:33: Erase Size          15
14:54:33: Erase Timeout       1
14:54:33: Erase offset        1
14:54:33: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:33: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:33: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 532 ] 
14:54:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:33: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:33: Host Frequency set to 100000 KHz
14:54:33: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:33: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:33: ####CSD Registe 2.0 Values####
14:54:33: CSD_STRUCTURE                                 :0x1
14:54:33: Reserv1                                       :0x0
14:54:33: Time Access 1 TAAC                            :0xe
14:54:33: Time Access 2 NSAC*100                        :0x0
14:54:33: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:33: Card Command Classess CCC                     :0x5b5
14:54:33: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:33: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:33: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:33: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:33: DSR(driver stage register)  DSR_IMP           :0x0
14:54:33: Reserv2                                       :0x0
14:54:33: Device Size C_SIZE                            :0xedc8
14:54:33: Reserv3                                       :0x0
14:54:33: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:33: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:33: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:33: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:33: Reserv4                                       :0x0
14:54:33: Write Speed Factor R2W_FACTOR                 :0x2
14:54:33: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:33: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:33: FILE_FORMAT_GRP                               :0x0
14:54:33: COPY flag                                     :0x1
14:54:33: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:33: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:33: File_Format                                   :0x0
14:54:33: CRC                                           :0x0
14:54:33: ####CSD Registe Values####  

14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123F60>, <py_sfcl.CommandDataDefinition object at 0x06123E40>) , Command count = 533 ] 
14:54:33: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285FC0>, <py_sfcl.CommandDataDefinition object at 0x06123C00>) , Command count = 534 ] 
14:54:33: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:33: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, False) , Command count = 535 ] 
14:54:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, True) , Command count = 536 ] 
14:54:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:35: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 537 ] 
14:54:35: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:35: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:35: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:35: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:35: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:35: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 538 ] 
14:54:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285960>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 539 ] 
14:54:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A090>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 540 ] 
14:54:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:36: [ SetCardRCA(0x1, 0xD555) , Command count = 541 ] 
14:54:36: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:36: [ SetBusWidth(0x4) , Command count = 542 ] 
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 543 ] 
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 544 ] 
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 545 ] 
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:36: Host Frequency set to 25000 KHz

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 546 ] 
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, False) , Command count = 547 ] 
14:54:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:36: SendOCR: 1107263488
14:54:36: ExcpectOCR: 3254747136
14:54:36: SendFirstOCR: 1107263488
14:54:36: SendNextOCR: 1107263488
14:54:36: SingleCommand: 0
14:54:36: SingleCommandTestType: 1
14:54:36: Identification: 1
14:54:36: ProtocolMode: 1
14:54:36: VerifyType: 0
14:54:36: SendCMD0: 1
14:54:36: SendCMD8: 1
14:54:36: SendCMD58: 1
14:54:36: SetPower: 1
14:54:36: HcsXpcS18r000: 16744448
14:54:36: HcsXpcS18r001: 33521664
14:54:36: HcsXpcS18r010: 285179904
14:54:36: HcsXpcS18r011: 301957120
14:54:36: HcsXpcS18r100: 1090486272
14:54:36: HcsXpcS18r101: 1107263488
14:54:36: HcsXpcS18r110: 1358921728
14:54:36: HcsXpcS18r111: 1375698944
14:54:36: ReadyCcs18a000: 16744448
14:54:36: ReadyCcs18a001: 33521664
14:54:36: ReadyCcs18a010: 1090486272
14:54:36: ReadyCcs18a011: 1107263488
14:54:36: ReadyCcs18a100: 2164228096
14:54:36: ReadyCcs18a101: 2181005312
14:54:36: ReadyCcs18a110: 3237969920
14:54:36: ReadyCcs18a111: 3254747136
14:54:36: Card Capacity is : 32.000000 GB
14:54:36: SendFirstOCR : 1375698944
14:54:36: SendOCR : 1375698944
14:54:36: SendOCR : 1375698944
14:54:36: ExpectOCR : 3254747136
14:54:36: globalSpeedMode : SDR50
14:54:36: globalPowerUp : powerCycle
14:54:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A510>, 0x0, False) , Command count = 548 ] 
14:54:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A510>, 0x0, True) , Command count = 549 ] 
14:54:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:38: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 550 ] 
14:54:38: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:38: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:38: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:38: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:38: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:38: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 551 ] 
14:54:38: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:38: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x060C1540>) , Command count = 552 ] 
14:54:38: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1630>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 553 ] 
14:54:38: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:38: [ SetCardRCA(0x1, 0xD555) , Command count = 554 ] 
14:54:38: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:38: [ SelectCard(0x1, True) , Command count = 555 ] 
14:54:38: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:38: [ SetBusWidth(0x4) , Command count = 556 ] 
14:54:38: VS_Flag========================1
14:54:38: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:38: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 557 ] 
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:38: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 558 ] 
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:38: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:39: Host Frequency set to 25000 KHz

14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 559 ] 
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100180>, 0x0, False) , Command count = 560 ] 
14:54:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:39: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:39: ####CSD Registe 2.0 Values####
14:54:39: CSD_STRUCTURE                                 :0x1
14:54:39: Reserv1                                       :0x0
14:54:39: Time Access 1 TAAC                            :0xe
14:54:39: Time Access 2 NSAC*100                        :0x0
14:54:39: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:39: Card Command Classess CCC                     :0x5b5
14:54:39: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:39: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:39: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:39: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:39: DSR(driver stage register)  DSR_IMP           :0x0
14:54:39: Reserv2                                       :0x0
14:54:39: Device Size C_SIZE                            :0xedc8
14:54:39: Reserv3                                       :0x0
14:54:39: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:39: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:39: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:39: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:39: Reserv4                                       :0x0
14:54:39: Write Speed Factor R2W_FACTOR                 :0x2
14:54:39: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:39: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:39: FILE_FORMAT_GRP                               :0x0
14:54:39: COPY flag                                     :0x1
14:54:39: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:39: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:39: File_Format                                   :0x0
14:54:39: CRC                                           :0x0
14:54:39: ####CSD Registe Values####  

14:54:39: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:39: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x060C1A80>, <0x200/0x200, Spc, pat:0x0>) , Command count = 561 ] 
14:54:39: Protected Area Size 0x28000
14:54:39: Bus Width           2
14:54:39: Secure Mode         0
14:54:39: Speed  Class        4
14:54:39: Perf Move           0
14:54:39: Au Size             9
14:54:39: Erase Size          15
14:54:39: Erase Timeout       1
14:54:39: Erase offset        1
14:54:39: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:39: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 562 ] 
14:54:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:39: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 563 ] 
14:54:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:39: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:42: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:42: Host Frequency set to 25000 KHz
14:54:42: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:42: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:42: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002A0>, 0x0, True) , Command count = 564 ] 
14:54:42: [GO18_globalSetVolt]### Host voltage value is set.
14:54:42: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100120>, 0x0, False) , Command count = 565 ] 
14:54:42: [GO18_globalSetVolt]### Host voltage value is set.
14:54:42: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 566 ] 
14:54:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 567 ] 
14:54:42: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:42: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:42: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:42: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:42: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 568 ] 
14:54:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:42: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E630>, <py_sfcl.CommandDataDefinition object at 0x061004E0>) , Command count = 569 ] 
14:54:42: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100690>, <py_sfcl.CommandDataDefinition object at 0x061004B0>) , Command count = 570 ] 
14:54:42: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:42: [ SetCardRCA(0x1, 0xD555) , Command count = 571 ] 
14:54:42: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:42: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:42: Host Frequency set to 25000 KHz
14:54:42: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:42: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:42: ####CSD Registe 2.0 Values####
14:54:42: CSD_STRUCTURE                                 :0x1
14:54:42: Reserv1                                       :0x0
14:54:42: Time Access 1 TAAC                            :0xe
14:54:42: Time Access 2 NSAC*100                        :0x0
14:54:42: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:42: Card Command Classess CCC                     :0x5b5
14:54:42: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:42: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:42: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:42: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:42: DSR(driver stage register)  DSR_IMP           :0x0
14:54:42: Reserv2                                       :0x0
14:54:42: Device Size C_SIZE                            :0xedc8
14:54:42: Reserv3                                       :0x0
14:54:42: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:42: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:42: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:42: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:42: Reserv4                                       :0x0
14:54:42: Write Speed Factor R2W_FACTOR                 :0x2
14:54:42: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:42: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:42: FILE_FORMAT_GRP                               :0x0
14:54:42: COPY flag                                     :0x1
14:54:42: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:42: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:42: File_Format                                   :0x0
14:54:42: CRC                                           :0x0
14:54:42: ####CSD Registe Values####  

14:54:42: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:42: [GetSCRRegisterEntry] Passed
14:54:42: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:42: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:42: Data_Status_After Erases          : 0
14:54:42: CPRM Security Support             : No Security
14:54:42: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:42: Spec. Version                     : Version 3.0X
14:54:42: Extended Security Support         : Extended_Security_Not_Supported
14:54:42: Command Support                   : COMMAND_SUPPORT
14:54:42: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100510>, <py_sfcl.CommandDataDefinition object at 0x06100480>) , Command count = 572 ] 
14:54:42: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100540>, <py_sfcl.CommandDataDefinition object at 0x060C16F0>) , Command count = 573 ] 
14:54:42: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:42: [ SetBusWidth(0x4) , Command count = 574 ] 
14:54:42: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:42: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x060C1F00>, <0x200/0x200, Spc, pat:0x0>) , Command count = 575 ] 
14:54:42: Protected Area Size 0x28000
14:54:42: Bus Width           2
14:54:42: Secure Mode         0
14:54:42: Speed  Class        4
14:54:42: Perf Move           0
14:54:42: Au Size             9
14:54:42: Erase Size          15
14:54:42: Erase Timeout       1
14:54:42: Erase offset        1
14:54:42: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:42: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:42: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 576 ] 
14:54:42: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:42: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:42: Host Frequency set to 100000 KHz
14:54:42: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:42: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:42: ####CSD Registe 2.0 Values####
14:54:42: CSD_STRUCTURE                                 :0x1
14:54:42: Reserv1                                       :0x0
14:54:42: Time Access 1 TAAC                            :0xe
14:54:42: Time Access 2 NSAC*100                        :0x0
14:54:42: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:42: Card Command Classess CCC                     :0x5b5
14:54:42: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:42: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:42: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:42: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:42: DSR(driver stage register)  DSR_IMP           :0x0
14:54:42: Reserv2                                       :0x0
14:54:42: Device Size C_SIZE                            :0xedc8
14:54:42: Reserv3                                       :0x0
14:54:42: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:42: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:42: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:42: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:42: Reserv4                                       :0x0
14:54:42: Write Speed Factor R2W_FACTOR                 :0x2
14:54:42: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:42: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:42: FILE_FORMAT_GRP                               :0x0
14:54:42: COPY flag                                     :0x1
14:54:42: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:42: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:42: File_Format                                   :0x0
14:54:42: CRC                                           :0x0
14:54:42: ####CSD Registe Values####  

14:54:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF30>, <py_sfcl.CommandDataDefinition object at 0x0610E7B0>) , Command count = 577 ] 
14:54:43: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ECC0>, <py_sfcl.CommandDataDefinition object at 0x0610E750>) , Command count = 578 ] 
14:54:43: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:43: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111690>, 0x0, False) , Command count = 579 ] 
14:54:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111690>, 0x0, True) , Command count = 580 ] 
14:54:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:45: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 581 ] 
14:54:45: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:45: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:45: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:45: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:45: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:45: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:45: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 582 ] 
14:54:45: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:45: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EE40>, <py_sfcl.CommandDataDefinition object at 0x0610E7E0>) , Command count = 583 ] 
14:54:45: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EBA0>, <py_sfcl.CommandDataDefinition object at 0x0610ECF0>) , Command count = 584 ] 
14:54:45: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:45: [ SetCardRCA(0x1, 0xD555) , Command count = 585 ] 
14:54:45: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:45: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:45: [ SetBusWidth(0x4) , Command count = 586 ] 
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:45: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 587 ] 
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:45: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 588 ] 
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:45: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 589 ] 
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:45: Host Frequency set to 25000 KHz

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:45: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 590 ] 
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EAE0>, 0x0, False) , Command count = 591 ] 
14:54:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:45: SendOCR: 1107263488
14:54:45: ExcpectOCR: 3254747136
14:54:45: SendFirstOCR: 1107263488
14:54:45: SendNextOCR: 1107263488
14:54:45: SingleCommand: 0
14:54:45: SingleCommandTestType: 1
14:54:45: Identification: 1
14:54:45: ProtocolMode: 1
14:54:45: VerifyType: 0
14:54:45: SendCMD0: 1
14:54:45: SendCMD8: 1
14:54:45: SendCMD58: 1
14:54:45: SetPower: 1
14:54:45: HcsXpcS18r000: 16744448
14:54:45: HcsXpcS18r001: 33521664
14:54:45: HcsXpcS18r010: 285179904
14:54:45: HcsXpcS18r011: 301957120
14:54:45: HcsXpcS18r100: 1090486272
14:54:45: HcsXpcS18r101: 1107263488
14:54:45: HcsXpcS18r110: 1358921728
14:54:45: HcsXpcS18r111: 1375698944
14:54:45: ReadyCcs18a000: 16744448
14:54:45: ReadyCcs18a001: 33521664
14:54:45: ReadyCcs18a010: 1090486272
14:54:45: ReadyCcs18a011: 1107263488
14:54:45: ReadyCcs18a100: 2164228096
14:54:45: ReadyCcs18a101: 2181005312
14:54:45: ReadyCcs18a110: 3237969920
14:54:45: ReadyCcs18a111: 3254747136
14:54:45: Card Capacity is : 32.000000 GB
14:54:45: SendFirstOCR : 1375698944
14:54:45: SendOCR : 1375698944
14:54:45: SendOCR : 1375698944
14:54:45: ExpectOCR : 3254747136
14:54:45: globalSpeedMode : SDR50
14:54:45: globalPowerUp : powerCycle
14:54:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A690>, 0x0, False) , Command count = 592 ] 
14:54:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A690>, 0x0, True) , Command count = 593 ] 
14:54:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:47: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 594 ] 
14:54:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:48: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 595 ] 
14:54:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06111030>) , Command count = 596 ] 
14:54:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111150>, <py_sfcl.CommandDataDefinition object at 0x0610E930>) , Command count = 597 ] 
14:54:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:48: [ SetCardRCA(0x1, 0xD555) , Command count = 598 ] 
14:54:48: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:48: [ SelectCard(0x1, True) , Command count = 599 ] 
14:54:48: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:48: [ SetBusWidth(0x4) , Command count = 600 ] 
14:54:48: VS_Flag========================1
14:54:48: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:48: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 601 ] 
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:48: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 602 ] 
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:48: Host Frequency set to 25000 KHz

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:48: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 603 ] 
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111390>, 0x0, False) , Command count = 604 ] 
14:54:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:48: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:48: ####CSD Registe 2.0 Values####
14:54:48: CSD_STRUCTURE                                 :0x1
14:54:48: Reserv1                                       :0x0
14:54:48: Time Access 1 TAAC                            :0xe
14:54:48: Time Access 2 NSAC*100                        :0x0
14:54:48: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:48: Card Command Classess CCC                     :0x5b5
14:54:48: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:49: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:49: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:49: DSR(driver stage register)  DSR_IMP           :0x0
14:54:49: Reserv2                                       :0x0
14:54:49: Device Size C_SIZE                            :0xedc8
14:54:49: Reserv3                                       :0x0
14:54:49: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:49: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:49: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:49: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:49: Reserv4                                       :0x0
14:54:49: Write Speed Factor R2W_FACTOR                 :0x2
14:54:49: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:49: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:49: FILE_FORMAT_GRP                               :0x0
14:54:49: COPY flag                                     :0x1
14:54:49: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:49: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:49: File_Format                                   :0x0
14:54:49: CRC                                           :0x0
14:54:49: ####CSD Registe Values####  

14:54:49: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:49: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111360>, <0x200/0x200, Spc, pat:0x0>) , Command count = 605 ] 
14:54:49: Protected Area Size 0x28000
14:54:49: Bus Width           2
14:54:49: Secure Mode         0
14:54:49: Speed  Class        4
14:54:49: Perf Move           0
14:54:49: Au Size             9
14:54:49: Erase Size          15
14:54:49: Erase Timeout       1
14:54:49: Erase offset        1
14:54:49: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:49: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:49: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 606 ] 
14:54:49: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:49: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:49: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 607 ] 
14:54:49: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:49: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:51: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:51: Host Frequency set to 25000 KHz
14:54:51: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:51: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:51: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113C0>, 0x0, True) , Command count = 608 ] 
14:54:51: [GO18_globalSetVolt]### Host voltage value is set.
14:54:51: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111480>, 0x0, False) , Command count = 609 ] 
14:54:51: [GO18_globalSetVolt]### Host voltage value is set.
14:54:51: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 610 ] 
14:54:51: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 611 ] 
14:54:51: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:51: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:51: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:51: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:51: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:51: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 612 ] 
14:54:51: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:51: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111E0>, <py_sfcl.CommandDataDefinition object at 0x06111660>) , Command count = 613 ] 
14:54:51: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x061116C0>) , Command count = 614 ] 
14:54:51: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:51: [ SetCardRCA(0x1, 0xD555) , Command count = 615 ] 
14:54:51: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:51: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:51: Host Frequency set to 25000 KHz
14:54:51: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:51: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:51: ####CSD Registe 2.0 Values####
14:54:51: CSD_STRUCTURE                                 :0x1
14:54:51: Reserv1                                       :0x0
14:54:51: Time Access 1 TAAC                            :0xe
14:54:51: Time Access 2 NSAC*100                        :0x0
14:54:51: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:51: Card Command Classess CCC                     :0x5b5
14:54:51: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:51: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:51: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:51: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:51: DSR(driver stage register)  DSR_IMP           :0x0
14:54:51: Reserv2                                       :0x0
14:54:51: Device Size C_SIZE                            :0xedc8
14:54:51: Reserv3                                       :0x0
14:54:51: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:51: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:51: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:51: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:51: Reserv4                                       :0x0
14:54:51: Write Speed Factor R2W_FACTOR                 :0x2
14:54:51: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:51: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:51: FILE_FORMAT_GRP                               :0x0
14:54:51: COPY flag                                     :0x1
14:54:51: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:51: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:51: File_Format                                   :0x0
14:54:51: CRC                                           :0x0
14:54:51: ####CSD Registe Values####  

14:54:51: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:51: [GetSCRRegisterEntry] Passed
14:54:51: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:51: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:51: Data_Status_After Erases          : 0
14:54:51: CPRM Security Support             : No Security
14:54:51: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:51: Spec. Version                     : Version 3.0X
14:54:51: Extended Security Support         : Extended_Security_Not_Supported
14:54:51: Command Support                   : COMMAND_SUPPORT
14:54:51: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111810>, <py_sfcl.CommandDataDefinition object at 0x06111330>) , Command count = 616 ] 
14:54:51: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x0610E8D0>) , Command count = 617 ] 
14:54:51: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:51: [ SetBusWidth(0x4) , Command count = 618 ] 
14:54:51: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:51: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610EF90>, <0x200/0x200, Spc, pat:0x0>) , Command count = 619 ] 
14:54:51: Protected Area Size 0x28000
14:54:51: Bus Width           2
14:54:51: Secure Mode         0
14:54:51: Speed  Class        4
14:54:51: Perf Move           0
14:54:51: Au Size             9
14:54:51: Erase Size          15
14:54:51: Erase Timeout       1
14:54:51: Erase offset        1
14:54:51: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:51: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:51: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 620 ] 
14:54:51: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:51: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:52: Host Frequency set to 100000 KHz
14:54:52: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:52: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:52: ####CSD Registe 2.0 Values####
14:54:52: CSD_STRUCTURE                                 :0x1
14:54:52: Reserv1                                       :0x0
14:54:52: Time Access 1 TAAC                            :0xe
14:54:52: Time Access 2 NSAC*100                        :0x0
14:54:52: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:52: Card Command Classess CCC                     :0x5b5
14:54:52: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:52: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:52: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:52: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:52: DSR(driver stage register)  DSR_IMP           :0x0
14:54:52: Reserv2                                       :0x0
14:54:52: Device Size C_SIZE                            :0xedc8
14:54:52: Reserv3                                       :0x0
14:54:52: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:52: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:52: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:52: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:52: Reserv4                                       :0x0
14:54:52: Write Speed Factor R2W_FACTOR                 :0x2
14:54:52: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:52: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:52: FILE_FORMAT_GRP                               :0x0
14:54:52: COPY flag                                     :0x1
14:54:52: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:52: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:52: File_Format                                   :0x0
14:54:52: CRC                                           :0x0
14:54:52: ####CSD Registe Values####  

14:54:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x06111AB0>) , Command count = 621 ] 
14:54:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:54:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x06111B70>) , Command count = 622 ] 
14:54:52: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:54:52: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:54:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, False) , Command count = 623 ] 
14:54:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, True) , Command count = 624 ] 
14:54:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 625 ] 
14:54:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:54:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:54: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 626 ] 
14:54:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:54: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116F0>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 627 ] 
14:54:54: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x06111D20>) , Command count = 628 ] 
14:54:54: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:54: [ SetCardRCA(0x1, 0xD555) , Command count = 629 ] 
14:54:54: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:54: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:54: [ SetBusWidth(0x4) , Command count = 630 ] 
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 631 ] 
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:54: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 632 ] 
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:54: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 633 ] 
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:54: Host Frequency set to 25000 KHz

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [32799, 49153, 32783, 32783, 32769, 32769]
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 634 ] 
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x061117B0>, 0x0, False) , Command count = 635 ] 
14:54:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:54: SendOCR: 1107263488
14:54:54: ExcpectOCR: 3254747136
14:54:54: SendFirstOCR: 1107263488
14:54:54: SendNextOCR: 1107263488
14:54:54: SingleCommand: 0
14:54:54: SingleCommandTestType: 1
14:54:54: Identification: 1
14:54:54: ProtocolMode: 1
14:54:54: VerifyType: 0
14:54:54: SendCMD0: 1
14:54:54: SendCMD8: 1
14:54:54: SendCMD58: 1
14:54:54: SetPower: 1
14:54:54: HcsXpcS18r000: 16744448
14:54:54: HcsXpcS18r001: 33521664
14:54:54: HcsXpcS18r010: 285179904
14:54:54: HcsXpcS18r011: 301957120
14:54:54: HcsXpcS18r100: 1090486272
14:54:54: HcsXpcS18r101: 1107263488
14:54:54: HcsXpcS18r110: 1358921728
14:54:54: HcsXpcS18r111: 1375698944
14:54:54: ReadyCcs18a000: 16744448
14:54:54: ReadyCcs18a001: 33521664
14:54:54: ReadyCcs18a010: 1090486272
14:54:54: ReadyCcs18a011: 1107263488
14:54:54: ReadyCcs18a100: 2164228096
14:54:54: ReadyCcs18a101: 2181005312
14:54:54: ReadyCcs18a110: 3237969920
14:54:54: ReadyCcs18a111: 3254747136
14:54:54: Card Capacity is : 32.000000 GB
14:54:54: SendFirstOCR : 1375698944
14:54:54: SendOCR : 1375698944
14:54:54: SendOCR : 1375698944
14:54:54: ExpectOCR : 3254747136
14:54:54: globalSpeedMode : SDR50
14:54:54: globalPowerUp : powerCycle
14:54:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111780>, 0x0, False) , Command count = 636 ] 
14:54:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:54:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111780>, 0x0, True) , Command count = 637 ] 
14:54:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:56: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:54:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 638 ] 
14:54:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:56: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 639 ] 
14:54:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x061191E0>) , Command count = 640 ] 
14:54:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192A0>, <py_sfcl.CommandDataDefinition object at 0x0610ED50>) , Command count = 641 ] 
14:54:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:56: [ SetCardRCA(0x1, 0xD555) , Command count = 642 ] 
14:54:56: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:56: [ SelectCard(0x1, True) , Command count = 643 ] 
14:54:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:54:56: [ SetBusWidth(0x4) , Command count = 644 ] 
14:54:56: VS_Flag========================1
14:54:56: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:54:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:57: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 645 ] 
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:57: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 646 ] 
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:57: Host Frequency set to 25000 KHz

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:57: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 647 ] 
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:54:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:54:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x061119C0>, 0x0, False) , Command count = 648 ] 
14:54:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:54:57: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:57: ####CSD Registe 2.0 Values####
14:54:57: CSD_STRUCTURE                                 :0x1
14:54:57: Reserv1                                       :0x0
14:54:57: Time Access 1 TAAC                            :0xe
14:54:57: Time Access 2 NSAC*100                        :0x0
14:54:57: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:57: Card Command Classess CCC                     :0x5b5
14:54:57: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:57: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:57: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:57: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:57: DSR(driver stage register)  DSR_IMP           :0x0
14:54:57: Reserv2                                       :0x0
14:54:57: Device Size C_SIZE                            :0xedc8
14:54:57: Reserv3                                       :0x0
14:54:57: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:57: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:57: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:57: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:57: Reserv4                                       :0x0
14:54:57: Write Speed Factor R2W_FACTOR                 :0x2
14:54:57: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:57: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:57: FILE_FORMAT_GRP                               :0x0
14:54:57: COPY flag                                     :0x1
14:54:57: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:57: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:57: File_Format                                   :0x0
14:54:57: CRC                                           :0x0
14:54:57: ####CSD Registe Values####  

14:54:57: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:57: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119450>, <0x200/0x200, Spc, pat:0x0>) , Command count = 649 ] 
14:54:57: Protected Area Size 0x28000
14:54:57: Bus Width           2
14:54:57: Secure Mode         0
14:54:57: Speed  Class        4
14:54:57: Perf Move           0
14:54:57: Au Size             9
14:54:57: Erase Size          15
14:54:57: Erase Timeout       1
14:54:57: Erase offset        1
14:54:57: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:57: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:57: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 650 ] 
14:54:57: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:57: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:54:57: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 651 ] 
14:54:57: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:54:57: [GO4_globalInitCard]### Switch to Specify Card Type
14:54:59: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:59: Host Frequency set to 25000 KHz
14:54:59: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:59: [GO18_globalSetVolt]### Set Host Voltage value.
14:54:59: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:54:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111CF0>, 0x0, True) , Command count = 652 ] 
14:54:59: [GO18_globalSetVolt]### Host voltage value is set.
14:54:59: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:54:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111E70>, 0x0, False) , Command count = 653 ] 
14:54:59: [GO18_globalSetVolt]### Host voltage value is set.
14:54:59: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 654 ] 
14:54:59: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:54:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 655 ] 
14:54:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:54:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:54:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:54:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:54:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:54:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 656 ] 
14:54:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:54:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:54:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119780>, <py_sfcl.CommandDataDefinition object at 0x06119570>) , Command count = 657 ] 
14:54:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:54:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x06119870>) , Command count = 658 ] 
14:54:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:54:59: [ SetCardRCA(0x1, 0xD555) , Command count = 659 ] 
14:54:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:54:59: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:54:59: Host Frequency set to 25000 KHz
14:54:59: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:54:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:59: ####CSD Registe 2.0 Values####
14:54:59: CSD_STRUCTURE                                 :0x1
14:54:59: Reserv1                                       :0x0
14:54:59: Time Access 1 TAAC                            :0xe
14:54:59: Time Access 2 NSAC*100                        :0x0
14:54:59: Data Transfer Rate TRAN_SPEED                 :0x32
14:54:59: Card Command Classess CCC                     :0x5b5
14:54:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:59: DSR(driver stage register)  DSR_IMP           :0x0
14:54:59: Reserv2                                       :0x0
14:54:59: Device Size C_SIZE                            :0xedc8
14:54:59: Reserv3                                       :0x0
14:54:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:54:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:54:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:54:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:54:59: Reserv4                                       :0x0
14:54:59: Write Speed Factor R2W_FACTOR                 :0x2
14:54:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:54:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:54:59: FILE_FORMAT_GRP                               :0x0
14:54:59: COPY flag                                     :0x1
14:54:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:54:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:54:59: File_Format                                   :0x0
14:54:59: CRC                                           :0x0
14:54:59: ####CSD Registe Values####  

14:54:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:54:59: [GetSCRRegisterEntry] Passed
14:54:59: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:54:59: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:54:59: Data_Status_After Erases          : 0
14:54:59: CPRM Security Support             : No Security
14:54:59: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:54:59: Spec. Version                     : Version 3.0X
14:54:59: Extended Security Support         : Extended_Security_Not_Supported
14:54:59: Command Support                   : COMMAND_SUPPORT
14:54:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:54:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061199C0>, <py_sfcl.CommandDataDefinition object at 0x061194E0>) , Command count = 660 ] 
14:54:59: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:54:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061199F0>, <py_sfcl.CommandDataDefinition object at 0x061193C0>) , Command count = 661 ] 
14:54:59: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:54:59: [ SetBusWidth(0x4) , Command count = 662 ] 
14:54:59: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:54:59: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119270>, <0x200/0x200, Spc, pat:0x0>) , Command count = 663 ] 
14:54:59: Protected Area Size 0x28000
14:54:59: Bus Width           2
14:54:59: Secure Mode         0
14:54:59: Speed  Class        4
14:54:59: Perf Move           0
14:54:59: Au Size             9
14:54:59: Erase Size          15
14:54:59: Erase Timeout       1
14:54:59: Erase offset        1
14:54:59: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:54:59: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:54:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:54:59: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 664 ] 
14:54:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:54:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:54:59: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:54:59: Host Frequency set to 100000 KHz
14:54:59: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:54:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:54:59: ####CSD Registe 2.0 Values####
14:54:59: CSD_STRUCTURE                                 :0x1
14:54:59: Reserv1                                       :0x0
14:54:59: Time Access 1 TAAC                            :0xe
14:54:59: Time Access 2 NSAC*100                        :0x0
14:54:59: Data Transfer Rate TRAN_SPEED                 :0xb
14:54:59: Card Command Classess CCC                     :0x5b5
14:54:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:54:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:54:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:54:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:54:59: DSR(driver stage register)  DSR_IMP           :0x0
14:54:59: Reserv2                                       :0x0
14:54:59: Device Size C_SIZE                            :0xedc8
14:54:59: Reserv3                                       :0x0
14:54:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:00: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:00: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:00: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:00: Reserv4                                       :0x0
14:55:00: Write Speed Factor R2W_FACTOR                 :0x2
14:55:00: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:00: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:00: FILE_FORMAT_GRP                               :0x0
14:55:00: COPY flag                                     :0x1
14:55:00: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:00: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:00: File_Format                                   :0x0
14:55:00: CRC                                           :0x0
14:55:00: ####CSD Registe Values####  

14:55:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B40>, <py_sfcl.CommandDataDefinition object at 0x06119BD0>) , Command count = 665 ] 
14:55:00: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E720>, <py_sfcl.CommandDataDefinition object at 0x06119750>) , Command count = 666 ] 
14:55:00: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:00: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, False) , Command count = 667 ] 
14:55:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, True) , Command count = 668 ] 
14:55:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 669 ] 
14:55:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:02: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:02: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 670 ] 
14:55:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061198A0>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 671 ] 
14:55:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119EA0>, <py_sfcl.CommandDataDefinition object at 0x06119D20>) , Command count = 672 ] 
14:55:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:02: [ SetCardRCA(0x1, 0xD555) , Command count = 673 ] 
14:55:02: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:02: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:02: [ SetBusWidth(0x4) , Command count = 674 ] 
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:02: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 675 ] 
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:02: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:02: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 676 ] 
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:03: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:03: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 677 ] 
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:03: Host Frequency set to 25000 KHz

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:03: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:03: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 678 ] 
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:03: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:03: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119A20>, 0x0, False) , Command count = 679 ] 
14:55:03: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:03: SendOCR: 1107263488
14:55:03: ExcpectOCR: 3254747136
14:55:03: SendFirstOCR: 1107263488
14:55:03: SendNextOCR: 1107263488
14:55:03: SingleCommand: 0
14:55:03: SingleCommandTestType: 1
14:55:03: Identification: 1
14:55:03: ProtocolMode: 1
14:55:03: VerifyType: 0
14:55:03: SendCMD0: 1
14:55:03: SendCMD8: 1
14:55:03: SendCMD58: 1
14:55:03: SetPower: 1
14:55:03: HcsXpcS18r000: 16744448
14:55:03: HcsXpcS18r001: 33521664
14:55:03: HcsXpcS18r010: 285179904
14:55:03: HcsXpcS18r011: 301957120
14:55:03: HcsXpcS18r100: 1090486272
14:55:03: HcsXpcS18r101: 1107263488
14:55:03: HcsXpcS18r110: 1358921728
14:55:03: HcsXpcS18r111: 1375698944
14:55:03: ReadyCcs18a000: 16744448
14:55:03: ReadyCcs18a001: 33521664
14:55:03: ReadyCcs18a010: 1090486272
14:55:03: ReadyCcs18a011: 1107263488
14:55:03: ReadyCcs18a100: 2164228096
14:55:03: ReadyCcs18a101: 2181005312
14:55:03: ReadyCcs18a110: 3237969920
14:55:03: ReadyCcs18a111: 3254747136
14:55:03: Card Capacity is : 32.000000 GB
14:55:03: SendFirstOCR : 1375698944
14:55:03: SendOCR : 1375698944
14:55:03: SendOCR : 1375698944
14:55:03: ExpectOCR : 3254747136
14:55:03: globalSpeedMode : SDR50
14:55:03: globalPowerUp : powerCycle
14:55:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119930>, 0x0, False) , Command count = 680 ] 
14:55:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119930>, 0x0, True) , Command count = 681 ] 
14:55:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:05: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 682 ] 
14:55:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:05: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 683 ] 
14:55:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:05: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E180>, <py_sfcl.CommandDataDefinition object at 0x0611E150>) , Command count = 684 ] 
14:55:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E240>, <py_sfcl.CommandDataDefinition object at 0x061272D0>) , Command count = 685 ] 
14:55:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:05: [ SetCardRCA(0x1, 0xD555) , Command count = 686 ] 
14:55:05: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:05: [ SelectCard(0x1, True) , Command count = 687 ] 
14:55:05: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:05: [ SetBusWidth(0x4) , Command count = 688 ] 
14:55:05: VS_Flag========================1
14:55:05: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:05: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 689 ] 
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:05: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 690 ] 
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:05: Host Frequency set to 25000 KHz

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:05: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 691 ] 
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119FC0>, 0x0, False) , Command count = 692 ] 
14:55:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:05: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:05: ####CSD Registe 2.0 Values####
14:55:05: CSD_STRUCTURE                                 :0x1
14:55:05: Reserv1                                       :0x0
14:55:05: Time Access 1 TAAC                            :0xe
14:55:05: Time Access 2 NSAC*100                        :0x0
14:55:05: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:05: Card Command Classess CCC                     :0x5b5
14:55:05: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:05: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:05: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:05: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:05: DSR(driver stage register)  DSR_IMP           :0x0
14:55:05: Reserv2                                       :0x0
14:55:05: Device Size C_SIZE                            :0xedc8
14:55:05: Reserv3                                       :0x0
14:55:05: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:05: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:05: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:05: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:05: Reserv4                                       :0x0
14:55:05: Write Speed Factor R2W_FACTOR                 :0x2
14:55:05: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:05: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:05: FILE_FORMAT_GRP                               :0x0
14:55:05: COPY flag                                     :0x1
14:55:05: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:05: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:05: File_Format                                   :0x0
14:55:05: CRC                                           :0x0
14:55:05: ####CSD Registe Values####  

14:55:05: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:05: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E3F0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 693 ] 
14:55:05: Protected Area Size 0x28000
14:55:05: Bus Width           2
14:55:05: Secure Mode         0
14:55:05: Speed  Class        4
14:55:05: Perf Move           0
14:55:05: Au Size             9
14:55:05: Erase Size          15
14:55:05: Erase Timeout       1
14:55:05: Erase offset        1
14:55:05: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:05: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 694 ] 
14:55:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:05: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 695 ] 
14:55:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:05: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:07: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:07: Host Frequency set to 25000 KHz
14:55:07: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:07: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:07: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119AE0>, 0x0, True) , Command count = 696 ] 
14:55:07: [GO18_globalSetVolt]### Host voltage value is set.
14:55:07: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E70>, 0x0, False) , Command count = 697 ] 
14:55:07: [GO18_globalSetVolt]### Host voltage value is set.
14:55:07: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 698 ] 
14:55:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 699 ] 
14:55:08: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:08: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:08: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:08: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 700 ] 
14:55:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:08: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E720>, <py_sfcl.CommandDataDefinition object at 0x0611E780>) , Command count = 701 ] 
14:55:08: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x0611E810>) , Command count = 702 ] 
14:55:08: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:08: [ SetCardRCA(0x1, 0xD555) , Command count = 703 ] 
14:55:08: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:08: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:08: Host Frequency set to 25000 KHz
14:55:08: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:08: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:08: ####CSD Registe 2.0 Values####
14:55:08: CSD_STRUCTURE                                 :0x1
14:55:08: Reserv1                                       :0x0
14:55:08: Time Access 1 TAAC                            :0xe
14:55:08: Time Access 2 NSAC*100                        :0x0
14:55:08: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:08: Card Command Classess CCC                     :0x5b5
14:55:08: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:08: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:08: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:08: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:08: DSR(driver stage register)  DSR_IMP           :0x0
14:55:08: Reserv2                                       :0x0
14:55:08: Device Size C_SIZE                            :0xedc8
14:55:08: Reserv3                                       :0x0
14:55:08: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:08: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:08: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:08: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:08: Reserv4                                       :0x0
14:55:08: Write Speed Factor R2W_FACTOR                 :0x2
14:55:08: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:08: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:08: FILE_FORMAT_GRP                               :0x0
14:55:08: COPY flag                                     :0x1
14:55:08: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:08: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:08: File_Format                                   :0x0
14:55:08: CRC                                           :0x0
14:55:08: ####CSD Registe Values####  

14:55:08: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:08: [GetSCRRegisterEntry] Passed
14:55:08: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:08: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:08: Data_Status_After Erases          : 0
14:55:08: CPRM Security Support             : No Security
14:55:08: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:08: Spec. Version                     : Version 3.0X
14:55:08: Extended Security Support         : Extended_Security_Not_Supported
14:55:08: Command Support                   : COMMAND_SUPPORT
14:55:08: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E960>, <py_sfcl.CommandDataDefinition object at 0x0611E480>) , Command count = 704 ] 
14:55:08: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0611E510>) , Command count = 705 ] 
14:55:08: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:08: [ SetBusWidth(0x4) , Command count = 706 ] 
14:55:08: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:08: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E210>, <0x200/0x200, Spc, pat:0x0>) , Command count = 707 ] 
14:55:08: Protected Area Size 0x28000
14:55:08: Bus Width           2
14:55:08: Secure Mode         0
14:55:08: Speed  Class        4
14:55:08: Perf Move           0
14:55:08: Au Size             9
14:55:08: Erase Size          15
14:55:08: Erase Timeout       1
14:55:08: Erase offset        1
14:55:08: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:08: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:08: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 708 ] 
14:55:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:08: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:08: Host Frequency set to 100000 KHz
14:55:08: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:08: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:08: ####CSD Registe 2.0 Values####
14:55:08: CSD_STRUCTURE                                 :0x1
14:55:08: Reserv1                                       :0x0
14:55:08: Time Access 1 TAAC                            :0xe
14:55:08: Time Access 2 NSAC*100                        :0x0
14:55:08: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:08: Card Command Classess CCC                     :0x5b5
14:55:08: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:08: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:08: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:08: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:08: DSR(driver stage register)  DSR_IMP           :0x0
14:55:08: Reserv2                                       :0x0
14:55:08: Device Size C_SIZE                            :0xedc8
14:55:08: Reserv3                                       :0x0
14:55:08: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:08: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:08: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:08: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:08: Reserv4                                       :0x0
14:55:08: Write Speed Factor R2W_FACTOR                 :0x2
14:55:08: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:08: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:08: FILE_FORMAT_GRP                               :0x0
14:55:08: COPY flag                                     :0x1
14:55:08: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:08: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:08: File_Format                                   :0x0
14:55:08: CRC                                           :0x0
14:55:08: ####CSD Registe Values####  

14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EAE0>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 709 ] 
14:55:08: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E6F0>, <py_sfcl.CommandDataDefinition object at 0x0611EC30>) , Command count = 710 ] 
14:55:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:08: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, False) , Command count = 711 ] 
14:55:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, True) , Command count = 712 ] 
14:55:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 713 ] 
14:55:10: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:10: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:10: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:10: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:10: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:10: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 714 ] 
14:55:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:10: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x0611E870>) , Command count = 715 ] 
14:55:10: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0611ECC0>) , Command count = 716 ] 
14:55:10: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:10: [ SetCardRCA(0x1, 0xD555) , Command count = 717 ] 
14:55:10: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:10: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:10: [ SetBusWidth(0x4) , Command count = 718 ] 
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:10: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 719 ] 
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:10: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 720 ] 
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:10: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 721 ] 
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:10: Host Frequency set to 25000 KHz

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:10: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 722 ] 
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E9C0>, 0x0, False) , Command count = 723 ] 
14:55:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:10: SendOCR: 1107263488
14:55:10: ExcpectOCR: 3254747136
14:55:10: SendFirstOCR: 1107263488
14:55:10: SendNextOCR: 1107263488
14:55:10: SingleCommand: 0
14:55:10: SingleCommandTestType: 1
14:55:10: Identification: 1
14:55:10: ProtocolMode: 1
14:55:10: VerifyType: 0
14:55:10: SendCMD0: 1
14:55:10: SendCMD8: 1
14:55:10: SendCMD58: 1
14:55:10: SetPower: 1
14:55:10: HcsXpcS18r000: 16744448
14:55:10: HcsXpcS18r001: 33521664
14:55:10: HcsXpcS18r010: 285179904
14:55:10: HcsXpcS18r011: 301957120
14:55:10: HcsXpcS18r100: 1090486272
14:55:10: HcsXpcS18r101: 1107263488
14:55:10: HcsXpcS18r110: 1358921728
14:55:10: HcsXpcS18r111: 1375698944
14:55:10: ReadyCcs18a000: 16744448
14:55:10: ReadyCcs18a001: 33521664
14:55:10: ReadyCcs18a010: 1090486272
14:55:10: ReadyCcs18a011: 1107263488
14:55:10: ReadyCcs18a100: 2164228096
14:55:10: ReadyCcs18a101: 2181005312
14:55:10: ReadyCcs18a110: 3237969920
14:55:10: ReadyCcs18a111: 3254747136
14:55:10: Card Capacity is : 32.000000 GB
14:55:10: SendFirstOCR : 1375698944
14:55:10: SendOCR : 1375698944
14:55:10: SendOCR : 1375698944
14:55:11: ExpectOCR : 3254747136
14:55:11: globalSpeedMode : SDR50
14:55:11: globalPowerUp : powerCycle
14:55:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8D0>, 0x0, False) , Command count = 724 ] 
14:55:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8D0>, 0x0, True) , Command count = 725 ] 
14:55:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:13: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 726 ] 
14:55:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:13: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 727 ] 
14:55:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:13: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123150>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 728 ] 
14:55:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123240>, <py_sfcl.CommandDataDefinition object at 0x06127480>) , Command count = 729 ] 
14:55:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:13: [ SetCardRCA(0x1, 0xD555) , Command count = 730 ] 
14:55:13: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:13: [ SelectCard(0x1, True) , Command count = 731 ] 
14:55:13: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:13: [ SetBusWidth(0x4) , Command count = 732 ] 
14:55:13: VS_Flag========================1
14:55:13: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:13: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 733 ] 
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:13: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 734 ] 
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:13: Host Frequency set to 25000 KHz

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:13: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 735 ] 
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF60>, 0x0, False) , Command count = 736 ] 
14:55:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:13: ####CSD Registe 2.0 Values####
14:55:13: CSD_STRUCTURE                                 :0x1
14:55:13: Reserv1                                       :0x0
14:55:13: Time Access 1 TAAC                            :0xe
14:55:13: Time Access 2 NSAC*100                        :0x0
14:55:13: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:13: Card Command Classess CCC                     :0x5b5
14:55:13: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:13: DSR(driver stage register)  DSR_IMP           :0x0
14:55:13: Reserv2                                       :0x0
14:55:13: Device Size C_SIZE                            :0xedc8
14:55:13: Reserv3                                       :0x0
14:55:13: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:13: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:13: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:13: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:13: Reserv4                                       :0x0
14:55:13: Write Speed Factor R2W_FACTOR                 :0x2
14:55:13: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:13: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:13: FILE_FORMAT_GRP                               :0x0
14:55:13: COPY flag                                     :0x1
14:55:13: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:13: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:13: File_Format                                   :0x0
14:55:13: CRC                                           :0x0
14:55:13: ####CSD Registe Values####  

14:55:13: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:13: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123390>, <0x200/0x200, Spc, pat:0x0>) , Command count = 737 ] 
14:55:13: Protected Area Size 0x28000
14:55:13: Bus Width           2
14:55:13: Secure Mode         0
14:55:13: Speed  Class        4
14:55:13: Perf Move           0
14:55:13: Au Size             9
14:55:13: Erase Size          15
14:55:13: Erase Timeout       1
14:55:13: Erase offset        1
14:55:13: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:13: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 738 ] 
14:55:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:13: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 739 ] 
14:55:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:13: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:15: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:15: Host Frequency set to 25000 KHz
14:55:15: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:15: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:15: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EA80>, 0x0, True) , Command count = 740 ] 
14:55:15: [GO18_globalSetVolt]### Host voltage value is set.
14:55:15: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EE10>, 0x0, False) , Command count = 741 ] 
14:55:15: [GO18_globalSetVolt]### Host voltage value is set.
14:55:15: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 742 ] 
14:55:15: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 743 ] 
14:55:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:15: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 744 ] 
14:55:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:15: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061236C0>, <py_sfcl.CommandDataDefinition object at 0x06123720>) , Command count = 745 ] 
14:55:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123210>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 746 ] 
14:55:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:15: [ SetCardRCA(0x1, 0xD555) , Command count = 747 ] 
14:55:16: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:16: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:16: Host Frequency set to 25000 KHz
14:55:16: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:16: ####CSD Registe 2.0 Values####
14:55:16: CSD_STRUCTURE                                 :0x1
14:55:16: Reserv1                                       :0x0
14:55:16: Time Access 1 TAAC                            :0xe
14:55:16: Time Access 2 NSAC*100                        :0x0
14:55:16: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:16: Card Command Classess CCC                     :0x5b5
14:55:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:16: DSR(driver stage register)  DSR_IMP           :0x0
14:55:16: Reserv2                                       :0x0
14:55:16: Device Size C_SIZE                            :0xedc8
14:55:16: Reserv3                                       :0x0
14:55:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:16: Reserv4                                       :0x0
14:55:16: Write Speed Factor R2W_FACTOR                 :0x2
14:55:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:16: FILE_FORMAT_GRP                               :0x0
14:55:16: COPY flag                                     :0x1
14:55:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:16: File_Format                                   :0x0
14:55:16: CRC                                           :0x0
14:55:16: ####CSD Registe Values####  

14:55:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:16: [GetSCRRegisterEntry] Passed
14:55:16: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:16: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:16: Data_Status_After Erases          : 0
14:55:16: CPRM Security Support             : No Security
14:55:16: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:16: Spec. Version                     : Version 3.0X
14:55:16: Extended Security Support         : Extended_Security_Not_Supported
14:55:16: Command Support                   : COMMAND_SUPPORT
14:55:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123900>, <py_sfcl.CommandDataDefinition object at 0x06123420>) , Command count = 748 ] 
14:55:16: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123930>, <py_sfcl.CommandDataDefinition object at 0x061234B0>) , Command count = 749 ] 
14:55:16: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:16: [ SetBusWidth(0x4) , Command count = 750 ] 
14:55:16: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:16: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123450>, <0x200/0x200, Spc, pat:0x0>) , Command count = 751 ] 
14:55:16: Protected Area Size 0x28000
14:55:16: Bus Width           2
14:55:16: Secure Mode         0
14:55:16: Speed  Class        4
14:55:16: Perf Move           0
14:55:16: Au Size             9
14:55:16: Erase Size          15
14:55:16: Erase Timeout       1
14:55:16: Erase offset        1
14:55:16: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:16: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:16: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 752 ] 
14:55:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:16: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:16: Host Frequency set to 100000 KHz
14:55:16: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:16: ####CSD Registe 2.0 Values####
14:55:16: CSD_STRUCTURE                                 :0x1
14:55:16: Reserv1                                       :0x0
14:55:16: Time Access 1 TAAC                            :0xe
14:55:16: Time Access 2 NSAC*100                        :0x0
14:55:16: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:16: Card Command Classess CCC                     :0x5b5
14:55:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:16: DSR(driver stage register)  DSR_IMP           :0x0
14:55:16: Reserv2                                       :0x0
14:55:16: Device Size C_SIZE                            :0xedc8
14:55:16: Reserv3                                       :0x0
14:55:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:16: Reserv4                                       :0x0
14:55:16: Write Speed Factor R2W_FACTOR                 :0x2
14:55:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:16: FILE_FORMAT_GRP                               :0x0
14:55:16: COPY flag                                     :0x1
14:55:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:16: File_Format                                   :0x0
14:55:16: CRC                                           :0x0
14:55:16: ####CSD Registe Values####  

14:55:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123A80>, <py_sfcl.CommandDataDefinition object at 0x06123B10>) , Command count = 753 ] 
14:55:16: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123690>, <py_sfcl.CommandDataDefinition object at 0x06123BA0>) , Command count = 754 ] 
14:55:17: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:17: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AFC0>, 0x0, False) , Command count = 755 ] 
14:55:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AFC0>, 0x0, True) , Command count = 756 ] 
14:55:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:19: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 757 ] 
14:55:19: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:19: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:19: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:19: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:19: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:19: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:19: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 758 ] 
14:55:19: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:19: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x052571B0>, <py_sfcl.CommandDataDefinition object at 0x061237E0>) , Command count = 759 ] 
14:55:19: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05267E70>, <py_sfcl.CommandDataDefinition object at 0x06123CF0>) , Command count = 760 ] 
14:55:19: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:19: [ SetCardRCA(0x1, 0xD555) , Command count = 761 ] 
14:55:19: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:19: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:19: [ SetBusWidth(0x4) , Command count = 762 ] 
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:19: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 763 ] 
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:19: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:19: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 764 ] 
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:19: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:19: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 765 ] 
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:20: Host Frequency set to 25000 KHz

14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:20: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:20: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 766 ] 
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:20: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123960>, 0x0, False) , Command count = 767 ] 
14:55:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:20: SendOCR: 1107263488
14:55:20: ExcpectOCR: 3254747136
14:55:20: SendFirstOCR: 1107263488
14:55:20: SendNextOCR: 1107263488
14:55:20: SingleCommand: 0
14:55:20: SingleCommandTestType: 1
14:55:20: Identification: 1
14:55:20: ProtocolMode: 1
14:55:20: VerifyType: 0
14:55:20: SendCMD0: 1
14:55:20: SendCMD8: 1
14:55:20: SendCMD58: 1
14:55:20: SetPower: 1
14:55:20: HcsXpcS18r000: 16744448
14:55:20: HcsXpcS18r001: 33521664
14:55:20: HcsXpcS18r010: 285179904
14:55:20: HcsXpcS18r011: 301957120
14:55:20: HcsXpcS18r100: 1090486272
14:55:20: HcsXpcS18r101: 1107263488
14:55:20: HcsXpcS18r110: 1358921728
14:55:20: HcsXpcS18r111: 1375698944
14:55:20: ReadyCcs18a000: 16744448
14:55:20: ReadyCcs18a001: 33521664
14:55:20: ReadyCcs18a010: 1090486272
14:55:20: ReadyCcs18a011: 1107263488
14:55:20: ReadyCcs18a100: 2164228096
14:55:20: ReadyCcs18a101: 2181005312
14:55:20: ReadyCcs18a110: 3237969920
14:55:20: ReadyCcs18a111: 3254747136
14:55:20: Card Capacity is : 32.000000 GB
14:55:20: SendFirstOCR : 1375698944
14:55:20: SendOCR : 1375698944
14:55:20: SendOCR : 1375698944
14:55:20: ExpectOCR : 3254747136
14:55:20: globalSpeedMode : SDR50
14:55:20: globalPowerUp : powerCycle
14:55:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123870>, 0x0, False) , Command count = 768 ] 
14:55:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123870>, 0x0, True) , Command count = 769 ] 
14:55:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:22: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 770 ] 
14:55:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:23: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 771 ] 
14:55:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:23: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x06123F30>) , Command count = 772 ] 
14:55:23: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0526B450>, <py_sfcl.CommandDataDefinition object at 0x06127480>) , Command count = 773 ] 
14:55:23: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:23: [ SetCardRCA(0x1, 0xD555) , Command count = 774 ] 
14:55:23: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:23: [ SelectCard(0x1, True) , Command count = 775 ] 
14:55:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:23: [ SetBusWidth(0x4) , Command count = 776 ] 
14:55:23: VS_Flag========================1
14:55:23: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:23: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 777 ] 
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:23: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 778 ] 
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:23: Host Frequency set to 25000 KHz

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:23: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 779 ] 
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:23: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AC60>, 0x0, False) , Command count = 780 ] 
14:55:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:24: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:24: ####CSD Registe 2.0 Values####
14:55:24: CSD_STRUCTURE                                 :0x1
14:55:24: Reserv1                                       :0x0
14:55:24: Time Access 1 TAAC                            :0xe
14:55:24: Time Access 2 NSAC*100                        :0x0
14:55:24: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:24: Card Command Classess CCC                     :0x5b5
14:55:24: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:24: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:24: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:24: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:24: DSR(driver stage register)  DSR_IMP           :0x0
14:55:24: Reserv2                                       :0x0
14:55:24: Device Size C_SIZE                            :0xedc8
14:55:24: Reserv3                                       :0x0
14:55:24: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:24: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:24: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:24: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:24: Reserv4                                       :0x0
14:55:24: Write Speed Factor R2W_FACTOR                 :0x2
14:55:24: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:24: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:24: FILE_FORMAT_GRP                               :0x0
14:55:24: COPY flag                                     :0x1
14:55:24: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:24: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:24: File_Format                                   :0x0
14:55:24: CRC                                           :0x0
14:55:24: ####CSD Registe Values####  

14:55:24: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:24: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123E10>, <0x200/0x200, Spc, pat:0x0>) , Command count = 781 ] 
14:55:24: Protected Area Size 0x28000
14:55:24: Bus Width           2
14:55:24: Secure Mode         0
14:55:24: Speed  Class        4
14:55:24: Perf Move           0
14:55:24: Au Size             9
14:55:24: Erase Size          15
14:55:24: Erase Timeout       1
14:55:24: Erase offset        1
14:55:24: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:24: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 782 ] 
14:55:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:24: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 783 ] 
14:55:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:24: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:26: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:26: Host Frequency set to 25000 KHz
14:55:26: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:26: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:26: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AC90>, 0x0, True) , Command count = 784 ] 
14:55:26: [GO18_globalSetVolt]### Host voltage value is set.
14:55:26: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123F60>, 0x0, False) , Command count = 785 ] 
14:55:26: [GO18_globalSetVolt]### Host voltage value is set.
14:55:26: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 786 ] 
14:55:26: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 787 ] 
14:55:26: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:26: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:26: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:26: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:26: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 788 ] 
14:55:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:26: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x052654E0>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 789 ] 
14:55:26: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285FC0>, <py_sfcl.CommandDataDefinition object at 0x06123C00>) , Command count = 790 ] 
14:55:26: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:26: [ SetCardRCA(0x1, 0xD555) , Command count = 791 ] 
14:55:27: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:27: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:27: Host Frequency set to 25000 KHz
14:55:27: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:27: ####CSD Registe 2.0 Values####
14:55:27: CSD_STRUCTURE                                 :0x1
14:55:27: Reserv1                                       :0x0
14:55:27: Time Access 1 TAAC                            :0xe
14:55:27: Time Access 2 NSAC*100                        :0x0
14:55:27: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:27: Card Command Classess CCC                     :0x5b5
14:55:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:27: DSR(driver stage register)  DSR_IMP           :0x0
14:55:27: Reserv2                                       :0x0
14:55:27: Device Size C_SIZE                            :0xedc8
14:55:27: Reserv3                                       :0x0
14:55:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:27: Reserv4                                       :0x0
14:55:27: Write Speed Factor R2W_FACTOR                 :0x2
14:55:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:27: FILE_FORMAT_GRP                               :0x0
14:55:27: COPY flag                                     :0x1
14:55:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:27: File_Format                                   :0x0
14:55:27: CRC                                           :0x0
14:55:27: ####CSD Registe Values####  

14:55:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:27: [GetSCRRegisterEntry] Passed
14:55:27: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:27: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:27: Data_Status_After Erases          : 0
14:55:27: CPRM Security Support             : No Security
14:55:27: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:27: Spec. Version                     : Version 3.0X
14:55:27: Extended Security Support         : Extended_Security_Not_Supported
14:55:27: Command Support                   : COMMAND_SUPPORT
14:55:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A060>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 792 ] 
14:55:27: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A300>, <py_sfcl.CommandDataDefinition object at 0x06123E70>) , Command count = 793 ] 
14:55:27: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:27: [ SetBusWidth(0x4) , Command count = 794 ] 
14:55:27: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:27: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127360>, <0x200/0x200, Spc, pat:0x0>) , Command count = 795 ] 
14:55:27: Protected Area Size 0x28000
14:55:27: Bus Width           2
14:55:27: Secure Mode         0
14:55:27: Speed  Class        4
14:55:27: Perf Move           0
14:55:27: Au Size             9
14:55:27: Erase Size          15
14:55:27: Erase Timeout       1
14:55:27: Erase offset        1
14:55:27: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:27: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:27: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 796 ] 
14:55:27: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:27: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:27: Host Frequency set to 100000 KHz
14:55:27: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:27: ####CSD Registe 2.0 Values####
14:55:27: CSD_STRUCTURE                                 :0x1
14:55:27: Reserv1                                       :0x0
14:55:27: Time Access 1 TAAC                            :0xe
14:55:27: Time Access 2 NSAC*100                        :0x0
14:55:27: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:27: Card Command Classess CCC                     :0x5b5
14:55:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:27: DSR(driver stage register)  DSR_IMP           :0x0
14:55:27: Reserv2                                       :0x0
14:55:27: Device Size C_SIZE                            :0xedc8
14:55:27: Reserv3                                       :0x0
14:55:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:27: Reserv4                                       :0x0
14:55:27: Write Speed Factor R2W_FACTOR                 :0x2
14:55:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:27: FILE_FORMAT_GRP                               :0x0
14:55:27: COPY flag                                     :0x1
14:55:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:27: File_Format                                   :0x0
14:55:27: CRC                                           :0x0
14:55:27: ####CSD Registe Values####  

14:55:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A7E0>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 797 ] 
14:55:27: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF30>, <py_sfcl.CommandDataDefinition object at 0x061270F0>) , Command count = 798 ] 
14:55:28: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:28: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, False) , Command count = 799 ] 
14:55:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, True) , Command count = 800 ] 
14:55:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:30: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 801 ] 
14:55:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 802 ] 
14:55:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A090>, <py_sfcl.CommandDataDefinition object at 0x060C1BD0>) , Command count = 803 ] 
14:55:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x060C1540>) , Command count = 804 ] 
14:55:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:30: [ SetCardRCA(0x1, 0xD555) , Command count = 805 ] 
14:55:30: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:30: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:30: [ SetBusWidth(0x4) , Command count = 806 ] 
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:30: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 807 ] 
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:30: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:30: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 808 ] 
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:30: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:30: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 809 ] 
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:31: Host Frequency set to 25000 KHz

14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:31: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:31: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 810 ] 
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:31: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:31: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A510>, 0x0, False) , Command count = 811 ] 
14:55:31: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:31: SendOCR: 1107263488
14:55:31: ExcpectOCR: 3254747136
14:55:31: SendFirstOCR: 1107263488
14:55:31: SendNextOCR: 1107263488
14:55:31: SingleCommand: 0
14:55:31: SingleCommandTestType: 1
14:55:31: Identification: 1
14:55:31: ProtocolMode: 1
14:55:31: VerifyType: 0
14:55:31: SendCMD0: 1
14:55:31: SendCMD8: 1
14:55:31: SendCMD58: 1
14:55:31: SetPower: 1
14:55:31: HcsXpcS18r000: 16744448
14:55:31: HcsXpcS18r001: 33521664
14:55:31: HcsXpcS18r010: 285179904
14:55:31: HcsXpcS18r011: 301957120
14:55:31: HcsXpcS18r100: 1090486272
14:55:31: HcsXpcS18r101: 1107263488
14:55:31: HcsXpcS18r110: 1358921728
14:55:31: HcsXpcS18r111: 1375698944
14:55:31: ReadyCcs18a000: 16744448
14:55:31: ReadyCcs18a001: 33521664
14:55:31: ReadyCcs18a010: 1090486272
14:55:31: ReadyCcs18a011: 1107263488
14:55:31: ReadyCcs18a100: 2164228096
14:55:31: ReadyCcs18a101: 2181005312
14:55:31: ReadyCcs18a110: 3237969920
14:55:31: ReadyCcs18a111: 3254747136
14:55:31: Card Capacity is : 32.000000 GB
14:55:31: SendFirstOCR : 1375698944
14:55:31: SendOCR : 1375698944
14:55:31: SendOCR : 1375698944
14:55:31: ExpectOCR : 3254747136
14:55:31: globalSpeedMode : SDR50
14:55:31: globalPowerUp : powerCycle
14:55:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A030>, 0x0, False) , Command count = 812 ] 
14:55:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A030>, 0x0, True) , Command count = 813 ] 
14:55:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:33: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 814 ] 
14:55:34: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:34: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:34: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:34: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:34: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 815 ] 
14:55:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:34: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x06100150>) , Command count = 816 ] 
14:55:34: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100570>, <py_sfcl.CommandDataDefinition object at 0x061000C0>) , Command count = 817 ] 
14:55:34: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:34: [ SetCardRCA(0x1, 0xD555) , Command count = 818 ] 
14:55:34: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:34: [ SelectCard(0x1, True) , Command count = 819 ] 
14:55:34: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:34: [ SetBusWidth(0x4) , Command count = 820 ] 
14:55:34: VS_Flag========================1
14:55:34: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:34: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 821 ] 
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:34: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 822 ] 
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:34: Host Frequency set to 25000 KHz

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:34: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 823 ] 
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:34: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1840>, 0x0, False) , Command count = 824 ] 
14:55:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:34: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:34: ####CSD Registe 2.0 Values####
14:55:34: CSD_STRUCTURE                                 :0x1
14:55:34: Reserv1                                       :0x0
14:55:34: Time Access 1 TAAC                            :0xe
14:55:34: Time Access 2 NSAC*100                        :0x0
14:55:34: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:34: Card Command Classess CCC                     :0x5b5
14:55:34: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:34: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:34: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:34: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:34: DSR(driver stage register)  DSR_IMP           :0x0
14:55:34: Reserv2                                       :0x0
14:55:34: Device Size C_SIZE                            :0xedc8
14:55:34: Reserv3                                       :0x0
14:55:34: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:34: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:34: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:34: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:34: Reserv4                                       :0x0
14:55:34: Write Speed Factor R2W_FACTOR                 :0x2
14:55:34: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:34: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:34: FILE_FORMAT_GRP                               :0x0
14:55:34: COPY flag                                     :0x1
14:55:34: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:34: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:34: File_Format                                   :0x0
14:55:34: CRC                                           :0x0
14:55:34: ####CSD Registe Values####  

14:55:34: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:34: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x060C1690>, <0x200/0x200, Spc, pat:0x0>) , Command count = 825 ] 
14:55:34: Protected Area Size 0x28000
14:55:34: Bus Width           2
14:55:34: Secure Mode         0
14:55:34: Speed  Class        4
14:55:34: Perf Move           0
14:55:34: Au Size             9
14:55:34: Erase Size          15
14:55:34: Erase Timeout       1
14:55:34: Erase offset        1
14:55:34: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:34: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 826 ] 
14:55:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:34: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 827 ] 
14:55:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:34: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:36: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:36: Host Frequency set to 25000 KHz
14:55:36: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:36: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:36: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C16F0>, 0x0, True) , Command count = 828 ] 
14:55:36: [GO18_globalSetVolt]### Host voltage value is set.
14:55:36: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100540>, 0x0, False) , Command count = 829 ] 
14:55:36: [GO18_globalSetVolt]### Host voltage value is set.
14:55:36: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 830 ] 
14:55:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 831 ] 
14:55:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 832 ] 
14:55:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF00>, <py_sfcl.CommandDataDefinition object at 0x06100690>) , Command count = 833 ] 
14:55:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ECC0>, <py_sfcl.CommandDataDefinition object at 0x0610E750>) , Command count = 834 ] 
14:55:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:36: [ SetCardRCA(0x1, 0xD555) , Command count = 835 ] 
14:55:36: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:36: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:36: Host Frequency set to 25000 KHz
14:55:36: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:36: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:36: ####CSD Registe 2.0 Values####
14:55:36: CSD_STRUCTURE                                 :0x1
14:55:36: Reserv1                                       :0x0
14:55:36: Time Access 1 TAAC                            :0xe
14:55:36: Time Access 2 NSAC*100                        :0x0
14:55:36: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:36: Card Command Classess CCC                     :0x5b5
14:55:36: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:36: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:36: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:36: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:36: DSR(driver stage register)  DSR_IMP           :0x0
14:55:36: Reserv2                                       :0x0
14:55:36: Device Size C_SIZE                            :0xedc8
14:55:36: Reserv3                                       :0x0
14:55:36: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:36: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:36: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:36: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:36: Reserv4                                       :0x0
14:55:36: Write Speed Factor R2W_FACTOR                 :0x2
14:55:36: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:36: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:36: FILE_FORMAT_GRP                               :0x0
14:55:36: COPY flag                                     :0x1
14:55:36: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:36: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:36: File_Format                                   :0x0
14:55:36: CRC                                           :0x0
14:55:36: ####CSD Registe Values####  

14:55:36: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:36: [GetSCRRegisterEntry] Passed
14:55:36: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:36: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:36: Data_Status_After Erases          : 0
14:55:36: CPRM Security Support             : No Security
14:55:36: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:36: Spec. Version                     : Version 3.0X
14:55:36: Extended Security Support         : Extended_Security_Not_Supported
14:55:36: Command Support                   : COMMAND_SUPPORT
14:55:36: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7E0>, <py_sfcl.CommandDataDefinition object at 0x061005A0>) , Command count = 836 ] 
14:55:36: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E900>, <py_sfcl.CommandDataDefinition object at 0x06100240>) , Command count = 837 ] 
14:55:36: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:36: [ SetBusWidth(0x4) , Command count = 838 ] 
14:55:36: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:36: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061004B0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 839 ] 
14:55:36: Protected Area Size 0x28000
14:55:36: Bus Width           2
14:55:36: Secure Mode         0
14:55:36: Speed  Class        4
14:55:36: Perf Move           0
14:55:36: Au Size             9
14:55:36: Erase Size          15
14:55:36: Erase Timeout       1
14:55:36: Erase offset        1
14:55:36: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:36: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:36: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 840 ] 
14:55:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:36: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:37: Host Frequency set to 100000 KHz
14:55:37: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:37: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:37: ####CSD Registe 2.0 Values####
14:55:37: CSD_STRUCTURE                                 :0x1
14:55:37: Reserv1                                       :0x0
14:55:37: Time Access 1 TAAC                            :0xe
14:55:37: Time Access 2 NSAC*100                        :0x0
14:55:37: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:37: Card Command Classess CCC                     :0x5b5
14:55:37: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:37: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:37: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:37: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:37: DSR(driver stage register)  DSR_IMP           :0x0
14:55:37: Reserv2                                       :0x0
14:55:37: Device Size C_SIZE                            :0xedc8
14:55:37: Reserv3                                       :0x0
14:55:37: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:37: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:37: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:37: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:37: Reserv4                                       :0x0
14:55:37: Write Speed Factor R2W_FACTOR                 :0x2
14:55:37: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:37: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:37: FILE_FORMAT_GRP                               :0x0
14:55:37: COPY flag                                     :0x1
14:55:37: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:37: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:37: File_Format                                   :0x0
14:55:37: CRC                                           :0x0
14:55:37: ####CSD Registe Values####  

14:55:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EA80>, <py_sfcl.CommandDataDefinition object at 0x061004E0>) , Command count = 841 ] 
14:55:37: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111690>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 842 ] 
14:55:37: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:37: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, False) , Command count = 843 ] 
14:55:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, True) , Command count = 844 ] 
14:55:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 845 ] 
14:55:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 846 ] 
14:55:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1B70>, <py_sfcl.CommandDataDefinition object at 0x0610EBA0>) , Command count = 847 ] 
14:55:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06111030>) , Command count = 848 ] 
14:55:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:40: [ SetCardRCA(0x1, 0xD555) , Command count = 849 ] 
14:55:40: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:40: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:40: [ SetBusWidth(0x4) , Command count = 850 ] 
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 851 ] 
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:40: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 852 ] 
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:40: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 853 ] 
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:40: Host Frequency set to 25000 KHz

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 854 ] 
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:41: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:41: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:41: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A690>, 0x0, False) , Command count = 855 ] 
14:55:41: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:41: SendOCR: 1107263488
14:55:41: ExcpectOCR: 3254747136
14:55:41: SendFirstOCR: 1107263488
14:55:41: SendNextOCR: 1107263488
14:55:41: SingleCommand: 0
14:55:41: SingleCommandTestType: 1
14:55:41: Identification: 1
14:55:41: ProtocolMode: 1
14:55:41: VerifyType: 0
14:55:41: SendCMD0: 1
14:55:41: SendCMD8: 1
14:55:41: SendCMD58: 1
14:55:41: SetPower: 1
14:55:41: HcsXpcS18r000: 16744448
14:55:41: HcsXpcS18r001: 33521664
14:55:41: HcsXpcS18r010: 285179904
14:55:41: HcsXpcS18r011: 301957120
14:55:41: HcsXpcS18r100: 1090486272
14:55:41: HcsXpcS18r101: 1107263488
14:55:41: HcsXpcS18r110: 1358921728
14:55:41: HcsXpcS18r111: 1375698944
14:55:41: ReadyCcs18a000: 16744448
14:55:41: ReadyCcs18a001: 33521664
14:55:41: ReadyCcs18a010: 1090486272
14:55:41: ReadyCcs18a011: 1107263488
14:55:41: ReadyCcs18a100: 2164228096
14:55:41: ReadyCcs18a101: 2181005312
14:55:41: ReadyCcs18a110: 3237969920
14:55:41: ReadyCcs18a111: 3254747136
14:55:41: Card Capacity is : 32.000000 GB
14:55:41: SendFirstOCR : 1375698944
14:55:41: SendOCR : 1375698944
14:55:41: SendOCR : 1375698944
14:55:41: ExpectOCR : 3254747136
14:55:41: globalSpeedMode : SDR50
14:55:41: globalPowerUp : powerCycle
14:55:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, False) , Command count = 856 ] 
14:55:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, True) , Command count = 857 ] 
14:55:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:43: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 858 ] 
14:55:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 859 ] 
14:55:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 860 ] 
14:55:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111210>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 861 ] 
14:55:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:43: [ SetCardRCA(0x1, 0xD555) , Command count = 862 ] 
14:55:43: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:43: [ SelectCard(0x1, True) , Command count = 863 ] 
14:55:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:43: [ SetBusWidth(0x4) , Command count = 864 ] 
14:55:43: VS_Flag========================1
14:55:43: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 865 ] 
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:43: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 866 ] 
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:44: Host Frequency set to 25000 KHz

14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:44: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 867 ] 
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E930>, 0x0, False) , Command count = 868 ] 
14:55:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:44: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:44: ####CSD Registe 2.0 Values####
14:55:44: CSD_STRUCTURE                                 :0x1
14:55:44: Reserv1                                       :0x0
14:55:44: Time Access 1 TAAC                            :0xe
14:55:44: Time Access 2 NSAC*100                        :0x0
14:55:44: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:44: Card Command Classess CCC                     :0x5b5
14:55:44: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:44: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:44: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:44: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:44: DSR(driver stage register)  DSR_IMP           :0x0
14:55:44: Reserv2                                       :0x0
14:55:44: Device Size C_SIZE                            :0xedc8
14:55:44: Reserv3                                       :0x0
14:55:44: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:44: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:44: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:44: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:44: Reserv4                                       :0x0
14:55:44: Write Speed Factor R2W_FACTOR                 :0x2
14:55:44: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:44: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:44: FILE_FORMAT_GRP                               :0x0
14:55:44: COPY flag                                     :0x1
14:55:44: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:44: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:44: File_Format                                   :0x0
14:55:44: CRC                                           :0x0
14:55:44: ####CSD Registe Values####  

14:55:44: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:44: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111330>, <0x200/0x200, Spc, pat:0x0>) , Command count = 869 ] 
14:55:44: Protected Area Size 0x28000
14:55:44: Bus Width           2
14:55:44: Secure Mode         0
14:55:44: Speed  Class        4
14:55:44: Perf Move           0
14:55:44: Au Size             9
14:55:44: Erase Size          15
14:55:44: Erase Timeout       1
14:55:44: Erase offset        1
14:55:44: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:44: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:44: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 870 ] 
14:55:44: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:44: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:44: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 871 ] 
14:55:44: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:44: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:46: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:46: Host Frequency set to 25000 KHz
14:55:46: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:46: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:46: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E8D0>, 0x0, True) , Command count = 872 ] 
14:55:46: [GO18_globalSetVolt]### Host voltage value is set.
14:55:46: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EC90>, 0x0, False) , Command count = 873 ] 
14:55:47: [GO18_globalSetVolt]### Host voltage value is set.
14:55:47: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 874 ] 
14:55:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 875 ] 
14:55:47: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:47: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:47: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:47: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:47: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 876 ] 
14:55:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:47: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06111AB0>) , Command count = 877 ] 
14:55:47: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x06111B70>) , Command count = 878 ] 
14:55:47: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:47: [ SetCardRCA(0x1, 0xD555) , Command count = 879 ] 
14:55:47: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:47: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:47: Host Frequency set to 25000 KHz
14:55:47: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:47: ####CSD Registe 2.0 Values####
14:55:47: CSD_STRUCTURE                                 :0x1
14:55:47: Reserv1                                       :0x0
14:55:47: Time Access 1 TAAC                            :0xe
14:55:47: Time Access 2 NSAC*100                        :0x0
14:55:47: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:47: Card Command Classess CCC                     :0x5b5
14:55:47: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:47: DSR(driver stage register)  DSR_IMP           :0x0
14:55:47: Reserv2                                       :0x0
14:55:47: Device Size C_SIZE                            :0xedc8
14:55:47: Reserv3                                       :0x0
14:55:47: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:47: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:47: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:47: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:47: Reserv4                                       :0x0
14:55:47: Write Speed Factor R2W_FACTOR                 :0x2
14:55:47: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:47: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:47: FILE_FORMAT_GRP                               :0x0
14:55:47: COPY flag                                     :0x1
14:55:47: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:47: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:47: File_Format                                   :0x0
14:55:47: CRC                                           :0x0
14:55:47: ####CSD Registe Values####  

14:55:47: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:47: [GetSCRRegisterEntry] Passed
14:55:47: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:47: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:47: Data_Status_After Erases          : 0
14:55:47: CPRM Security Support             : No Security
14:55:47: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:47: Spec. Version                     : Version 3.0X
14:55:47: Extended Security Support         : Extended_Security_Not_Supported
14:55:47: Command Support                   : COMMAND_SUPPORT
14:55:47: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EEA0>, <py_sfcl.CommandDataDefinition object at 0x06111660>) , Command count = 880 ] 
14:55:47: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111DB0>, <py_sfcl.CommandDataDefinition object at 0x06111A50>) , Command count = 881 ] 
14:55:47: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:47: [ SetBusWidth(0x4) , Command count = 882 ] 
14:55:47: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:47: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061118A0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 883 ] 
14:55:47: Protected Area Size 0x28000
14:55:47: Bus Width           2
14:55:47: Secure Mode         0
14:55:47: Speed  Class        4
14:55:47: Perf Move           0
14:55:47: Au Size             9
14:55:47: Erase Size          15
14:55:47: Erase Timeout       1
14:55:47: Erase offset        1
14:55:47: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:47: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:47: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 884 ] 
14:55:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:47: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:47: Host Frequency set to 100000 KHz
14:55:47: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:47: ####CSD Registe 2.0 Values####
14:55:47: CSD_STRUCTURE                                 :0x1
14:55:47: Reserv1                                       :0x0
14:55:47: Time Access 1 TAAC                            :0xe
14:55:47: Time Access 2 NSAC*100                        :0x0
14:55:47: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:47: Card Command Classess CCC                     :0x5b5
14:55:47: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:47: DSR(driver stage register)  DSR_IMP           :0x0
14:55:47: Reserv2                                       :0x0
14:55:47: Device Size C_SIZE                            :0xedc8
14:55:47: Reserv3                                       :0x0
14:55:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:48: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:48: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:48: Reserv4                                       :0x0
14:55:48: Write Speed Factor R2W_FACTOR                 :0x2
14:55:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:48: FILE_FORMAT_GRP                               :0x0
14:55:48: COPY flag                                     :0x1
14:55:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:48: File_Format                                   :0x0
14:55:48: CRC                                           :0x0
14:55:48: ####CSD Registe Values####  

14:55:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F30>, <py_sfcl.CommandDataDefinition object at 0x06111E40>) , Command count = 885 ] 
14:55:48: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x0610E600>) , Command count = 886 ] 
14:55:48: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:48: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061117B0>, 0x0, False) , Command count = 887 ] 
14:55:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061117B0>, 0x0, True) , Command count = 888 ] 
14:55:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:50: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 889 ] 
14:55:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 890 ] 
14:55:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119030>, <py_sfcl.CommandDataDefinition object at 0x06119060>) , Command count = 891 ] 
14:55:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x061191E0>) , Command count = 892 ] 
14:55:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:50: [ SetCardRCA(0x1, 0xD555) , Command count = 893 ] 
14:55:50: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:50: [ SetBusWidth(0x4) , Command count = 894 ] 
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 895 ] 
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:50: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 896 ] 
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:50: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 897 ] 
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:50: Host Frequency set to 25000 KHz

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 898 ] 
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193F0>, 0x0, False) , Command count = 899 ] 
14:55:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:50: SendOCR: 1107263488
14:55:50: ExcpectOCR: 3254747136
14:55:50: SendFirstOCR: 1107263488
14:55:50: SendNextOCR: 1107263488
14:55:50: SingleCommand: 0
14:55:50: SingleCommandTestType: 1
14:55:50: Identification: 1
14:55:50: ProtocolMode: 1
14:55:50: VerifyType: 0
14:55:50: SendCMD0: 1
14:55:50: SendCMD8: 1
14:55:50: SendCMD58: 1
14:55:50: SetPower: 1
14:55:50: HcsXpcS18r000: 16744448
14:55:50: HcsXpcS18r001: 33521664
14:55:50: HcsXpcS18r010: 285179904
14:55:50: HcsXpcS18r011: 301957120
14:55:50: HcsXpcS18r100: 1090486272
14:55:50: HcsXpcS18r101: 1107263488
14:55:50: HcsXpcS18r110: 1358921728
14:55:50: HcsXpcS18r111: 1375698944
14:55:50: ReadyCcs18a000: 16744448
14:55:50: ReadyCcs18a001: 33521664
14:55:50: ReadyCcs18a010: 1090486272
14:55:50: ReadyCcs18a011: 1107263488
14:55:50: ReadyCcs18a100: 2164228096
14:55:50: ReadyCcs18a101: 2181005312
14:55:50: ReadyCcs18a110: 3237969920
14:55:50: ReadyCcs18a111: 3254747136
14:55:50: Card Capacity is : 32.000000 GB
14:55:50: SendFirstOCR : 1375698944
14:55:50: SendOCR : 1375698944
14:55:50: SendOCR : 1375698944
14:55:50: ExpectOCR : 3254747136
14:55:50: globalSpeedMode : SDR50
14:55:50: globalPowerUp : powerCycle
14:55:52: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:52: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119240>, 0x0, False) , Command count = 900 ] 
14:55:52: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:52: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119240>, 0x0, True) , Command count = 901 ] 
14:55:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:53: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:55:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 902 ] 
14:55:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 903 ] 
14:55:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x06111F60>) , Command count = 904 ] 
14:55:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061196C0>, <py_sfcl.CommandDataDefinition object at 0x061117E0>) , Command count = 905 ] 
14:55:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:53: [ SetCardRCA(0x1, 0xD555) , Command count = 906 ] 
14:55:53: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:53: [ SelectCard(0x1, True) , Command count = 907 ] 
14:55:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:53: [ SetBusWidth(0x4) , Command count = 908 ] 
14:55:53: VS_Flag========================1
14:55:53: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:53: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 909 ] 
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:53: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 910 ] 
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:53: Host Frequency set to 25000 KHz

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:53: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 911 ] 
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:53: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x061199C0>, 0x0, False) , Command count = 912 ] 
14:55:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:53: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:53: ####CSD Registe 2.0 Values####
14:55:53: CSD_STRUCTURE                                 :0x1
14:55:53: Reserv1                                       :0x0
14:55:53: Time Access 1 TAAC                            :0xe
14:55:53: Time Access 2 NSAC*100                        :0x0
14:55:53: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:53: Card Command Classess CCC                     :0x5b5
14:55:53: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:53: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:53: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:53: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:53: DSR(driver stage register)  DSR_IMP           :0x0
14:55:53: Reserv2                                       :0x0
14:55:53: Device Size C_SIZE                            :0xedc8
14:55:53: Reserv3                                       :0x0
14:55:53: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:53: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:53: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:53: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:53: Reserv4                                       :0x0
14:55:53: Write Speed Factor R2W_FACTOR                 :0x2
14:55:53: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:53: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:53: FILE_FORMAT_GRP                               :0x0
14:55:53: COPY flag                                     :0x1
14:55:53: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:53: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:53: File_Format                                   :0x0
14:55:53: CRC                                           :0x0
14:55:53: ####CSD Registe Values####  

14:55:53: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:53: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119090>, <0x200/0x200, Spc, pat:0x0>) , Command count = 913 ] 
14:55:53: Protected Area Size 0x28000
14:55:53: Bus Width           2
14:55:53: Secure Mode         0
14:55:53: Speed  Class        4
14:55:53: Perf Move           0
14:55:53: Au Size             9
14:55:53: Erase Size          15
14:55:53: Erase Timeout       1
14:55:53: Erase offset        1
14:55:53: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:53: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 914 ] 
14:55:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:53: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:55:54: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 915 ] 
14:55:54: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:55:54: [GO4_globalInitCard]### Switch to Specify Card Type
14:55:56: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:56: Host Frequency set to 25000 KHz
14:55:56: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:56: [GO18_globalSetVolt]### Set Host Voltage value.
14:55:56: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:55:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195D0>, 0x0, True) , Command count = 916 ] 
14:55:56: [GO18_globalSetVolt]### Host voltage value is set.
14:55:56: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:55:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119B40>, 0x0, False) , Command count = 917 ] 
14:55:56: [GO18_globalSetVolt]### Host voltage value is set.
14:55:56: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 918 ] 
14:55:56: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 919 ] 
14:55:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:56: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 920 ] 
14:55:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B70>, <py_sfcl.CommandDataDefinition object at 0x06119C30>) , Command count = 921 ] 
14:55:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E720>, <py_sfcl.CommandDataDefinition object at 0x06119750>) , Command count = 922 ] 
14:55:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:56: [ SetCardRCA(0x1, 0xD555) , Command count = 923 ] 
14:55:56: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:56: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:55:56: Host Frequency set to 25000 KHz
14:55:56: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:55:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:56: ####CSD Registe 2.0 Values####
14:55:56: CSD_STRUCTURE                                 :0x1
14:55:56: Reserv1                                       :0x0
14:55:56: Time Access 1 TAAC                            :0xe
14:55:56: Time Access 2 NSAC*100                        :0x0
14:55:56: Data Transfer Rate TRAN_SPEED                 :0x32
14:55:56: Card Command Classess CCC                     :0x5b5
14:55:56: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:56: DSR(driver stage register)  DSR_IMP           :0x0
14:55:56: Reserv2                                       :0x0
14:55:56: Device Size C_SIZE                            :0xedc8
14:55:56: Reserv3                                       :0x0
14:55:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:56: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:56: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:56: Reserv4                                       :0x0
14:55:56: Write Speed Factor R2W_FACTOR                 :0x2
14:55:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:56: FILE_FORMAT_GRP                               :0x0
14:55:56: COPY flag                                     :0x1
14:55:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:56: File_Format                                   :0x0
14:55:56: CRC                                           :0x0
14:55:56: ####CSD Registe Values####  

14:55:56: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:55:56: [GetSCRRegisterEntry] Passed
14:55:56: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:55:56: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:55:56: Data_Status_After Erases          : 0
14:55:56: CPRM Security Support             : No Security
14:55:56: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:55:56: Spec. Version                     : Version 3.0X
14:55:56: Extended Security Support         : Extended_Security_Not_Supported
14:55:56: Command Support                   : COMMAND_SUPPORT
14:55:56: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:55:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119420>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 924 ] 
14:55:56: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:55:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DB0>, <py_sfcl.CommandDataDefinition object at 0x06119810>) , Command count = 925 ] 
14:55:56: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:55:56: [ SetBusWidth(0x4) , Command count = 926 ] 
14:55:56: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:55:56: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061194B0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 927 ] 
14:55:56: Protected Area Size 0x28000
14:55:56: Bus Width           2
14:55:56: Secure Mode         0
14:55:56: Speed  Class        4
14:55:56: Perf Move           0
14:55:56: Au Size             9
14:55:56: Erase Size          15
14:55:56: Erase Timeout       1
14:55:56: Erase offset        1
14:55:56: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:55:56: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:55:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:56: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 928 ] 
14:55:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:55:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:56: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:55:56: Host Frequency set to 100000 KHz
14:55:56: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:55:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:55:56: ####CSD Registe 2.0 Values####
14:55:56: CSD_STRUCTURE                                 :0x1
14:55:56: Reserv1                                       :0x0
14:55:56: Time Access 1 TAAC                            :0xe
14:55:56: Time Access 2 NSAC*100                        :0x0
14:55:56: Data Transfer Rate TRAN_SPEED                 :0xb
14:55:56: Card Command Classess CCC                     :0x5b5
14:55:56: Max Read Data Block Length  READ_BL_LEN       :0x9
14:55:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:55:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:55:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:55:56: DSR(driver stage register)  DSR_IMP           :0x0
14:55:56: Reserv2                                       :0x0
14:55:56: Device Size C_SIZE                            :0xedc8
14:55:56: Reserv3                                       :0x0
14:55:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:55:56: Erase Sector Size SECTOR_SIZE                 :0x7f
14:55:56: Write Protect Group Size WP_GRP_SIZE          :0x0
14:55:57: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:55:57: Reserv4                                       :0x0
14:55:57: Write Speed Factor R2W_FACTOR                 :0x2
14:55:57: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:55:57: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:55:57: FILE_FORMAT_GRP                               :0x0
14:55:57: COPY flag                                     :0x1
14:55:57: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:55:57: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:55:57: File_Format                                   :0x0
14:55:57: CRC                                           :0x0
14:55:57: ####CSD Registe Values####  

14:55:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x06119E40>) , Command count = 929 ] 
14:55:57: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:55:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195A0>, <py_sfcl.CommandDataDefinition object at 0x06119960>) , Command count = 930 ] 
14:55:57: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:55:57: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:55:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:55:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119A20>, 0x0, False) , Command count = 931 ] 
14:55:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:55:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119A20>, 0x0, True) , Command count = 932 ] 
14:55:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:55:59: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:55:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 933 ] 
14:55:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:55:59: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:55:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:55:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:55:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:55:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:55:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 934 ] 
14:55:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:55:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:55:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E030>, <py_sfcl.CommandDataDefinition object at 0x06119EA0>) , Command count = 935 ] 
14:55:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:55:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E180>, <py_sfcl.CommandDataDefinition object at 0x0611E150>) , Command count = 936 ] 
14:55:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:55:59: [ SetCardRCA(0x1, 0xD555) , Command count = 937 ] 
14:55:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:55:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:55:59: [ SetBusWidth(0x4) , Command count = 938 ] 
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:59: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 939 ] 
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:59: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:59: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 940 ] 
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:55:59: [32799, 49153, 32783, 32783, 32769, 32769]
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:55:59: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 941 ] 
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:55:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:00: Host Frequency set to 25000 KHz

14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:00: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:00: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 942 ] 
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119930>, 0x0, False) , Command count = 943 ] 
14:56:01: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:01: SendOCR: 1107263488
14:56:01: ExcpectOCR: 3254747136
14:56:01: SendFirstOCR: 1107263488
14:56:01: SendNextOCR: 1107263488
14:56:01: SingleCommand: 0
14:56:01: SingleCommandTestType: 1
14:56:01: Identification: 1
14:56:01: ProtocolMode: 1
14:56:01: VerifyType: 0
14:56:01: SendCMD0: 1
14:56:01: SendCMD8: 1
14:56:01: SendCMD58: 1
14:56:01: SetPower: 1
14:56:01: HcsXpcS18r000: 16744448
14:56:01: HcsXpcS18r001: 33521664
14:56:01: HcsXpcS18r010: 285179904
14:56:01: HcsXpcS18r011: 301957120
14:56:01: HcsXpcS18r100: 1090486272
14:56:01: HcsXpcS18r101: 1107263488
14:56:01: HcsXpcS18r110: 1358921728
14:56:01: HcsXpcS18r111: 1375698944
14:56:01: ReadyCcs18a000: 16744448
14:56:01: ReadyCcs18a001: 33521664
14:56:01: ReadyCcs18a010: 1090486272
14:56:01: ReadyCcs18a011: 1107263488
14:56:01: ReadyCcs18a100: 2164228096
14:56:01: ReadyCcs18a101: 2181005312
14:56:01: ReadyCcs18a110: 3237969920
14:56:01: ReadyCcs18a111: 3254747136
14:56:01: Card Capacity is : 32.000000 GB
14:56:01: SendFirstOCR : 1375698944
14:56:01: SendOCR : 1375698944
14:56:01: SendOCR : 1375698944
14:56:01: ExpectOCR : 3254747136
14:56:01: globalSpeedMode : SDR50
14:56:01: globalPowerUp : powerCycle
14:56:03: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:03: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111DE0>, 0x0, False) , Command count = 944 ] 
14:56:03: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:03: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:03: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111DE0>, 0x0, True) , Command count = 945 ] 
14:56:03: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:03: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:56:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 946 ] 
14:56:03: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:03: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:03: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:03: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:03: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 947 ] 
14:56:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:03: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119AE0>, <py_sfcl.CommandDataDefinition object at 0x06119E10>) , Command count = 948 ] 
14:56:03: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E660>, <py_sfcl.CommandDataDefinition object at 0x061271E0>) , Command count = 949 ] 
14:56:03: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:03: [ SetCardRCA(0x1, 0xD555) , Command count = 950 ] 
14:56:03: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:03: [ SelectCard(0x1, True) , Command count = 951 ] 
14:56:03: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:03: [ SetBusWidth(0x4) , Command count = 952 ] 
14:56:03: VS_Flag========================1
14:56:03: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:03: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 953 ] 
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:03: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 954 ] 
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:04: Host Frequency set to 25000 KHz

14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:04: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 955 ] 
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E960>, 0x0, False) , Command count = 956 ] 
14:56:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:04: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:04: ####CSD Registe 2.0 Values####
14:56:04: CSD_STRUCTURE                                 :0x1
14:56:04: Reserv1                                       :0x0
14:56:04: Time Access 1 TAAC                            :0xe
14:56:04: Time Access 2 NSAC*100                        :0x0
14:56:04: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:04: Card Command Classess CCC                     :0x5b5
14:56:04: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:04: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:04: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:04: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:04: DSR(driver stage register)  DSR_IMP           :0x0
14:56:04: Reserv2                                       :0x0
14:56:04: Device Size C_SIZE                            :0xedc8
14:56:04: Reserv3                                       :0x0
14:56:04: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:04: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:04: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:04: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:04: Reserv4                                       :0x0
14:56:04: Write Speed Factor R2W_FACTOR                 :0x2
14:56:04: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:04: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:04: FILE_FORMAT_GRP                               :0x0
14:56:04: COPY flag                                     :0x1
14:56:04: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:04: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:04: File_Format                                   :0x0
14:56:04: CRC                                           :0x0
14:56:04: ####CSD Registe Values####  

14:56:04: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:04: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E090>, <0x200/0x200, Spc, pat:0x0>) , Command count = 957 ] 
14:56:04: Protected Area Size 0x28000
14:56:04: Bus Width           2
14:56:04: Secure Mode         0
14:56:05: Speed  Class        4
14:56:05: Perf Move           0
14:56:05: Au Size             9
14:56:05: Erase Size          15
14:56:05: Erase Timeout       1
14:56:05: Erase offset        1
14:56:05: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:05: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 958 ] 
14:56:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:05: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 959 ] 
14:56:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:05: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:07: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:07: Host Frequency set to 25000 KHz
14:56:07: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:07: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:07: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E990>, 0x0, True) , Command count = 960 ] 
14:56:07: [GO18_globalSetVolt]### Host voltage value is set.
14:56:07: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EAE0>, 0x0, False) , Command count = 961 ] 
14:56:07: [GO18_globalSetVolt]### Host voltage value is set.
14:56:07: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 962 ] 
14:56:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 963 ] 
14:56:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 964 ] 
14:56:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA80>, <py_sfcl.CommandDataDefinition object at 0x0611E4B0>) , Command count = 965 ] 
14:56:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E6F0>, <py_sfcl.CommandDataDefinition object at 0x0611EC30>) , Command count = 966 ] 
14:56:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:07: [ SetCardRCA(0x1, 0xD555) , Command count = 967 ] 
14:56:07: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:07: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:07: Host Frequency set to 25000 KHz
14:56:07: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:07: ####CSD Registe 2.0 Values####
14:56:07: CSD_STRUCTURE                                 :0x1
14:56:07: Reserv1                                       :0x0
14:56:07: Time Access 1 TAAC                            :0xe
14:56:07: Time Access 2 NSAC*100                        :0x0
14:56:07: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:07: Card Command Classess CCC                     :0x5b5
14:56:07: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:07: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:07: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:07: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:07: DSR(driver stage register)  DSR_IMP           :0x0
14:56:07: Reserv2                                       :0x0
14:56:07: Device Size C_SIZE                            :0xedc8
14:56:07: Reserv3                                       :0x0
14:56:07: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:07: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:07: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:07: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:07: Reserv4                                       :0x0
14:56:07: Write Speed Factor R2W_FACTOR                 :0x2
14:56:07: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:07: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:07: FILE_FORMAT_GRP                               :0x0
14:56:07: COPY flag                                     :0x1
14:56:07: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:07: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:07: File_Format                                   :0x0
14:56:07: CRC                                           :0x0
14:56:07: ####CSD Registe Values####  

14:56:07: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:07: [GetSCRRegisterEntry] Passed
14:56:07: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:07: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:07: Data_Status_After Erases          : 0
14:56:07: CPRM Security Support             : No Security
14:56:07: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:07: Spec. Version                     : Version 3.0X
14:56:07: Extended Security Support         : Extended_Security_Not_Supported
14:56:07: Command Support                   : COMMAND_SUPPORT
14:56:07: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x0611E870>) , Command count = 968 ] 
14:56:07: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED50>, <py_sfcl.CommandDataDefinition object at 0x0611E570>) , Command count = 969 ] 
14:56:07: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:07: [ SetBusWidth(0x4) , Command count = 970 ] 
14:56:07: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:07: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E480>, <0x200/0x200, Spc, pat:0x0>) , Command count = 971 ] 
14:56:07: Protected Area Size 0x28000
14:56:07: Bus Width           2
14:56:07: Secure Mode         0
14:56:07: Speed  Class        4
14:56:07: Perf Move           0
14:56:07: Au Size             9
14:56:07: Erase Size          15
14:56:07: Erase Timeout       1
14:56:07: Erase offset        1
14:56:07: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:07: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:07: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 972 ] 
14:56:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:07: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:07: Host Frequency set to 100000 KHz
14:56:07: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:07: ####CSD Registe 2.0 Values####
14:56:07: CSD_STRUCTURE                                 :0x1
14:56:08: Reserv1                                       :0x0
14:56:08: Time Access 1 TAAC                            :0xe
14:56:08: Time Access 2 NSAC*100                        :0x0
14:56:08: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:08: Card Command Classess CCC                     :0x5b5
14:56:08: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:08: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:08: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:08: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:08: DSR(driver stage register)  DSR_IMP           :0x0
14:56:08: Reserv2                                       :0x0
14:56:08: Device Size C_SIZE                            :0xedc8
14:56:08: Reserv3                                       :0x0
14:56:08: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:08: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:08: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:08: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:08: Reserv4                                       :0x0
14:56:08: Write Speed Factor R2W_FACTOR                 :0x2
14:56:08: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:08: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:08: FILE_FORMAT_GRP                               :0x0
14:56:08: COPY flag                                     :0x1
14:56:08: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:08: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:08: File_Format                                   :0x0
14:56:08: CRC                                           :0x0
14:56:08: ####CSD Registe Values####  

14:56:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EED0>, <py_sfcl.CommandDataDefinition object at 0x0611EDE0>) , Command count = 973 ] 
14:56:08: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E540>, <py_sfcl.CommandDataDefinition object at 0x0611E900>) , Command count = 974 ] 
14:56:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:08: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E7B0>, 0x0, False) , Command count = 975 ] 
14:56:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E7B0>, 0x0, True) , Command count = 976 ] 
14:56:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 977 ] 
14:56:11: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:11: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:56:11: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:11: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:11: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:11: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 978 ] 
14:56:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:11: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0611ECC0>) , Command count = 979 ] 
14:56:11: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123150>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 980 ] 
14:56:11: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:11: [ SetCardRCA(0x1, 0xD555) , Command count = 981 ] 
14:56:11: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:11: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:11: [ SetBusWidth(0x4) , Command count = 982 ] 
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:11: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 983 ] 
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:11: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 984 ] 
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:11: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 985 ] 
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:11: Host Frequency set to 25000 KHz

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:11: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 986 ] 
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:11: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:11: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8D0>, 0x0, False) , Command count = 987 ] 
14:56:11: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:11: SendOCR: 1107263488
14:56:11: ExcpectOCR: 3254747136
14:56:11: SendFirstOCR: 1107263488
14:56:11: SendNextOCR: 1107263488
14:56:11: SingleCommand: 0
14:56:11: SingleCommandTestType: 1
14:56:11: Identification: 1
14:56:11: ProtocolMode: 1
14:56:11: VerifyType: 0
14:56:11: SendCMD0: 1
14:56:11: SendCMD8: 1
14:56:11: SendCMD58: 1
14:56:11: SetPower: 1
14:56:11: HcsXpcS18r000: 16744448
14:56:11: HcsXpcS18r001: 33521664
14:56:11: HcsXpcS18r010: 285179904
14:56:11: HcsXpcS18r011: 301957120
14:56:11: HcsXpcS18r100: 1090486272
14:56:11: HcsXpcS18r101: 1107263488
14:56:11: HcsXpcS18r110: 1358921728
14:56:11: HcsXpcS18r111: 1375698944
14:56:11: ReadyCcs18a000: 16744448
14:56:11: ReadyCcs18a001: 33521664
14:56:11: ReadyCcs18a010: 1090486272
14:56:11: ReadyCcs18a011: 1107263488
14:56:11: ReadyCcs18a100: 2164228096
14:56:11: ReadyCcs18a101: 2181005312
14:56:11: ReadyCcs18a110: 3237969920
14:56:11: ReadyCcs18a111: 3254747136
14:56:11: Card Capacity is : 32.000000 GB
14:56:11: SendFirstOCR : 1375698944
14:56:11: SendOCR : 1375698944
14:56:11: SendOCR : 1375698944
14:56:11: ExpectOCR : 3254747136
14:56:11: globalSpeedMode : SDR50
14:56:11: globalPowerUp : powerCycle
14:56:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ED20>, 0x0, False) , Command count = 988 ] 
14:56:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ED20>, 0x0, True) , Command count = 989 ] 
14:56:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:13: [DVTCommonLib]### Reset the card with OCR value : 0x51FF8000
14:56:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x51FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 990 ] 
14:56:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:13: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 991 ] 
14:56:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:13: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EA80>, <py_sfcl.CommandDataDefinition object at 0x0611EDB0>) , Command count = 992 ] 
14:56:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123600>, <py_sfcl.CommandDataDefinition object at 0x06127420>) , Command count = 993 ] 
14:56:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:13: [ SetCardRCA(0x1, 0xD555) , Command count = 994 ] 
14:56:13: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:13: [ SelectCard(0x1, True) , Command count = 995 ] 
14:56:13: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:13: [ SetBusWidth(0x4) , Command count = 996 ] 
14:56:13: VS_Flag========================1
14:56:13: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:13: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 997 ] 
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:13: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 998 ] 
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:13: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:14: Host Frequency set to 25000 KHz

14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:14: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 999 ] 
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] :[MATCH TO VALUE option] Power Consumption value matched to value(in mA) passed:100 and response value(in mA): 100
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:14: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:14: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123900>, 0x0, False) , Command count = 1000 ] 
14:56:14: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:14: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:14: ####CSD Registe 2.0 Values####
14:56:14: CSD_STRUCTURE                                 :0x1
14:56:14: Reserv1                                       :0x0
14:56:14: Time Access 1 TAAC                            :0xe
14:56:14: Time Access 2 NSAC*100                        :0x0
14:56:14: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:14: Card Command Classess CCC                     :0x5b5
14:56:14: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:14: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:14: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:14: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:14: DSR(driver stage register)  DSR_IMP           :0x0
14:56:14: Reserv2                                       :0x0
14:56:14: Device Size C_SIZE                            :0xedc8
14:56:14: Reserv3                                       :0x0
14:56:14: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:14: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:14: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:14: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:14: Reserv4                                       :0x0
14:56:14: Write Speed Factor R2W_FACTOR                 :0x2
14:56:14: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:14: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:14: FILE_FORMAT_GRP                               :0x0
14:56:14: COPY flag                                     :0x1
14:56:14: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:14: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:14: File_Format                                   :0x0
14:56:14: CRC                                           :0x0
14:56:14: ####CSD Registe Values####  

14:56:14: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:14: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123060>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1001 ] 
14:56:14: Protected Area Size 0x28000
14:56:14: Bus Width           2
14:56:14: Secure Mode         0
14:56:15: Speed  Class        4
14:56:15: Perf Move           0
14:56:15: Au Size             9
14:56:15: Erase Size          15
14:56:15: Erase Timeout       1
14:56:15: Erase offset        1
14:56:15: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:15: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:15: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1002 ] 
14:56:15: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:15: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:15: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1003 ] 
14:56:15: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:15: ########################################
14:56:15: Finished Running script SD3UHS102_DVT_SD3_00_3_4_1_1_1_UHS_RESET_MAIN_FLOW 
14:56:15: ########################################
14:56:15: ########################################
14:56:15: Stated Running script SD3UHS103_DVT_SD3_00_3_4_1_1_2_NON_UHS_HOST 
14:56:15: ########################################
14:56:15: ###### Running SD3UHS103_DVT_SD3_00_3_4_1_1_2_NON_UHS_HOST
14:56:15: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:17: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:17: Host Frequency set to 25000 KHz
14:56:17: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:17: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:17: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127AE0>, 0x0, True) , Command count = 1004 ] 
14:56:17: [GO18_globalSetVolt]### Host voltage value is set.
14:56:17: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127BD0>, 0x0, False) , Command count = 1005 ] 
14:56:17: [GO18_globalSetVolt]### Host voltage value is set.
14:56:17: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1006 ] 
14:56:17: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1007 ] 
14:56:17: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:17: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:17: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:17: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:17: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:17: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1008 ] 
14:56:17: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:17: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05172060>, <py_sfcl.CommandDataDefinition object at 0x061234E0>) , Command count = 1009 ] 
14:56:17: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123690>, <py_sfcl.CommandDataDefinition object at 0x06123BA0>) , Command count = 1010 ] 
14:56:17: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:17: [ SetCardRCA(0x1, 0xD555) , Command count = 1011 ] 
14:56:17: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:17: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:17: Host Frequency set to 25000 KHz
14:56:17: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:17: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:17: ####CSD Registe 2.0 Values####
14:56:17: CSD_STRUCTURE                                 :0x1
14:56:17: Reserv1                                       :0x0
14:56:17: Time Access 1 TAAC                            :0xe
14:56:17: Time Access 2 NSAC*100                        :0x0
14:56:17: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:17: Card Command Classess CCC                     :0x5b5
14:56:17: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:17: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:17: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:17: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:17: DSR(driver stage register)  DSR_IMP           :0x0
14:56:17: Reserv2                                       :0x0
14:56:17: Device Size C_SIZE                            :0xedc8
14:56:17: Reserv3                                       :0x0
14:56:17: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:17: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:17: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:17: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:17: Reserv4                                       :0x0
14:56:17: Write Speed Factor R2W_FACTOR                 :0x2
14:56:17: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:17: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:17: FILE_FORMAT_GRP                               :0x0
14:56:17: COPY flag                                     :0x1
14:56:17: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:17: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:17: File_Format                                   :0x0
14:56:17: CRC                                           :0x0
14:56:17: ####CSD Registe Values####  

14:56:17: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:17: [GetSCRRegisterEntry] Passed
14:56:17: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:17: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:17: Data_Status_After Erases          : 0
14:56:17: CPRM Security Support             : No Security
14:56:17: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:17: Spec. Version                     : Version 3.0X
14:56:17: Extended Security Support         : Extended_Security_Not_Supported
14:56:17: Command Support                   : COMMAND_SUPPORT
14:56:17: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123780>, <py_sfcl.CommandDataDefinition object at 0x061237E0>) , Command count = 1012 ] 
14:56:17: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:17: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123BD0>, <py_sfcl.CommandDataDefinition object at 0x06127900>) , Command count = 1013 ] 
14:56:17: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:17: [ SetBusWidth(0x4) , Command count = 1014 ] 
14:56:17: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:17: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127F30>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1015 ] 
14:56:17: Protected Area Size 0x28000
14:56:17: Bus Width           2
14:56:17: Secure Mode         0
14:56:17: Speed  Class        4
14:56:17: Perf Move           0
14:56:17: Au Size             9
14:56:17: Erase Size          15
14:56:17: Erase Timeout       1
14:56:17: Erase offset        1
14:56:17: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:17: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:17: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:17: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1016 ] 
14:56:17: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:17: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:17: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:17: Host Frequency set to 100000 KHz
14:56:17: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:17: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:17: ####CSD Registe 2.0 Values####
14:56:17: CSD_STRUCTURE                                 :0x1
14:56:18: Reserv1                                       :0x0
14:56:18: Time Access 1 TAAC                            :0xe
14:56:18: Time Access 2 NSAC*100                        :0x0
14:56:18: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:18: Card Command Classess CCC                     :0x5b5
14:56:18: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:18: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:18: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:18: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:18: DSR(driver stage register)  DSR_IMP           :0x0
14:56:18: Reserv2                                       :0x0
14:56:18: Device Size C_SIZE                            :0xedc8
14:56:18: Reserv3                                       :0x0
14:56:18: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:18: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:18: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:18: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:18: Reserv4                                       :0x0
14:56:18: Write Speed Factor R2W_FACTOR                 :0x2
14:56:18: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:18: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:18: FILE_FORMAT_GRP                               :0x0
14:56:18: COPY flag                                     :0x1
14:56:18: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:18: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:18: File_Format                                   :0x0
14:56:18: CRC                                           :0x0
14:56:18: ####CSD Registe Values####  

14:56:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C450>, <py_sfcl.CommandDataDefinition object at 0x0527C210>) , Command count = 1017 ] 
14:56:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x061238A0>) , Command count = 1018 ] 
14:56:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:18: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:18: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:20: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:20: Host Frequency set to 25000 KHz
14:56:20: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:20: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:20: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x061235A0>, 0x0, True) , Command count = 1019 ] 
14:56:20: [GO18_globalSetVolt]### Host voltage value is set.
14:56:20: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EBA0>, 0x0, False) , Command count = 1020 ] 
14:56:20: [GO18_globalSetVolt]### Host voltage value is set.
14:56:20: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1021 ] 
14:56:20: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1022 ] 
14:56:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1023 ] 
14:56:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x06123F30>) , Command count = 1024 ] 
14:56:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EB40>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 1025 ] 
14:56:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:21: [ SetCardRCA(0x1, 0xD555) , Command count = 1026 ] 
14:56:21: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:21: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:21: Host Frequency set to 25000 KHz
14:56:21: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:21: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:21: ####CSD Registe 2.0 Values####
14:56:21: CSD_STRUCTURE                                 :0x1
14:56:21: Reserv1                                       :0x0
14:56:21: Time Access 1 TAAC                            :0xe
14:56:21: Time Access 2 NSAC*100                        :0x0
14:56:21: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:21: Card Command Classess CCC                     :0x5b5
14:56:21: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:21: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:21: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:21: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:21: DSR(driver stage register)  DSR_IMP           :0x0
14:56:21: Reserv2                                       :0x0
14:56:21: Device Size C_SIZE                            :0xedc8
14:56:21: Reserv3                                       :0x0
14:56:21: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:21: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:21: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:21: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:21: Reserv4                                       :0x0
14:56:21: Write Speed Factor R2W_FACTOR                 :0x2
14:56:21: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:21: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:21: FILE_FORMAT_GRP                               :0x0
14:56:21: COPY flag                                     :0x1
14:56:21: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:21: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:21: File_Format                                   :0x0
14:56:21: CRC                                           :0x0
14:56:21: ####CSD Registe Values####  

14:56:21: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:21: [GetSCRRegisterEntry] Passed
14:56:21: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:21: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:21: Data_Status_After Erases          : 0
14:56:21: CPRM Security Support             : No Security
14:56:21: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:21: Spec. Version                     : Version 3.0X
14:56:21: Extended Security Support         : Extended_Security_Not_Supported
14:56:21: Command Support                   : COMMAND_SUPPORT
14:56:21: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x06127E10>) , Command count = 1027 ] 
14:56:21: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061239C0>, <py_sfcl.CommandDataDefinition object at 0x06127CF0>) , Command count = 1028 ] 
14:56:21: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:21: [ SetBusWidth(0x4) , Command count = 1029 ] 
14:56:21: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:21: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127AB0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1030 ] 
14:56:21: Protected Area Size 0x28000
14:56:21: Bus Width           2
14:56:21: Secure Mode         0
14:56:21: Speed  Class        4
14:56:21: Perf Move           0
14:56:21: Au Size             9
14:56:21: Erase Size          15
14:56:21: Erase Timeout       1
14:56:21: Erase offset        1
14:56:21: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:21: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:21: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1031 ] 
14:56:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:21: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:21: Host Frequency set to 100000 KHz
14:56:21: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:21: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:21: ####CSD Registe 2.0 Values####
14:56:21: CSD_STRUCTURE                                 :0x1
14:56:21: Reserv1                                       :0x0
14:56:21: Time Access 1 TAAC                            :0xe
14:56:21: Time Access 2 NSAC*100                        :0x0
14:56:21: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:21: Card Command Classess CCC                     :0x5b5
14:56:21: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:21: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:21: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:21: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:21: DSR(driver stage register)  DSR_IMP           :0x0
14:56:21: Reserv2                                       :0x0
14:56:21: Device Size C_SIZE                            :0xedc8
14:56:21: Reserv3                                       :0x0
14:56:21: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:21: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:21: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:22: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:22: Reserv4                                       :0x0
14:56:22: Write Speed Factor R2W_FACTOR                 :0x2
14:56:22: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:22: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:22: FILE_FORMAT_GRP                               :0x0
14:56:22: COPY flag                                     :0x1
14:56:22: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:22: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:22: File_Format                                   :0x0
14:56:22: CRC                                           :0x0
14:56:22: ####CSD Registe Values####  

14:56:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061231B0>, <py_sfcl.CommandDataDefinition object at 0x06123C60>) , Command count = 1032 ] 
14:56:22: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF30>, <py_sfcl.CommandDataDefinition object at 0x06127630>) , Command count = 1033 ] 
14:56:22: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:22: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x061236F0>, 0x0, False) , Command count = 1034 ] 
14:56:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x061236F0>, 0x0, True) , Command count = 1035 ] 
14:56:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:24: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1036 ] 
14:56:24: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:24: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:56:24: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:24: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:24: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:24: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:24: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1037 ] 
14:56:24: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:24: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF60>, <py_sfcl.CommandDataDefinition object at 0x06123E40>) , Command count = 1038 ] 
14:56:24: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x06127030>) , Command count = 1039 ] 
14:56:24: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:24: [ SetCardRCA(0x1, 0xD555) , Command count = 1040 ] 
14:56:24: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:24: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:24: [ SetBusWidth(0x4) , Command count = 1041 ] 
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:24: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1042 ] 
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:24: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:24: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1043 ] 
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:24: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:24: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1044 ] 
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:25: Host Frequency set to 25000 KHz

14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:25: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:25: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1045 ] 
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:25: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123E10>, 0x0, False) , Command count = 1046 ] 
14:56:25: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:25: SendOCR: 1107263488
14:56:25: ExcpectOCR: 3254747136
14:56:25: SendFirstOCR: 1107263488
14:56:25: SendNextOCR: 1107263488
14:56:25: SingleCommand: 0
14:56:25: SingleCommandTestType: 1
14:56:25: Identification: 1
14:56:25: ProtocolMode: 1
14:56:25: VerifyType: 0
14:56:25: SendCMD0: 1
14:56:25: SendCMD8: 1
14:56:25: SendCMD58: 1
14:56:25: SetPower: 1
14:56:25: HcsXpcS18r000: 16744448
14:56:25: HcsXpcS18r001: 33521664
14:56:25: HcsXpcS18r010: 285179904
14:56:25: HcsXpcS18r011: 301957120
14:56:25: HcsXpcS18r100: 1090486272
14:56:25: HcsXpcS18r101: 1107263488
14:56:25: HcsXpcS18r110: 1358921728
14:56:25: HcsXpcS18r111: 1375698944
14:56:25: ReadyCcs18a000: 16744448
14:56:25: ReadyCcs18a001: 33521664
14:56:25: ReadyCcs18a010: 1090486272
14:56:25: ReadyCcs18a011: 1107263488
14:56:25: ReadyCcs18a100: 2164228096
14:56:25: ReadyCcs18a101: 2181005312
14:56:25: ReadyCcs18a110: 3237969920
14:56:25: ReadyCcs18a111: 3254747136
14:56:25: Card Capacity is : 32.000000 GB
14:56:25: SendFirstOCR : 1358921728
14:56:25: SendOCR : 1358921728
14:56:25: SendOCR : 1358921728
14:56:25: ExpectOCR : 3237969920
14:56:25: globalSpeedMode : SDR50
14:56:25: globalPowerUp : powerCycle
14:56:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285960>, 0x0, False) , Command count = 1047 ] 
14:56:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285960>, 0x0, True) , Command count = 1048 ] 
14:56:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:28: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1049 ] 
14:56:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CD20>, <py_sfcl.CommandDataDefinition object at 0x06123F60>) , Command count = 1050 ] 
14:56:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 1051 ] 
14:56:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:28: [ SetCardRCA(0x1, 0xD555) , Command count = 1052 ] 
14:56:28: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:28: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:28: ####CSD Registe 2.0 Values####
14:56:28: CSD_STRUCTURE                                 :0x1
14:56:28: Reserv1                                       :0x0
14:56:28: Time Access 1 TAAC                            :0xe
14:56:28: Time Access 2 NSAC*100                        :0x0
14:56:28: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:28: Card Command Classess CCC                     :0x5b5
14:56:28: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:28: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:28: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:28: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:28: DSR(driver stage register)  DSR_IMP           :0x0
14:56:28: Reserv2                                       :0x0
14:56:28: Device Size C_SIZE                            :0xedc8
14:56:28: Reserv3                                       :0x0
14:56:28: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:28: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:28: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:28: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:28: Reserv4                                       :0x0
14:56:28: Write Speed Factor R2W_FACTOR                 :0x2
14:56:28: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:28: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:28: FILE_FORMAT_GRP                               :0x0
14:56:28: COPY flag                                     :0x1
14:56:28: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:28: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:28: File_Format                                   :0x0
14:56:28: CRC                                           :0x0
14:56:28: ####CSD Registe Values####  

14:56:28: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:28: [ SetBusWidth(0x4) , Command count = 1053 ] 
14:56:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, False) , Command count = 1054 ] 
14:56:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A090>, 0x0, False) , Command count = 1055 ] 
14:56:28: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:28: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:28: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1056 ] 
14:56:28: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:28: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:28: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1057 ] 
14:56:28: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:28: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:28: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1058 ] 
14:56:28: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:28: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:28: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1059 ] 
14:56:28: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:28: SendFirstOCR : 1358921728
14:56:28: SendOCR : 1358921728
14:56:28: SendOCR : 1358921728
14:56:28: ExpectOCR : 3237969920
14:56:28: globalSpeedMode : SDR50
14:56:28: globalPowerUp : powerCycle
14:56:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1900>, 0x0, False) , Command count = 1060 ] 
14:56:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1900>, 0x0, True) , Command count = 1061 ] 
14:56:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:30: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1062 ] 
14:56:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A510>, <py_sfcl.CommandDataDefinition object at 0x06123FC0>) , Command count = 1063 ] 
14:56:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123A20>, <py_sfcl.CommandDataDefinition object at 0x060C1720>) , Command count = 1064 ] 
14:56:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:30: [ SetCardRCA(0x1, 0xD555) , Command count = 1065 ] 
14:56:30: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:30: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:30: ####CSD Registe 2.0 Values####
14:56:30: CSD_STRUCTURE                                 :0x1
14:56:30: Reserv1                                       :0x0
14:56:30: Time Access 1 TAAC                            :0xe
14:56:30: Time Access 2 NSAC*100                        :0x0
14:56:30: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:30: Card Command Classess CCC                     :0x5b5
14:56:30: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:30: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:30: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:30: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:30: DSR(driver stage register)  DSR_IMP           :0x0
14:56:30: Reserv2                                       :0x0
14:56:30: Device Size C_SIZE                            :0xedc8
14:56:30: Reserv3                                       :0x0
14:56:30: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:30: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:30: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:30: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:30: Reserv4                                       :0x0
14:56:30: Write Speed Factor R2W_FACTOR                 :0x2
14:56:30: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:30: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:30: FILE_FORMAT_GRP                               :0x0
14:56:30: COPY flag                                     :0x1
14:56:30: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:30: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:30: File_Format                                   :0x0
14:56:30: CRC                                           :0x0
14:56:30: ####CSD Registe Values####  

14:56:30: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:30: [ SetBusWidth(0x4) , Command count = 1066 ] 
14:56:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C00>, 0x0, False) , Command count = 1067 ] 
14:56:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002A0>, 0x0, False) , Command count = 1068 ] 
14:56:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:30: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:30: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1069 ] 
14:56:30: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:30: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:30: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1070 ] 
14:56:30: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:30: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:30: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1071 ] 
14:56:30: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:30: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:30: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1072 ] 
14:56:30: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:30: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:32: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:32: Host Frequency set to 25000 KHz
14:56:32: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:32: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:32: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E630>, 0x0, True) , Command count = 1073 ] 
14:56:33: [GO18_globalSetVolt]### Host voltage value is set.
14:56:33: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E6C0>, 0x0, False) , Command count = 1074 ] 
14:56:33: [GO18_globalSetVolt]### Host voltage value is set.
14:56:33: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1075 ] 
14:56:33: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1076 ] 
14:56:33: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:33: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:33: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:33: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:33: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1077 ] 
14:56:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:33: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x060C1C60>) , Command count = 1078 ] 
14:56:33: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1840>, <py_sfcl.CommandDataDefinition object at 0x060C1A20>) , Command count = 1079 ] 
14:56:33: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:33: [ SetCardRCA(0x1, 0xD555) , Command count = 1080 ] 
14:56:33: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:33: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:33: Host Frequency set to 25000 KHz
14:56:33: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:33: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:33: ####CSD Registe 2.0 Values####
14:56:33: CSD_STRUCTURE                                 :0x1
14:56:33: Reserv1                                       :0x0
14:56:33: Time Access 1 TAAC                            :0xe
14:56:33: Time Access 2 NSAC*100                        :0x0
14:56:33: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:33: Card Command Classess CCC                     :0x5b5
14:56:33: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:33: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:33: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:33: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:33: DSR(driver stage register)  DSR_IMP           :0x0
14:56:33: Reserv2                                       :0x0
14:56:33: Device Size C_SIZE                            :0xedc8
14:56:33: Reserv3                                       :0x0
14:56:33: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:33: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:33: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:33: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:33: Reserv4                                       :0x0
14:56:33: Write Speed Factor R2W_FACTOR                 :0x2
14:56:33: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:33: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:33: FILE_FORMAT_GRP                               :0x0
14:56:33: COPY flag                                     :0x1
14:56:33: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:33: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:33: File_Format                                   :0x0
14:56:33: CRC                                           :0x0
14:56:33: ####CSD Registe Values####  

14:56:33: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:33: [GetSCRRegisterEntry] Passed
14:56:33: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:33: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:33: Data_Status_After Erases          : 0
14:56:33: CPRM Security Support             : No Security
14:56:33: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:33: Spec. Version                     : Version 3.0X
14:56:33: Extended Security Support         : Extended_Security_Not_Supported
14:56:33: Command Support                   : COMMAND_SUPPORT
14:56:33: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x06100210>) , Command count = 1081 ] 
14:56:33: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061230C0>, <py_sfcl.CommandDataDefinition object at 0x06127240>) , Command count = 1082 ] 
14:56:33: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:33: [ SetBusWidth(0x4) , Command count = 1083 ] 
14:56:33: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:33: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061000C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1084 ] 
14:56:33: Protected Area Size 0x28000
14:56:33: Bus Width           2
14:56:33: Secure Mode         0
14:56:33: Speed  Class        4
14:56:33: Perf Move           0
14:56:33: Au Size             9
14:56:33: Erase Size          15
14:56:33: Erase Timeout       1
14:56:33: Erase offset        1
14:56:33: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:33: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:33: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1085 ] 
14:56:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:33: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:33: Host Frequency set to 100000 KHz
14:56:33: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:33: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:33: ####CSD Registe 2.0 Values####
14:56:33: CSD_STRUCTURE                                 :0x1
14:56:33: Reserv1                                       :0x0
14:56:33: Time Access 1 TAAC                            :0xe
14:56:33: Time Access 2 NSAC*100                        :0x0
14:56:33: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:33: Card Command Classess CCC                     :0x5b5
14:56:33: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:33: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:33: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:33: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:33: DSR(driver stage register)  DSR_IMP           :0x0
14:56:33: Reserv2                                       :0x0
14:56:33: Device Size C_SIZE                            :0xedc8
14:56:33: Reserv3                                       :0x0
14:56:33: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:33: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:33: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:33: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:33: Reserv4                                       :0x0
14:56:33: Write Speed Factor R2W_FACTOR                 :0x2
14:56:33: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:33: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:33: FILE_FORMAT_GRP                               :0x0
14:56:33: COPY flag                                     :0x1
14:56:33: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:33: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:33: File_Format                                   :0x0
14:56:33: CRC                                           :0x0
14:56:33: ####CSD Registe Values####  

14:56:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EE40>, <py_sfcl.CommandDataDefinition object at 0x0610E780>) , Command count = 1086 ] 
14:56:34: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ECC0>, <py_sfcl.CommandDataDefinition object at 0x0610E750>) , Command count = 1087 ] 
14:56:34: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:34: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E7E0>, 0x0, False) , Command count = 1088 ] 
14:56:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E7E0>, 0x0, True) , Command count = 1089 ] 
14:56:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1090 ] 
14:56:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:36: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:56:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1091 ] 
14:56:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E900>, <py_sfcl.CommandDataDefinition object at 0x06100240>) , Command count = 1092 ] 
14:56:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127210>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 1093 ] 
14:56:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:36: [ SetCardRCA(0x1, 0xD555) , Command count = 1094 ] 
14:56:36: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:36: [ SetBusWidth(0x4) , Command count = 1095 ] 
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1096 ] 
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:36: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1097 ] 
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:36: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1098 ] 
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:37: Host Frequency set to 25000 KHz

14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:37: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:37: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1099 ] 
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:37: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:37: [ SetVolt(<py_sfcl.SDVoltage object at 0x061111B0>, 0x0, False) , Command count = 1100 ] 
14:56:37: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:37: SendOCR: 1107263488
14:56:37: ExcpectOCR: 3254747136
14:56:37: SendFirstOCR: 1107263488
14:56:37: SendNextOCR: 1107263488
14:56:37: SingleCommand: 0
14:56:37: SingleCommandTestType: 1
14:56:37: Identification: 1
14:56:37: ProtocolMode: 1
14:56:37: VerifyType: 0
14:56:37: SendCMD0: 1
14:56:37: SendCMD8: 1
14:56:37: SendCMD58: 1
14:56:37: SetPower: 1
14:56:37: HcsXpcS18r000: 16744448
14:56:37: HcsXpcS18r001: 33521664
14:56:37: HcsXpcS18r010: 285179904
14:56:37: HcsXpcS18r011: 301957120
14:56:37: HcsXpcS18r100: 1090486272
14:56:37: HcsXpcS18r101: 1107263488
14:56:37: HcsXpcS18r110: 1358921728
14:56:37: HcsXpcS18r111: 1375698944
14:56:37: ReadyCcs18a000: 16744448
14:56:37: ReadyCcs18a001: 33521664
14:56:37: ReadyCcs18a010: 1090486272
14:56:37: ReadyCcs18a011: 1107263488
14:56:37: ReadyCcs18a100: 2164228096
14:56:37: ReadyCcs18a101: 2181005312
14:56:37: ReadyCcs18a110: 3237969920
14:56:37: ReadyCcs18a111: 3254747136
14:56:37: Card Capacity is : 32.000000 GB
14:56:37: SendFirstOCR : 1358921728
14:56:37: SendOCR : 1358921728
14:56:37: SendOCR : 1358921728
14:56:37: ExpectOCR : 3237969920
14:56:37: globalSpeedMode : SDR50
14:56:37: globalPowerUp : powerCycle
14:56:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111690>, 0x0, False) , Command count = 1101 ] 
14:56:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111690>, 0x0, True) , Command count = 1102 ] 
14:56:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:39: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1103 ] 
14:56:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 1104 ] 
14:56:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111270>, <py_sfcl.CommandDataDefinition object at 0x06127D20>) , Command count = 1105 ] 
14:56:40: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:40: [ SetCardRCA(0x1, 0xD555) , Command count = 1106 ] 
14:56:40: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:40: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:40: ####CSD Registe 2.0 Values####
14:56:40: CSD_STRUCTURE                                 :0x1
14:56:40: Reserv1                                       :0x0
14:56:40: Time Access 1 TAAC                            :0xe
14:56:40: Time Access 2 NSAC*100                        :0x0
14:56:40: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:40: Card Command Classess CCC                     :0x5b5
14:56:40: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:40: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:40: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:40: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:40: DSR(driver stage register)  DSR_IMP           :0x0
14:56:40: Reserv2                                       :0x0
14:56:40: Device Size C_SIZE                            :0xedc8
14:56:40: Reserv3                                       :0x0
14:56:40: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:40: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:40: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:40: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:40: Reserv4                                       :0x0
14:56:40: Write Speed Factor R2W_FACTOR                 :0x2
14:56:40: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:40: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:40: FILE_FORMAT_GRP                               :0x0
14:56:40: COPY flag                                     :0x1
14:56:40: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:40: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:40: File_Format                                   :0x0
14:56:40: CRC                                           :0x0
14:56:40: ####CSD Registe Values####  

14:56:40: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:40: [ SetBusWidth(0x4) , Command count = 1107 ] 
14:56:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1510>, 0x0, False) , Command count = 1108 ] 
14:56:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E840>, 0x0, False) , Command count = 1109 ] 
14:56:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:40: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:40: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1110 ] 
14:56:40: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:40: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:40: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1111 ] 
14:56:40: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:40: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:40: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1112 ] 
14:56:40: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:40: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:40: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1113 ] 
14:56:40: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:40: SendFirstOCR : 1358921728
14:56:40: SendOCR : 1358921728
14:56:40: SendOCR : 1358921728
14:56:40: ExpectOCR : 3237969920
14:56:40: globalSpeedMode : SDR50
14:56:40: globalPowerUp : powerCycle
14:56:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1570>, 0x0, False) , Command count = 1114 ] 
14:56:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1570>, 0x0, True) , Command count = 1115 ] 
14:56:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:42: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1116 ] 
14:56:42: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:42: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:42: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:42: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:42: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123750>, <py_sfcl.CommandDataDefinition object at 0x061111E0>) , Command count = 1117 ] 
14:56:42: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111300>, <py_sfcl.CommandDataDefinition object at 0x06127D20>) , Command count = 1118 ] 
14:56:42: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:42: [ SetCardRCA(0x1, 0xD555) , Command count = 1119 ] 
14:56:42: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:42: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:42: ####CSD Registe 2.0 Values####
14:56:42: CSD_STRUCTURE                                 :0x1
14:56:42: Reserv1                                       :0x0
14:56:42: Time Access 1 TAAC                            :0xe
14:56:42: Time Access 2 NSAC*100                        :0x0
14:56:42: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:42: Card Command Classess CCC                     :0x5b5
14:56:42: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:42: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:42: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:42: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:42: DSR(driver stage register)  DSR_IMP           :0x0
14:56:42: Reserv2                                       :0x0
14:56:42: Device Size C_SIZE                            :0xedc8
14:56:42: Reserv3                                       :0x0
14:56:42: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:42: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:42: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:42: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:42: Reserv4                                       :0x0
14:56:42: Write Speed Factor R2W_FACTOR                 :0x2
14:56:42: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:42: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:42: FILE_FORMAT_GRP                               :0x0
14:56:42: COPY flag                                     :0x1
14:56:42: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:42: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:42: File_Format                                   :0x0
14:56:42: CRC                                           :0x0
14:56:42: ####CSD Registe Values####  

14:56:42: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:42: [ SetBusWidth(0x4) , Command count = 1120 ] 
14:56:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1A80>, 0x0, False) , Command count = 1121 ] 
14:56:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x061000F0>, 0x0, False) , Command count = 1122 ] 
14:56:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:42: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:42: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1123 ] 
14:56:42: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:42: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:42: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1124 ] 
14:56:42: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:42: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:42: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1125 ] 
14:56:42: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:42: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:42: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1126 ] 
14:56:42: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:42: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:44: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:44: Host Frequency set to 25000 KHz
14:56:44: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:44: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:44: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119360>, 0x0, True) , Command count = 1127 ] 
14:56:44: [GO18_globalSetVolt]### Host voltage value is set.
14:56:44: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111210>, 0x0, False) , Command count = 1128 ] 
14:56:44: [GO18_globalSetVolt]### Host voltage value is set.
14:56:44: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1129 ] 
14:56:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1130 ] 
14:56:44: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:44: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:44: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:44: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:44: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1131 ] 
14:56:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:44: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111660>, <py_sfcl.CommandDataDefinition object at 0x06111BD0>) , Command count = 1132 ] 
14:56:44: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1F00>, <py_sfcl.CommandDataDefinition object at 0x06111B70>) , Command count = 1133 ] 
14:56:44: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:44: [ SetCardRCA(0x1, 0xD555) , Command count = 1134 ] 
14:56:45: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:45: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:45: Host Frequency set to 25000 KHz
14:56:45: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:45: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:45: ####CSD Registe 2.0 Values####
14:56:45: CSD_STRUCTURE                                 :0x1
14:56:45: Reserv1                                       :0x0
14:56:45: Time Access 1 TAAC                            :0xe
14:56:45: Time Access 2 NSAC*100                        :0x0
14:56:45: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:45: Card Command Classess CCC                     :0x5b5
14:56:45: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:45: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:45: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:45: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:45: DSR(driver stage register)  DSR_IMP           :0x0
14:56:45: Reserv2                                       :0x0
14:56:45: Device Size C_SIZE                            :0xedc8
14:56:45: Reserv3                                       :0x0
14:56:45: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:45: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:45: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:45: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:45: Reserv4                                       :0x0
14:56:45: Write Speed Factor R2W_FACTOR                 :0x2
14:56:45: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:45: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:45: FILE_FORMAT_GRP                               :0x0
14:56:45: COPY flag                                     :0x1
14:56:45: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:45: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:45: File_Format                                   :0x0
14:56:45: CRC                                           :0x0
14:56:45: ####CSD Registe Values####  

14:56:45: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:45: [GetSCRRegisterEntry] Passed
14:56:45: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:45: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:45: Data_Status_After Erases          : 0
14:56:45: CPRM Security Support             : No Security
14:56:45: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:45: Spec. Version                     : Version 3.0X
14:56:45: Extended Security Support         : Extended_Security_Not_Supported
14:56:45: Command Support                   : COMMAND_SUPPORT
14:56:45: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x06111330>) , Command count = 1135 ] 
14:56:45: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EEA0>, <py_sfcl.CommandDataDefinition object at 0x0610E8A0>) , Command count = 1136 ] 
14:56:45: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:45: [ SetBusWidth(0x4) , Command count = 1137 ] 
14:56:45: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:45: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061114B0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1138 ] 
14:56:45: Protected Area Size 0x28000
14:56:45: Bus Width           2
14:56:45: Secure Mode         0
14:56:45: Speed  Class        4
14:56:45: Perf Move           0
14:56:45: Au Size             9
14:56:45: Erase Size          15
14:56:45: Erase Timeout       1
14:56:45: Erase offset        1
14:56:45: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:45: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:45: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1139 ] 
14:56:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:45: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:45: Host Frequency set to 100000 KHz
14:56:45: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:45: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:45: ####CSD Registe 2.0 Values####
14:56:45: CSD_STRUCTURE                                 :0x1
14:56:45: Reserv1                                       :0x0
14:56:45: Time Access 1 TAAC                            :0xe
14:56:45: Time Access 2 NSAC*100                        :0x0
14:56:45: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:45: Card Command Classess CCC                     :0x5b5
14:56:45: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:45: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:45: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:45: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:45: DSR(driver stage register)  DSR_IMP           :0x0
14:56:45: Reserv2                                       :0x0
14:56:45: Device Size C_SIZE                            :0xedc8
14:56:45: Reserv3                                       :0x0
14:56:45: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:45: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:45: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:45: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:45: Reserv4                                       :0x0
14:56:45: Write Speed Factor R2W_FACTOR                 :0x2
14:56:45: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:45: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:45: FILE_FORMAT_GRP                               :0x0
14:56:45: COPY flag                                     :0x1
14:56:45: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:45: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:45: File_Format                                   :0x0
14:56:45: CRC                                           :0x0
14:56:45: ####CSD Registe Values####  

14:56:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E9C0>, <py_sfcl.CommandDataDefinition object at 0x06111B10>) , Command count = 1140 ] 
14:56:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ECF0>, <py_sfcl.CommandDataDefinition object at 0x061113F0>) , Command count = 1141 ] 
14:56:45: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:45: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119D50>, 0x0, False) , Command count = 1142 ] 
14:56:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119D50>, 0x0, True) , Command count = 1143 ] 
14:56:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:48: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1144 ] 
14:56:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:48: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:56:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:48: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1145 ] 
14:56:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061004B0>, <py_sfcl.CommandDataDefinition object at 0x06111D20>) , Command count = 1146 ] 
14:56:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111750>, <py_sfcl.CommandDataDefinition object at 0x06127DE0>) , Command count = 1147 ] 
14:56:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:48: [ SetCardRCA(0x1, 0xD555) , Command count = 1148 ] 
14:56:48: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:48: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:48: [ SetBusWidth(0x4) , Command count = 1149 ] 
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:48: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1150 ] 
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:48: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1151 ] 
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:48: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1152 ] 
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:48: Host Frequency set to 25000 KHz

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:48: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1153 ] 
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x061119C0>, 0x0, False) , Command count = 1154 ] 
14:56:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:48: SendOCR: 1107263488
14:56:48: ExcpectOCR: 3254747136
14:56:48: SendFirstOCR: 1107263488
14:56:48: SendNextOCR: 1107263488
14:56:48: SingleCommand: 0
14:56:48: SingleCommandTestType: 1
14:56:48: Identification: 1
14:56:48: ProtocolMode: 1
14:56:48: VerifyType: 0
14:56:48: SendCMD0: 1
14:56:48: SendCMD8: 1
14:56:48: SendCMD58: 1
14:56:48: SetPower: 1
14:56:48: HcsXpcS18r000: 16744448
14:56:48: HcsXpcS18r001: 33521664
14:56:48: HcsXpcS18r010: 285179904
14:56:48: HcsXpcS18r011: 301957120
14:56:48: HcsXpcS18r100: 1090486272
14:56:48: HcsXpcS18r101: 1107263488
14:56:48: HcsXpcS18r110: 1358921728
14:56:48: HcsXpcS18r111: 1375698944
14:56:48: ReadyCcs18a000: 16744448
14:56:48: ReadyCcs18a001: 33521664
14:56:48: ReadyCcs18a010: 1090486272
14:56:48: ReadyCcs18a011: 1107263488
14:56:48: ReadyCcs18a100: 2164228096
14:56:48: ReadyCcs18a101: 2181005312
14:56:48: ReadyCcs18a110: 3237969920
14:56:48: ReadyCcs18a111: 3254747136
14:56:48: Card Capacity is : 32.000000 GB
14:56:48: SendFirstOCR : 1358921728
14:56:48: SendOCR : 1358921728
14:56:48: SendOCR : 1358921728
14:56:48: ExpectOCR : 3237969920
14:56:48: globalSpeedMode : SDR50
14:56:48: globalPowerUp : powerCycle
14:56:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E5D0>, 0x0, False) , Command count = 1155 ] 
14:56:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E5D0>, 0x0, True) , Command count = 1156 ] 
14:56:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:50: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1157 ] 
14:56:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x06111810>) , Command count = 1158 ] 
14:56:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED50>, <py_sfcl.CommandDataDefinition object at 0x06111D80>) , Command count = 1159 ] 
14:56:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:50: [ SetCardRCA(0x1, 0xD555) , Command count = 1160 ] 
14:56:50: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:50: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:50: ####CSD Registe 2.0 Values####
14:56:50: CSD_STRUCTURE                                 :0x1
14:56:50: Reserv1                                       :0x0
14:56:50: Time Access 1 TAAC                            :0xe
14:56:50: Time Access 2 NSAC*100                        :0x0
14:56:50: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:50: Card Command Classess CCC                     :0x5b5
14:56:50: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:50: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:50: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:50: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:50: DSR(driver stage register)  DSR_IMP           :0x0
14:56:50: Reserv2                                       :0x0
14:56:50: Device Size C_SIZE                            :0xedc8
14:56:50: Reserv3                                       :0x0
14:56:50: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:50: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:50: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:50: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:50: Reserv4                                       :0x0
14:56:50: Write Speed Factor R2W_FACTOR                 :0x2
14:56:50: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:50: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:50: FILE_FORMAT_GRP                               :0x0
14:56:50: COPY flag                                     :0x1
14:56:50: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:50: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:50: File_Format                                   :0x0
14:56:50: CRC                                           :0x0
14:56:50: ####CSD Registe Values####  

14:56:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:50: [ SetBusWidth(0x4) , Command count = 1161 ] 
14:56:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111780>, 0x0, False) , Command count = 1162 ] 
14:56:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119240>, 0x0, False) , Command count = 1163 ] 
14:56:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:50: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1164 ] 
14:56:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:50: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1165 ] 
14:56:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:50: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1166 ] 
14:56:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:50: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1167 ] 
14:56:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:50: SendFirstOCR : 1358921728
14:56:50: SendOCR : 1358921728
14:56:50: SendOCR : 1358921728
14:56:50: ExpectOCR : 3237969920
14:56:50: globalSpeedMode : SDR50
14:56:50: globalPowerUp : powerCycle
14:56:52: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:52: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195D0>, 0x0, False) , Command count = 1168 ] 
14:56:52: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:52: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195D0>, 0x0, True) , Command count = 1169 ] 
14:56:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:53: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:56:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1170 ] 
14:56:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:56:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E120>, <py_sfcl.CommandDataDefinition object at 0x061232D0>) , Command count = 1171 ] 
14:56:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117E0>, <py_sfcl.CommandDataDefinition object at 0x061196C0>) , Command count = 1172 ] 
14:56:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:56:53: [ SetCardRCA(0x1, 0xD555) , Command count = 1173 ] 
14:56:53: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:53: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:53: ####CSD Registe 2.0 Values####
14:56:53: CSD_STRUCTURE                                 :0x1
14:56:53: Reserv1                                       :0x0
14:56:53: Time Access 1 TAAC                            :0xe
14:56:53: Time Access 2 NSAC*100                        :0x0
14:56:53: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:53: Card Command Classess CCC                     :0x5b5
14:56:53: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:53: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:53: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:53: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:53: DSR(driver stage register)  DSR_IMP           :0x0
14:56:53: Reserv2                                       :0x0
14:56:53: Device Size C_SIZE                            :0xedc8
14:56:53: Reserv3                                       :0x0
14:56:53: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:53: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:53: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:53: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:53: Reserv4                                       :0x0
14:56:53: Write Speed Factor R2W_FACTOR                 :0x2
14:56:53: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:53: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:53: FILE_FORMAT_GRP                               :0x0
14:56:53: COPY flag                                     :0x1
14:56:53: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:53: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:53: File_Format                                   :0x0
14:56:53: CRC                                           :0x0
14:56:53: ####CSD Registe Values####  

14:56:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:53: [ SetBusWidth(0x4) , Command count = 1174 ] 
14:56:53: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E720>, 0x0, False) , Command count = 1175 ] 
14:56:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:53: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119420>, 0x0, False) , Command count = 1176 ] 
14:56:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:53: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1177 ] 
14:56:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:53: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:53: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1178 ] 
14:56:53: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:53: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1179 ] 
14:56:53: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:53: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:56:53: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1180 ] 
14:56:53: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:56:53: [GO4_globalInitCard]### Switch to Specify Card Type
14:56:55: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:55: Host Frequency set to 25000 KHz
14:56:55: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:55: [GO18_globalSetVolt]### Set Host Voltage value.
14:56:55: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:56:55: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119810>, 0x0, True) , Command count = 1181 ] 
14:56:55: [GO18_globalSetVolt]### Host voltage value is set.
14:56:55: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:56:55: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119B40>, 0x0, False) , Command count = 1182 ] 
14:56:55: [GO18_globalSetVolt]### Host voltage value is set.
14:56:55: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1183 ] 
14:56:55: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1184 ] 
14:56:55: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:55: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:55: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:55: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:55: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:55: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1185 ] 
14:56:55: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:55: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195A0>, <py_sfcl.CommandDataDefinition object at 0x06119960>) , Command count = 1186 ] 
14:56:55: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E030>, <py_sfcl.CommandDataDefinition object at 0x06119EA0>) , Command count = 1187 ] 
14:56:55: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:55: [ SetCardRCA(0x1, 0xD555) , Command count = 1188 ] 
14:56:55: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:55: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:56:55: Host Frequency set to 25000 KHz
14:56:55: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:56:55: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:55: ####CSD Registe 2.0 Values####
14:56:55: CSD_STRUCTURE                                 :0x1
14:56:55: Reserv1                                       :0x0
14:56:55: Time Access 1 TAAC                            :0xe
14:56:55: Time Access 2 NSAC*100                        :0x0
14:56:55: Data Transfer Rate TRAN_SPEED                 :0x32
14:56:55: Card Command Classess CCC                     :0x5b5
14:56:55: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:55: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:55: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:55: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:55: DSR(driver stage register)  DSR_IMP           :0x0
14:56:55: Reserv2                                       :0x0
14:56:55: Device Size C_SIZE                            :0xedc8
14:56:55: Reserv3                                       :0x0
14:56:55: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:55: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:55: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:55: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:55: Reserv4                                       :0x0
14:56:55: Write Speed Factor R2W_FACTOR                 :0x2
14:56:55: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:55: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:55: FILE_FORMAT_GRP                               :0x0
14:56:55: COPY flag                                     :0x1
14:56:55: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:55: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:55: File_Format                                   :0x0
14:56:55: CRC                                           :0x0
14:56:55: ####CSD Registe Values####  

14:56:55: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:56:55: [GetSCRRegisterEntry] Passed
14:56:55: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:56:55: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:56:55: Data_Status_After Erases          : 0
14:56:55: CPRM Security Support             : No Security
14:56:55: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:56:55: Spec. Version                     : Version 3.0X
14:56:55: Extended Security Support         : Extended_Security_Not_Supported
14:56:55: Command Support                   : COMMAND_SUPPORT
14:56:55: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:56:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x06119ED0>) , Command count = 1189 ] 
14:56:55: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:56:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x06119090>) , Command count = 1190 ] 
14:56:55: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:56:55: [ SetBusWidth(0x4) , Command count = 1191 ] 
14:56:55: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:56:55: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119C30>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1192 ] 
14:56:55: Protected Area Size 0x28000
14:56:55: Bus Width           2
14:56:55: Secure Mode         0
14:56:55: Speed  Class        4
14:56:55: Perf Move           0
14:56:55: Au Size             9
14:56:55: Erase Size          15
14:56:55: Erase Timeout       1
14:56:55: Erase offset        1
14:56:55: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:56:55: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:56:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:55: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1193 ] 
14:56:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:56:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:55: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:56:56: Host Frequency set to 100000 KHz
14:56:56: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:56:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:56:56: ####CSD Registe 2.0 Values####
14:56:56: CSD_STRUCTURE                                 :0x1
14:56:56: Reserv1                                       :0x0
14:56:56: Time Access 1 TAAC                            :0xe
14:56:56: Time Access 2 NSAC*100                        :0x0
14:56:56: Data Transfer Rate TRAN_SPEED                 :0xb
14:56:56: Card Command Classess CCC                     :0x5b5
14:56:56: Max Read Data Block Length  READ_BL_LEN       :0x9
14:56:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:56:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:56:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:56:56: DSR(driver stage register)  DSR_IMP           :0x0
14:56:56: Reserv2                                       :0x0
14:56:56: Device Size C_SIZE                            :0xedc8
14:56:56: Reserv3                                       :0x0
14:56:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:56:56: Erase Sector Size SECTOR_SIZE                 :0x7f
14:56:56: Write Protect Group Size WP_GRP_SIZE          :0x0
14:56:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:56:56: Reserv4                                       :0x0
14:56:56: Write Speed Factor R2W_FACTOR                 :0x2
14:56:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:56:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:56:56: FILE_FORMAT_GRP                               :0x0
14:56:56: COPY flag                                     :0x1
14:56:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:56:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:56:56: File_Format                                   :0x0
14:56:56: CRC                                           :0x0
14:56:56: ####CSD Registe Values####  

14:56:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E390>, <py_sfcl.CommandDataDefinition object at 0x06119A20>) , Command count = 1194 ] 
14:56:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:56:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF90>, <py_sfcl.CommandDataDefinition object at 0x06119930>) , Command count = 1195 ] 
14:56:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:56:56: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:56:58: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111F90>, 0x0, False) , Command count = 1196 ] 
14:56:58: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:58: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:56:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111F90>, 0x0, True) , Command count = 1197 ] 
14:56:58: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:58: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:56:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1198 ] 
14:56:58: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:56:58: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:56:58: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:56:58: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:56:58: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:56:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:56:58: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1199 ] 
14:56:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:56:58: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:56:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E150>, <py_sfcl.CommandDataDefinition object at 0x06119AE0>) , Command count = 1200 ] 
14:56:58: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:56:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191B0>, <py_sfcl.CommandDataDefinition object at 0x06119F60>) , Command count = 1201 ] 
14:56:58: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:56:58: [ SetCardRCA(0x1, 0xD555) , Command count = 1202 ] 
14:56:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:56:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:56:59: [ SetBusWidth(0x4) , Command count = 1203 ] 
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:59: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1204 ] 
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:59: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1205 ] 
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:59: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1206 ] 
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:59: Host Frequency set to 25000 KHz

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [32799, 49153, 32783, 32783, 32769, 32769]
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:56:59: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1207 ] 
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:56:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:56:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:56:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119480>, 0x0, False) , Command count = 1208 ] 
14:56:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:56:59: SendOCR: 1107263488
14:56:59: ExcpectOCR: 3254747136
14:56:59: SendFirstOCR: 1107263488
14:56:59: SendNextOCR: 1107263488
14:56:59: SingleCommand: 0
14:56:59: SingleCommandTestType: 1
14:56:59: Identification: 1
14:56:59: ProtocolMode: 1
14:56:59: VerifyType: 0
14:56:59: SendCMD0: 1
14:56:59: SendCMD8: 1
14:56:59: SendCMD58: 1
14:56:59: SetPower: 1
14:56:59: HcsXpcS18r000: 16744448
14:56:59: HcsXpcS18r001: 33521664
14:56:59: HcsXpcS18r010: 285179904
14:56:59: HcsXpcS18r011: 301957120
14:56:59: HcsXpcS18r100: 1090486272
14:56:59: HcsXpcS18r101: 1107263488
14:56:59: HcsXpcS18r110: 1358921728
14:56:59: HcsXpcS18r111: 1375698944
14:56:59: ReadyCcs18a000: 16744448
14:56:59: ReadyCcs18a001: 33521664
14:56:59: ReadyCcs18a010: 1090486272
14:56:59: ReadyCcs18a011: 1107263488
14:56:59: ReadyCcs18a100: 2164228096
14:56:59: ReadyCcs18a101: 2181005312
14:56:59: ReadyCcs18a110: 3237969920
14:56:59: ReadyCcs18a111: 3254747136
14:56:59: Card Capacity is : 32.000000 GB
14:56:59: SendFirstOCR : 1358921728
14:56:59: SendOCR : 1358921728
14:56:59: SendOCR : 1358921728
14:56:59: ExpectOCR : 3237969920
14:56:59: globalSpeedMode : SDR50
14:56:59: globalPowerUp : powerCycle
14:57:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119450>, 0x0, False) , Command count = 1209 ] 
14:57:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119450>, 0x0, True) , Command count = 1210 ] 
14:57:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:02: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1211 ] 
14:57:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 1212 ] 
14:57:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E70>, <py_sfcl.CommandDataDefinition object at 0x06127780>) , Command count = 1213 ] 
14:57:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:02: [ SetCardRCA(0x1, 0xD555) , Command count = 1214 ] 
14:57:02: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:02: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:02: ####CSD Registe 2.0 Values####
14:57:02: CSD_STRUCTURE                                 :0x1
14:57:02: Reserv1                                       :0x0
14:57:02: Time Access 1 TAAC                            :0xe
14:57:02: Time Access 2 NSAC*100                        :0x0
14:57:02: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:02: Card Command Classess CCC                     :0x5b5
14:57:02: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:02: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:02: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:02: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:02: DSR(driver stage register)  DSR_IMP           :0x0
14:57:02: Reserv2                                       :0x0
14:57:02: Device Size C_SIZE                            :0xedc8
14:57:02: Reserv3                                       :0x0
14:57:02: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:02: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:02: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:02: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:02: Reserv4                                       :0x0
14:57:02: Write Speed Factor R2W_FACTOR                 :0x2
14:57:02: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:02: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:02: FILE_FORMAT_GRP                               :0x0
14:57:02: COPY flag                                     :0x1
14:57:02: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:02: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:02: File_Format                                   :0x0
14:57:02: CRC                                           :0x0
14:57:02: ####CSD Registe Values####  

14:57:02: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:02: [ SetBusWidth(0x4) , Command count = 1215 ] 
14:57:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E660>, 0x0, False) , Command count = 1216 ] 
14:57:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AA80>, 0x0, False) , Command count = 1217 ] 
14:57:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:02: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1218 ] 
14:57:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:02: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1219 ] 
14:57:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:02: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1220 ] 
14:57:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:02: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1221 ] 
14:57:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:02: SendFirstOCR : 1358921728
14:57:02: SendOCR : 1358921728
14:57:02: SendOCR : 1358921728
14:57:02: ExpectOCR : 3237969920
14:57:02: globalSpeedMode : SDR50
14:57:02: globalPowerUp : powerCycle
14:57:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111FC0>, 0x0, False) , Command count = 1222 ] 
14:57:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111FC0>, 0x0, True) , Command count = 1223 ] 
14:57:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:04: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1224 ] 
14:57:04: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:04: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:04: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:04: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:04: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E570>, <py_sfcl.CommandDataDefinition object at 0x0611E5D0>) , Command count = 1225 ] 
14:57:04: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EAE0>, <py_sfcl.CommandDataDefinition object at 0x0611E9C0>) , Command count = 1226 ] 
14:57:04: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:04: [ SetCardRCA(0x1, 0xD555) , Command count = 1227 ] 
14:57:04: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:04: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:04: ####CSD Registe 2.0 Values####
14:57:04: CSD_STRUCTURE                                 :0x1
14:57:04: Reserv1                                       :0x0
14:57:04: Time Access 1 TAAC                            :0xe
14:57:04: Time Access 2 NSAC*100                        :0x0
14:57:04: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:04: Card Command Classess CCC                     :0x5b5
14:57:04: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:04: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:04: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:04: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:04: DSR(driver stage register)  DSR_IMP           :0x0
14:57:04: Reserv2                                       :0x0
14:57:04: Device Size C_SIZE                            :0xedc8
14:57:04: Reserv3                                       :0x0
14:57:04: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:04: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:04: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:04: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:04: Reserv4                                       :0x0
14:57:04: Write Speed Factor R2W_FACTOR                 :0x2
14:57:04: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:04: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:04: FILE_FORMAT_GRP                               :0x0
14:57:04: COPY flag                                     :0x1
14:57:04: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:04: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:04: File_Format                                   :0x0
14:57:04: CRC                                           :0x0
14:57:04: ####CSD Registe Values####  

14:57:04: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:04: [ SetBusWidth(0x4) , Command count = 1228 ] 
14:57:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123030>, 0x0, False) , Command count = 1229 ] 
14:57:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, False) , Command count = 1230 ] 
14:57:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:04: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:04: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1231 ] 
14:57:04: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:04: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:04: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1232 ] 
14:57:04: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:04: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:04: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1233 ] 
14:57:04: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:04: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:04: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1234 ] 
14:57:04: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:04: [GO4_globalInitCard]### Switch to Specify Card Type
14:57:06: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:06: Host Frequency set to 25000 KHz
14:57:06: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:06: [GO18_globalSetVolt]### Set Host Voltage value.
14:57:06: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:57:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECC0>, 0x0, True) , Command count = 1235 ] 
14:57:06: [GO18_globalSetVolt]### Host voltage value is set.
14:57:06: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:57:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EC90>, 0x0, False) , Command count = 1236 ] 
14:57:07: [GO18_globalSetVolt]### Host voltage value is set.
14:57:07: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1237 ] 
14:57:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1238 ] 
14:57:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1239 ] 
14:57:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F90>, <py_sfcl.CommandDataDefinition object at 0x06123180>) , Command count = 1240 ] 
14:57:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3C0>, <py_sfcl.CommandDataDefinition object at 0x0611E4E0>) , Command count = 1241 ] 
14:57:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:07: [ SetCardRCA(0x1, 0xD555) , Command count = 1242 ] 
14:57:07: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:07: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:07: Host Frequency set to 25000 KHz
14:57:07: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:07: ####CSD Registe 2.0 Values####
14:57:07: CSD_STRUCTURE                                 :0x1
14:57:07: Reserv1                                       :0x0
14:57:07: Time Access 1 TAAC                            :0xe
14:57:07: Time Access 2 NSAC*100                        :0x0
14:57:07: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:07: Card Command Classess CCC                     :0x5b5
14:57:07: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:07: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:07: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:07: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:07: DSR(driver stage register)  DSR_IMP           :0x0
14:57:07: Reserv2                                       :0x0
14:57:07: Device Size C_SIZE                            :0xedc8
14:57:07: Reserv3                                       :0x0
14:57:07: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:07: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:07: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:07: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:07: Reserv4                                       :0x0
14:57:07: Write Speed Factor R2W_FACTOR                 :0x2
14:57:07: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:07: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:07: FILE_FORMAT_GRP                               :0x0
14:57:07: COPY flag                                     :0x1
14:57:07: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:07: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:07: File_Format                                   :0x0
14:57:07: CRC                                           :0x0
14:57:07: ####CSD Registe Values####  

14:57:07: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:57:07: [GetSCRRegisterEntry] Passed
14:57:07: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:57:07: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:57:07: Data_Status_After Erases          : 0
14:57:07: CPRM Security Support             : No Security
14:57:07: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:57:07: Spec. Version                     : Version 3.0X
14:57:07: Extended Security Support         : Extended_Security_Not_Supported
14:57:07: Command Support                   : COMMAND_SUPPORT
14:57:07: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:57:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123150>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 1243 ] 
14:57:07: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:57:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EA80>, <py_sfcl.CommandDataDefinition object at 0x0611EDB0>) , Command count = 1244 ] 
14:57:07: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:57:07: [ SetBusWidth(0x4) , Command count = 1245 ] 
14:57:07: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:57:07: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061270C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1246 ] 
14:57:07: Protected Area Size 0x28000
14:57:07: Bus Width           2
14:57:07: Secure Mode         0
14:57:07: Speed  Class        4
14:57:07: Perf Move           0
14:57:07: Au Size             9
14:57:07: Erase Size          15
14:57:07: Erase Timeout       1
14:57:07: Erase offset        1
14:57:07: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:57:07: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:57:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:07: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1247 ] 
14:57:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:57:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:07: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:57:07: Host Frequency set to 100000 KHz
14:57:07: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:57:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:07: ####CSD Registe 2.0 Values####
14:57:07: CSD_STRUCTURE                                 :0x1
14:57:07: Reserv1                                       :0x0
14:57:07: Time Access 1 TAAC                            :0xe
14:57:07: Time Access 2 NSAC*100                        :0x0
14:57:07: Data Transfer Rate TRAN_SPEED                 :0xb
14:57:07: Card Command Classess CCC                     :0x5b5
14:57:07: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:07: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:07: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:07: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:07: DSR(driver stage register)  DSR_IMP           :0x0
14:57:07: Reserv2                                       :0x0
14:57:07: Device Size C_SIZE                            :0xedc8
14:57:07: Reserv3                                       :0x0
14:57:07: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:07: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:07: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:07: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:07: Reserv4                                       :0x0
14:57:07: Write Speed Factor R2W_FACTOR                 :0x2
14:57:07: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:07: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:08: FILE_FORMAT_GRP                               :0x0
14:57:08: COPY flag                                     :0x1
14:57:08: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:08: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:08: File_Format                                   :0x0
14:57:08: CRC                                           :0x0
14:57:08: ####CSD Registe Values####  

14:57:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061231E0>, <py_sfcl.CommandDataDefinition object at 0x06123240>) , Command count = 1248 ] 
14:57:08: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:57:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061236C0>, <py_sfcl.CommandDataDefinition object at 0x061273C0>) , Command count = 1249 ] 
14:57:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:57:08: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:57:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x061233F0>, 0x0, False) , Command count = 1250 ] 
14:57:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x061233F0>, 0x0, True) , Command count = 1251 ] 
14:57:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1252 ] 
14:57:10: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:10: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:57:10: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:10: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:10: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:10: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1253 ] 
14:57:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:10: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119CF0>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 1254 ] 
14:57:10: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123900>, <py_sfcl.CommandDataDefinition object at 0x06127B70>) , Command count = 1255 ] 
14:57:10: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:10: [ SetCardRCA(0x1, 0xD555) , Command count = 1256 ] 
14:57:10: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:10: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:10: [ SetBusWidth(0x4) , Command count = 1257 ] 
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:10: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1258 ] 
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:10: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1259 ] 
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:10: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1260 ] 
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:10: Host Frequency set to 25000 KHz

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:10: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:10: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1261 ] 
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:10: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:11: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:11: [ SetVolt(<py_sfcl.SDVoltage object at 0x052571B0>, 0x0, False) , Command count = 1262 ] 
14:57:11: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:11: SendOCR: 1107263488
14:57:11: ExcpectOCR: 3254747136
14:57:11: SendFirstOCR: 1107263488
14:57:11: SendNextOCR: 1107263488
14:57:11: SingleCommand: 0
14:57:11: SingleCommandTestType: 1
14:57:11: Identification: 1
14:57:11: ProtocolMode: 1
14:57:11: VerifyType: 0
14:57:11: SendCMD0: 1
14:57:11: SendCMD8: 1
14:57:11: SendCMD58: 1
14:57:11: SetPower: 1
14:57:11: HcsXpcS18r000: 16744448
14:57:11: HcsXpcS18r001: 33521664
14:57:11: HcsXpcS18r010: 285179904
14:57:11: HcsXpcS18r011: 301957120
14:57:11: HcsXpcS18r100: 1090486272
14:57:11: HcsXpcS18r101: 1107263488
14:57:11: HcsXpcS18r110: 1358921728
14:57:11: HcsXpcS18r111: 1375698944
14:57:11: ReadyCcs18a000: 16744448
14:57:11: ReadyCcs18a001: 33521664
14:57:11: ReadyCcs18a010: 1090486272
14:57:11: ReadyCcs18a011: 1107263488
14:57:11: ReadyCcs18a100: 2164228096
14:57:11: ReadyCcs18a101: 2181005312
14:57:11: ReadyCcs18a110: 3237969920
14:57:11: ReadyCcs18a111: 3254747136
14:57:11: Card Capacity is : 32.000000 GB
14:57:11: SendFirstOCR : 1358921728
14:57:11: SendOCR : 1358921728
14:57:11: SendOCR : 1358921728
14:57:11: ExpectOCR : 3237969920
14:57:11: globalSpeedMode : SDR50
14:57:11: globalPowerUp : powerCycle
14:57:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E750>, 0x0, False) , Command count = 1263 ] 
14:57:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E750>, 0x0, True) , Command count = 1264 ] 
14:57:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:13: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1265 ] 
14:57:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:13: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F00>, <py_sfcl.CommandDataDefinition object at 0x06123060>) , Command count = 1266 ] 
14:57:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123210>, <py_sfcl.CommandDataDefinition object at 0x061234E0>) , Command count = 1267 ] 
14:57:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:13: [ SetCardRCA(0x1, 0xD555) , Command count = 1268 ] 
14:57:13: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:13: ####CSD Registe 2.0 Values####
14:57:13: CSD_STRUCTURE                                 :0x1
14:57:13: Reserv1                                       :0x0
14:57:13: Time Access 1 TAAC                            :0xe
14:57:13: Time Access 2 NSAC*100                        :0x0
14:57:13: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:13: Card Command Classess CCC                     :0x5b5
14:57:13: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:13: DSR(driver stage register)  DSR_IMP           :0x0
14:57:13: Reserv2                                       :0x0
14:57:13: Device Size C_SIZE                            :0xedc8
14:57:13: Reserv3                                       :0x0
14:57:13: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:13: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:13: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:13: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:13: Reserv4                                       :0x0
14:57:13: Write Speed Factor R2W_FACTOR                 :0x2
14:57:13: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:13: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:13: FILE_FORMAT_GRP                               :0x0
14:57:13: COPY flag                                     :0x1
14:57:13: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:13: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:13: File_Format                                   :0x0
14:57:13: CRC                                           :0x0
14:57:13: ####CSD Registe Values####  

14:57:13: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:13: [ SetBusWidth(0x4) , Command count = 1269 ] 
14:57:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123960>, 0x0, False) , Command count = 1270 ] 
14:57:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x061235A0>, 0x0, False) , Command count = 1271 ] 
14:57:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:13: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1272 ] 
14:57:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:13: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1273 ] 
14:57:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:13: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1274 ] 
14:57:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:13: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1275 ] 
14:57:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:13: SendFirstOCR : 1358921728
14:57:13: SendOCR : 1358921728
14:57:13: SendOCR : 1358921728
14:57:13: ExpectOCR : 3237969920
14:57:13: globalSpeedMode : SDR50
14:57:13: globalPowerUp : powerCycle
14:57:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C2A0>, 0x0, False) , Command count = 1276 ] 
14:57:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C2A0>, 0x0, True) , Command count = 1277 ] 
14:57:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:15: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1278 ] 
14:57:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:16: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 1279 ] 
14:57:16: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x06127E10>) , Command count = 1280 ] 
14:57:16: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:16: [ SetCardRCA(0x1, 0xD555) , Command count = 1281 ] 
14:57:16: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:16: ####CSD Registe 2.0 Values####
14:57:16: CSD_STRUCTURE                                 :0x1
14:57:16: Reserv1                                       :0x0
14:57:16: Time Access 1 TAAC                            :0xe
14:57:16: Time Access 2 NSAC*100                        :0x0
14:57:16: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:16: Card Command Classess CCC                     :0x5b5
14:57:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:16: DSR(driver stage register)  DSR_IMP           :0x0
14:57:16: Reserv2                                       :0x0
14:57:16: Device Size C_SIZE                            :0xedc8
14:57:16: Reserv3                                       :0x0
14:57:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:16: Reserv4                                       :0x0
14:57:16: Write Speed Factor R2W_FACTOR                 :0x2
14:57:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:16: FILE_FORMAT_GRP                               :0x0
14:57:16: COPY flag                                     :0x1
14:57:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:16: File_Format                                   :0x0
14:57:16: CRC                                           :0x0
14:57:16: ####CSD Registe Values####  

14:57:16: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:16: [ SetBusWidth(0x4) , Command count = 1282 ] 
14:57:16: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x061239C0>, 0x0, False) , Command count = 1283 ] 
14:57:16: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:16: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127CF0>, 0x0, False) , Command count = 1284 ] 
14:57:16: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:16: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:16: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1285 ] 
14:57:16: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:16: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:16: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1286 ] 
14:57:16: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:16: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:16: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1287 ] 
14:57:16: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:16: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:16: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1288 ] 
14:57:16: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:16: [GO4_globalInitCard]### Switch to Specify Card Type
14:57:18: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:18: Host Frequency set to 25000 KHz
14:57:18: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:18: [GO18_globalSetVolt]### Set Host Voltage value.
14:57:18: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:57:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF30>, 0x0, True) , Command count = 1289 ] 
14:57:18: [GO18_globalSetVolt]### Host voltage value is set.
14:57:18: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:57:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF60>, 0x0, False) , Command count = 1290 ] 
14:57:18: [GO18_globalSetVolt]### Host voltage value is set.
14:57:18: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1291 ] 
14:57:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1292 ] 
14:57:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1293 ] 
14:57:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061230F0>, <py_sfcl.CommandDataDefinition object at 0x06127DB0>) , Command count = 1294 ] 
14:57:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A060>, <py_sfcl.CommandDataDefinition object at 0x06127690>) , Command count = 1295 ] 
14:57:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:18: [ SetCardRCA(0x1, 0xD555) , Command count = 1296 ] 
14:57:18: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:18: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:18: Host Frequency set to 25000 KHz
14:57:18: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:18: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:18: ####CSD Registe 2.0 Values####
14:57:18: CSD_STRUCTURE                                 :0x1
14:57:18: Reserv1                                       :0x0
14:57:18: Time Access 1 TAAC                            :0xe
14:57:18: Time Access 2 NSAC*100                        :0x0
14:57:18: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:18: Card Command Classess CCC                     :0x5b5
14:57:18: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:18: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:18: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:18: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:18: DSR(driver stage register)  DSR_IMP           :0x0
14:57:18: Reserv2                                       :0x0
14:57:18: Device Size C_SIZE                            :0xedc8
14:57:18: Reserv3                                       :0x0
14:57:18: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:18: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:18: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:18: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:18: Reserv4                                       :0x0
14:57:18: Write Speed Factor R2W_FACTOR                 :0x2
14:57:18: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:18: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:18: FILE_FORMAT_GRP                               :0x0
14:57:18: COPY flag                                     :0x1
14:57:18: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:18: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:18: File_Format                                   :0x0
14:57:18: CRC                                           :0x0
14:57:18: ####CSD Registe Values####  

14:57:18: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:57:18: [GetSCRRegisterEntry] Passed
14:57:18: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:57:18: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:57:18: Data_Status_After Erases          : 0
14:57:18: CPRM Security Support             : No Security
14:57:18: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:57:18: Spec. Version                     : Version 3.0X
14:57:18: Extended Security Support         : Extended_Security_Not_Supported
14:57:18: Command Support                   : COMMAND_SUPPORT
14:57:18: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:57:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061236F0>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 1297 ] 
14:57:18: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:57:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CDE0>, <py_sfcl.CommandDataDefinition object at 0x06123E10>) , Command count = 1298 ] 
14:57:18: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:57:18: [ SetBusWidth(0x4) , Command count = 1299 ] 
14:57:18: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:57:18: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123E70>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1300 ] 
14:57:18: Protected Area Size 0x28000
14:57:18: Bus Width           2
14:57:18: Secure Mode         0
14:57:18: Speed  Class        4
14:57:18: Perf Move           0
14:57:18: Au Size             9
14:57:18: Erase Size          15
14:57:18: Erase Timeout       1
14:57:18: Erase offset        1
14:57:18: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:57:18: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:57:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:18: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1301 ] 
14:57:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:57:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:18: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:57:18: Host Frequency set to 100000 KHz
14:57:18: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:57:18: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:18: ####CSD Registe 2.0 Values####
14:57:18: CSD_STRUCTURE                                 :0x1
14:57:19: Reserv1                                       :0x0
14:57:19: Time Access 1 TAAC                            :0xe
14:57:19: Time Access 2 NSAC*100                        :0x0
14:57:19: Data Transfer Rate TRAN_SPEED                 :0xb
14:57:19: Card Command Classess CCC                     :0x5b5
14:57:19: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:19: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:19: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:19: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:19: DSR(driver stage register)  DSR_IMP           :0x0
14:57:19: Reserv2                                       :0x0
14:57:19: Device Size C_SIZE                            :0xedc8
14:57:19: Reserv3                                       :0x0
14:57:19: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:19: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:19: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:19: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:19: Reserv4                                       :0x0
14:57:19: Write Speed Factor R2W_FACTOR                 :0x2
14:57:19: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:19: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:19: FILE_FORMAT_GRP                               :0x0
14:57:19: COPY flag                                     :0x1
14:57:19: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:19: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:19: File_Format                                   :0x0
14:57:19: CRC                                           :0x0
14:57:19: ####CSD Registe Values####  

14:57:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CD20>, <py_sfcl.CommandDataDefinition object at 0x06123F60>) , Command count = 1302 ] 
14:57:19: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:57:19: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123EA0>, <py_sfcl.CommandDataDefinition object at 0x06123DB0>) , Command count = 1303 ] 
14:57:19: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:57:19: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:57:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E330>, 0x0, False) , Command count = 1304 ] 
14:57:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E330>, 0x0, True) , Command count = 1305 ] 
14:57:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1306 ] 
14:57:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:21: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:57:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1307 ] 
14:57:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EFC0>, <py_sfcl.CommandDataDefinition object at 0x060C1BD0>) , Command count = 1308 ] 
14:57:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E660>, <py_sfcl.CommandDataDefinition object at 0x061272D0>) , Command count = 1309 ] 
14:57:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:21: [ SetCardRCA(0x1, 0xD555) , Command count = 1310 ] 
14:57:21: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:21: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:21: [ SetBusWidth(0x4) , Command count = 1311 ] 
14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:21: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1312 ] 
14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:21: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:22: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1313 ] 
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:22: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:22: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1314 ] 
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:22: Host Frequency set to 25000 KHz

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:22: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:22: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1315 ] 
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123AB0>, 0x0, False) , Command count = 1316 ] 
14:57:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:22: SendOCR: 1107263488
14:57:22: ExcpectOCR: 3254747136
14:57:22: SendFirstOCR: 1107263488
14:57:22: SendNextOCR: 1107263488
14:57:22: SingleCommand: 0
14:57:22: SingleCommandTestType: 1
14:57:22: Identification: 1
14:57:22: ProtocolMode: 1
14:57:22: VerifyType: 0
14:57:22: SendCMD0: 1
14:57:22: SendCMD8: 1
14:57:22: SendCMD58: 1
14:57:22: SetPower: 1
14:57:22: HcsXpcS18r000: 16744448
14:57:22: HcsXpcS18r001: 33521664
14:57:22: HcsXpcS18r010: 285179904
14:57:22: HcsXpcS18r011: 301957120
14:57:22: HcsXpcS18r100: 1090486272
14:57:22: HcsXpcS18r101: 1107263488
14:57:22: HcsXpcS18r110: 1358921728
14:57:22: HcsXpcS18r111: 1375698944
14:57:22: ReadyCcs18a000: 16744448
14:57:22: ReadyCcs18a001: 33521664
14:57:22: ReadyCcs18a010: 1090486272
14:57:22: ReadyCcs18a011: 1107263488
14:57:22: ReadyCcs18a100: 2164228096
14:57:22: ReadyCcs18a101: 2181005312
14:57:22: ReadyCcs18a110: 3237969920
14:57:22: ReadyCcs18a111: 3254747136
14:57:22: Card Capacity is : 32.000000 GB
14:57:22: SendFirstOCR : 1358921728
14:57:22: SendOCR : 1358921728
14:57:22: SendOCR : 1358921728
14:57:22: ExpectOCR : 3237969920
14:57:22: globalSpeedMode : SDR50
14:57:22: globalPowerUp : powerCycle
14:57:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100090>, 0x0, False) , Command count = 1317 ] 
14:57:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100090>, 0x0, True) , Command count = 1318 ] 
14:57:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:24: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1319 ] 
14:57:24: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:24: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:24: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:24: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:24: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100150>, <py_sfcl.CommandDataDefinition object at 0x06123450>) , Command count = 1320 ] 
14:57:24: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123C00>, <py_sfcl.CommandDataDefinition object at 0x06127450>) , Command count = 1321 ] 
14:57:24: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:24: [ SetCardRCA(0x1, 0xD555) , Command count = 1322 ] 
14:57:24: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:24: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:24: ####CSD Registe 2.0 Values####
14:57:24: CSD_STRUCTURE                                 :0x1
14:57:24: Reserv1                                       :0x0
14:57:24: Time Access 1 TAAC                            :0xe
14:57:24: Time Access 2 NSAC*100                        :0x0
14:57:24: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:24: Card Command Classess CCC                     :0x5b5
14:57:24: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:24: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:24: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:24: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:24: DSR(driver stage register)  DSR_IMP           :0x0
14:57:24: Reserv2                                       :0x0
14:57:24: Device Size C_SIZE                            :0xedc8
14:57:24: Reserv3                                       :0x0
14:57:24: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:24: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:24: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:24: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:24: Reserv4                                       :0x0
14:57:24: Write Speed Factor R2W_FACTOR                 :0x2
14:57:24: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:24: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:24: FILE_FORMAT_GRP                               :0x0
14:57:24: COPY flag                                     :0x1
14:57:24: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:24: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:24: File_Format                                   :0x0
14:57:24: CRC                                           :0x0
14:57:24: ####CSD Registe Values####  

14:57:24: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:24: [ SetBusWidth(0x4) , Command count = 1323 ] 
14:57:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002A0>, 0x0, False) , Command count = 1324 ] 
14:57:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E630>, 0x0, False) , Command count = 1325 ] 
14:57:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:24: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1326 ] 
14:57:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:24: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1327 ] 
14:57:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:24: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1328 ] 
14:57:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:24: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1329 ] 
14:57:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:24: SendFirstOCR : 1358921728
14:57:24: SendOCR : 1358921728
14:57:24: SendOCR : 1358921728
14:57:24: ExpectOCR : 3237969920
14:57:24: globalSpeedMode : SDR50
14:57:24: globalPowerUp : powerCycle
14:57:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C270>, 0x0, False) , Command count = 1330 ] 
14:57:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C270>, 0x0, True) , Command count = 1331 ] 
14:57:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:26: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1332 ] 
14:57:27: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:27: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:27: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:27: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:27: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x06100210>) , Command count = 1333 ] 
14:57:27: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC60>, <py_sfcl.CommandDataDefinition object at 0x06127450>) , Command count = 1334 ] 
14:57:27: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:27: [ SetCardRCA(0x1, 0xD555) , Command count = 1335 ] 
14:57:27: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:27: ####CSD Registe 2.0 Values####
14:57:27: CSD_STRUCTURE                                 :0x1
14:57:27: Reserv1                                       :0x0
14:57:27: Time Access 1 TAAC                            :0xe
14:57:27: Time Access 2 NSAC*100                        :0x0
14:57:27: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:27: Card Command Classess CCC                     :0x5b5
14:57:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:27: DSR(driver stage register)  DSR_IMP           :0x0
14:57:27: Reserv2                                       :0x0
14:57:27: Device Size C_SIZE                            :0xedc8
14:57:27: Reserv3                                       :0x0
14:57:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:27: Reserv4                                       :0x0
14:57:27: Write Speed Factor R2W_FACTOR                 :0x2
14:57:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:27: FILE_FORMAT_GRP                               :0x0
14:57:27: COPY flag                                     :0x1
14:57:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:27: File_Format                                   :0x0
14:57:27: CRC                                           :0x0
14:57:27: ####CSD Registe Values####  

14:57:27: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:27: [ SetBusWidth(0x4) , Command count = 1336 ] 
14:57:27: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x061230C0>, 0x0, False) , Command count = 1337 ] 
14:57:27: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:27: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EE40>, 0x0, False) , Command count = 1338 ] 
14:57:27: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:27: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:27: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1339 ] 
14:57:27: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:27: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:27: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1340 ] 
14:57:27: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:27: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:27: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1341 ] 
14:57:27: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:27: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:27: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1342 ] 
14:57:27: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:27: [GO4_globalInitCard]### Switch to Specify Card Type
14:57:29: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:29: Host Frequency set to 25000 KHz
14:57:29: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:29: [GO18_globalSetVolt]### Set Host Voltage value.
14:57:29: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:57:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ECC0>, 0x0, True) , Command count = 1343 ] 
14:57:29: [GO18_globalSetVolt]### Host voltage value is set.
14:57:29: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:57:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E900>, 0x0, False) , Command count = 1344 ] 
14:57:29: [GO18_globalSetVolt]### Host voltage value is set.
14:57:29: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1345 ] 
14:57:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1346 ] 
14:57:29: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:29: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:29: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:29: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:29: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1347 ] 
14:57:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:29: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAE0>, <py_sfcl.CommandDataDefinition object at 0x06100540>) , Command count = 1348 ] 
14:57:29: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EDB0>, <py_sfcl.CommandDataDefinition object at 0x061005D0>) , Command count = 1349 ] 
14:57:29: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:29: [ SetCardRCA(0x1, 0xD555) , Command count = 1350 ] 
14:57:29: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:29: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:29: Host Frequency set to 25000 KHz
14:57:29: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:29: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:29: ####CSD Registe 2.0 Values####
14:57:29: CSD_STRUCTURE                                 :0x1
14:57:29: Reserv1                                       :0x0
14:57:29: Time Access 1 TAAC                            :0xe
14:57:29: Time Access 2 NSAC*100                        :0x0
14:57:29: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:29: Card Command Classess CCC                     :0x5b5
14:57:29: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:29: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:29: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:29: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:29: DSR(driver stage register)  DSR_IMP           :0x0
14:57:29: Reserv2                                       :0x0
14:57:29: Device Size C_SIZE                            :0xedc8
14:57:29: Reserv3                                       :0x0
14:57:29: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:29: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:29: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:29: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:29: Reserv4                                       :0x0
14:57:29: Write Speed Factor R2W_FACTOR                 :0x2
14:57:29: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:29: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:29: FILE_FORMAT_GRP                               :0x0
14:57:29: COPY flag                                     :0x1
14:57:29: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:29: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:29: File_Format                                   :0x0
14:57:29: CRC                                           :0x0
14:57:29: ####CSD Registe Values####  

14:57:29: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:57:29: [GetSCRRegisterEntry] Passed
14:57:29: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:57:29: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:57:29: Data_Status_After Erases          : 0
14:57:29: CPRM Security Support             : No Security
14:57:29: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:57:29: Spec. Version                     : Version 3.0X
14:57:29: Extended Security Support         : Extended_Security_Not_Supported
14:57:29: Command Support                   : COMMAND_SUPPORT
14:57:29: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:57:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7E0>, <py_sfcl.CommandDataDefinition object at 0x0610EC30>) , Command count = 1351 ] 
14:57:29: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:57:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x061110F0>) , Command count = 1352 ] 
14:57:29: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:57:29: [ SetBusWidth(0x4) , Command count = 1353 ] 
14:57:29: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:57:29: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610ECF0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1354 ] 
14:57:29: Protected Area Size 0x28000
14:57:29: Bus Width           2
14:57:29: Secure Mode         0
14:57:29: Speed  Class        4
14:57:29: Perf Move           0
14:57:29: Au Size             9
14:57:29: Erase Size          15
14:57:29: Erase Timeout       1
14:57:29: Erase offset        1
14:57:29: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:57:29: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:57:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:29: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1355 ] 
14:57:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:57:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:29: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:57:29: Host Frequency set to 100000 KHz
14:57:29: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:57:29: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:29: ####CSD Registe 2.0 Values####
14:57:29: CSD_STRUCTURE                                 :0x1
14:57:29: Reserv1                                       :0x0
14:57:29: Time Access 1 TAAC                            :0xe
14:57:29: Time Access 2 NSAC*100                        :0x0
14:57:29: Data Transfer Rate TRAN_SPEED                 :0xb
14:57:29: Card Command Classess CCC                     :0x5b5
14:57:29: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:29: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:30: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:30: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:30: DSR(driver stage register)  DSR_IMP           :0x0
14:57:30: Reserv2                                       :0x0
14:57:30: Device Size C_SIZE                            :0xedc8
14:57:30: Reserv3                                       :0x0
14:57:30: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:30: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:30: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:30: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:30: Reserv4                                       :0x0
14:57:30: Write Speed Factor R2W_FACTOR                 :0x2
14:57:30: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:30: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:30: FILE_FORMAT_GRP                               :0x0
14:57:30: COPY flag                                     :0x1
14:57:30: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:30: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:30: File_Format                                   :0x0
14:57:30: CRC                                           :0x0
14:57:30: ####CSD Registe Values####  

14:57:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 1356 ] 
14:57:30: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:57:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05257060>, <py_sfcl.CommandDataDefinition object at 0x061278A0>) , Command count = 1357 ] 
14:57:30: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:57:30: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:57:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A690>, 0x0, False) , Command count = 1358 ] 
14:57:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A690>, 0x0, True) , Command count = 1359 ] 
14:57:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1360 ] 
14:57:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:32: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:57:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1361 ] 
14:57:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A810>, <py_sfcl.CommandDataDefinition object at 0x06111690>) , Command count = 1362 ] 
14:57:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x06127570>) , Command count = 1363 ] 
14:57:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:32: [ SetCardRCA(0x1, 0xD555) , Command count = 1364 ] 
14:57:32: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:32: [ SetBusWidth(0x4) , Command count = 1365 ] 
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:32: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1366 ] 
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:32: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:32: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1367 ] 
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:32: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:32: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1368 ] 
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:33: Host Frequency set to 25000 KHz

14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:33: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:33: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1369 ] 
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, False) , Command count = 1370 ] 
14:57:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:33: SendOCR: 1107263488
14:57:33: ExcpectOCR: 3254747136
14:57:33: SendFirstOCR: 1107263488
14:57:33: SendNextOCR: 1107263488
14:57:33: SingleCommand: 0
14:57:33: SingleCommandTestType: 1
14:57:33: Identification: 1
14:57:33: ProtocolMode: 1
14:57:33: VerifyType: 0
14:57:33: SendCMD0: 1
14:57:33: SendCMD8: 1
14:57:33: SendCMD58: 1
14:57:33: SetPower: 1
14:57:33: HcsXpcS18r000: 16744448
14:57:33: HcsXpcS18r001: 33521664
14:57:33: HcsXpcS18r010: 285179904
14:57:33: HcsXpcS18r011: 301957120
14:57:33: HcsXpcS18r100: 1090486272
14:57:33: HcsXpcS18r101: 1107263488
14:57:33: HcsXpcS18r110: 1358921728
14:57:34: HcsXpcS18r111: 1375698944
14:57:34: ReadyCcs18a000: 16744448
14:57:34: ReadyCcs18a001: 33521664
14:57:34: ReadyCcs18a010: 1090486272
14:57:34: ReadyCcs18a011: 1107263488
14:57:34: ReadyCcs18a100: 2164228096
14:57:34: ReadyCcs18a101: 2181005312
14:57:34: ReadyCcs18a110: 3237969920
14:57:34: ReadyCcs18a111: 3254747136
14:57:34: Card Capacity is : 32.000000 GB
14:57:34: SendFirstOCR : 1358921728
14:57:34: SendOCR : 1358921728
14:57:34: SendOCR : 1358921728
14:57:34: ExpectOCR : 3237969920
14:57:34: globalSpeedMode : SDR50
14:57:34: globalPowerUp : powerCycle
14:57:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100480>, 0x0, False) , Command count = 1371 ] 
14:57:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100480>, 0x0, True) , Command count = 1372 ] 
14:57:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:36: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1373 ] 
14:57:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED80>, <py_sfcl.CommandDataDefinition object at 0x06111510>) , Command count = 1374 ] 
14:57:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1990>, <py_sfcl.CommandDataDefinition object at 0x06127570>) , Command count = 1375 ] 
14:57:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:36: [ SetCardRCA(0x1, 0xD555) , Command count = 1376 ] 
14:57:36: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:36: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:36: ####CSD Registe 2.0 Values####
14:57:36: CSD_STRUCTURE                                 :0x1
14:57:36: Reserv1                                       :0x0
14:57:36: Time Access 1 TAAC                            :0xe
14:57:36: Time Access 2 NSAC*100                        :0x0
14:57:36: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:36: Card Command Classess CCC                     :0x5b5
14:57:36: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:36: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:36: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:36: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:36: DSR(driver stage register)  DSR_IMP           :0x0
14:57:36: Reserv2                                       :0x0
14:57:36: Device Size C_SIZE                            :0xedc8
14:57:36: Reserv3                                       :0x0
14:57:36: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:36: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:36: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:36: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:36: Reserv4                                       :0x0
14:57:36: Write Speed Factor R2W_FACTOR                 :0x2
14:57:36: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:36: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:36: FILE_FORMAT_GRP                               :0x0
14:57:36: COPY flag                                     :0x1
14:57:36: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:36: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:36: File_Format                                   :0x0
14:57:36: CRC                                           :0x0
14:57:36: ####CSD Registe Values####  

14:57:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:36: [ SetBusWidth(0x4) , Command count = 1377 ] 
14:57:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x061000F0>, 0x0, False) , Command count = 1378 ] 
14:57:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119360>, 0x0, False) , Command count = 1379 ] 
14:57:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:36: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1380 ] 
14:57:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:36: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1381 ] 
14:57:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:36: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1382 ] 
14:57:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:36: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1383 ] 
14:57:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:36: SendFirstOCR : 1358921728
14:57:36: SendOCR : 1358921728
14:57:36: SendOCR : 1358921728
14:57:36: ExpectOCR : 3237969920
14:57:36: globalSpeedMode : SDR50
14:57:36: globalPowerUp : powerCycle
14:57:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111660>, 0x0, False) , Command count = 1384 ] 
14:57:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111660>, 0x0, True) , Command count = 1385 ] 
14:57:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:38: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1386 ] 
14:57:38: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:38: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:38: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:38: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:38: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EB10>, <py_sfcl.CommandDataDefinition object at 0x0610EDE0>) , Command count = 1387 ] 
14:57:38: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F30>, <py_sfcl.CommandDataDefinition object at 0x06111B70>) , Command count = 1388 ] 
14:57:38: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:38: [ SetCardRCA(0x1, 0xD555) , Command count = 1389 ] 
14:57:38: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:39: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:39: ####CSD Registe 2.0 Values####
14:57:39: CSD_STRUCTURE                                 :0x1
14:57:39: Reserv1                                       :0x0
14:57:39: Time Access 1 TAAC                            :0xe
14:57:39: Time Access 2 NSAC*100                        :0x0
14:57:39: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:39: Card Command Classess CCC                     :0x5b5
14:57:39: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:39: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:39: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:39: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:39: DSR(driver stage register)  DSR_IMP           :0x0
14:57:39: Reserv2                                       :0x0
14:57:39: Device Size C_SIZE                            :0xedc8
14:57:39: Reserv3                                       :0x0
14:57:39: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:39: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:39: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:39: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:39: Reserv4                                       :0x0
14:57:39: Write Speed Factor R2W_FACTOR                 :0x2
14:57:39: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:39: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:39: FILE_FORMAT_GRP                               :0x0
14:57:39: COPY flag                                     :0x1
14:57:39: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:39: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:39: File_Format                                   :0x0
14:57:39: CRC                                           :0x0
14:57:39: ####CSD Registe Values####  

14:57:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:39: [ SetBusWidth(0x4) , Command count = 1390 ] 
14:57:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111E40>, 0x0, False) , Command count = 1391 ] 
14:57:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E9C0>, 0x0, False) , Command count = 1392 ] 
14:57:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:39: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1393 ] 
14:57:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:39: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1394 ] 
14:57:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:39: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1395 ] 
14:57:39: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:39: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1396 ] 
14:57:39: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:39: [GO4_globalInitCard]### Switch to Specify Card Type
14:57:41: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:41: Host Frequency set to 25000 KHz
14:57:41: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:41: [GO18_globalSetVolt]### Set Host Voltage value.
14:57:41: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:57:41: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECF0>, 0x0, True) , Command count = 1397 ] 
14:57:41: [GO18_globalSetVolt]### Host voltage value is set.
14:57:41: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:57:41: [ SetVolt(<py_sfcl.SDVoltage object at 0x061004B0>, 0x0, False) , Command count = 1398 ] 
14:57:41: [GO18_globalSetVolt]### Host voltage value is set.
14:57:41: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1399 ] 
14:57:41: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1400 ] 
14:57:41: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:41: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:41: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:41: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:41: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:41: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1401 ] 
14:57:41: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:41: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:41: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111180>, <py_sfcl.CommandDataDefinition object at 0x06111210>) , Command count = 1402 ] 
14:57:41: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:41: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117B0>, <py_sfcl.CommandDataDefinition object at 0x06111D50>) , Command count = 1403 ] 
14:57:41: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:41: [ SetCardRCA(0x1, 0xD555) , Command count = 1404 ] 
14:57:41: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:41: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:41: Host Frequency set to 25000 KHz
14:57:41: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:41: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:41: ####CSD Registe 2.0 Values####
14:57:41: CSD_STRUCTURE                                 :0x1
14:57:41: Reserv1                                       :0x0
14:57:41: Time Access 1 TAAC                            :0xe
14:57:41: Time Access 2 NSAC*100                        :0x0
14:57:41: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:41: Card Command Classess CCC                     :0x5b5
14:57:41: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:41: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:41: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:41: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:41: DSR(driver stage register)  DSR_IMP           :0x0
14:57:41: Reserv2                                       :0x0
14:57:41: Device Size C_SIZE                            :0xedc8
14:57:41: Reserv3                                       :0x0
14:57:41: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:41: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:41: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:41: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:41: Reserv4                                       :0x0
14:57:41: Write Speed Factor R2W_FACTOR                 :0x2
14:57:41: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:41: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:41: FILE_FORMAT_GRP                               :0x0
14:57:41: COPY flag                                     :0x1
14:57:41: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:41: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:41: File_Format                                   :0x0
14:57:41: CRC                                           :0x0
14:57:41: ####CSD Registe Values####  

14:57:41: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:57:41: [GetSCRRegisterEntry] Passed
14:57:41: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:57:41: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:57:41: Data_Status_After Erases          : 0
14:57:41: CPRM Security Support             : No Security
14:57:41: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:57:41: Spec. Version                     : Version 3.0X
14:57:41: Extended Security Support         : Extended_Security_Not_Supported
14:57:41: Command Support                   : COMMAND_SUPPORT
14:57:41: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:57:41: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x061115D0>) , Command count = 1405 ] 
14:57:41: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:57:41: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x061191E0>) , Command count = 1406 ] 
14:57:41: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:57:41: [ SetBusWidth(0x4) , Command count = 1407 ] 
14:57:41: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:57:41: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111F60>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1408 ] 
14:57:41: Protected Area Size 0x28000
14:57:41: Bus Width           2
14:57:41: Secure Mode         0
14:57:41: Speed  Class        4
14:57:41: Perf Move           0
14:57:41: Au Size             9
14:57:41: Erase Size          15
14:57:41: Erase Timeout       1
14:57:41: Erase offset        1
14:57:41: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:57:41: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:57:41: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:41: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1409 ] 
14:57:41: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:57:41: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:41: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:57:41: Host Frequency set to 100000 KHz
14:57:41: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:57:41: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:41: ####CSD Registe 2.0 Values####
14:57:41: CSD_STRUCTURE                                 :0x1
14:57:41: Reserv1                                       :0x0
14:57:41: Time Access 1 TAAC                            :0xe
14:57:41: Time Access 2 NSAC*100                        :0x0
14:57:41: Data Transfer Rate TRAN_SPEED                 :0xb
14:57:41: Card Command Classess CCC                     :0x5b5
14:57:42: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:42: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:42: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:42: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:42: DSR(driver stage register)  DSR_IMP           :0x0
14:57:42: Reserv2                                       :0x0
14:57:42: Device Size C_SIZE                            :0xedc8
14:57:42: Reserv3                                       :0x0
14:57:42: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:42: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:42: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:42: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:42: Reserv4                                       :0x0
14:57:42: Write Speed Factor R2W_FACTOR                 :0x2
14:57:42: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:42: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:42: FILE_FORMAT_GRP                               :0x0
14:57:42: COPY flag                                     :0x1
14:57:42: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:42: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:42: File_Format                                   :0x0
14:57:42: CRC                                           :0x0
14:57:42: ####CSD Registe Values####  

14:57:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x06111810>) , Command count = 1410 ] 
14:57:42: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:57:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119330>, <py_sfcl.CommandDataDefinition object at 0x061119C0>) , Command count = 1411 ] 
14:57:42: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:57:42: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:57:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119780>, 0x0, False) , Command count = 1412 ] 
14:57:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119780>, 0x0, True) , Command count = 1413 ] 
14:57:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1414 ] 
14:57:44: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:44: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:57:44: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:44: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:44: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:44: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1415 ] 
14:57:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:44: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1750>, <py_sfcl.CommandDataDefinition object at 0x06119900>) , Command count = 1416 ] 
14:57:44: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAB0>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 1417 ] 
14:57:44: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:44: [ SetCardRCA(0x1, 0xD555) , Command count = 1418 ] 
14:57:44: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:44: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:44: [ SetBusWidth(0x4) , Command count = 1419 ] 
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:44: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1420 ] 
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:44: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:44: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1421 ] 
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:44: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:44: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1422 ] 
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:45: Host Frequency set to 25000 KHz

14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:45: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:45: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1423 ] 
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x061232D0>, 0x0, False) , Command count = 1424 ] 
14:57:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:45: SendOCR: 1107263488
14:57:45: ExcpectOCR: 3254747136
14:57:45: SendFirstOCR: 1107263488
14:57:45: SendNextOCR: 1107263488
14:57:45: SingleCommand: 0
14:57:45: SingleCommandTestType: 1
14:57:45: Identification: 1
14:57:45: ProtocolMode: 1
14:57:45: VerifyType: 0
14:57:45: SendCMD0: 1
14:57:45: SendCMD8: 1
14:57:45: SendCMD58: 1
14:57:45: SetPower: 1
14:57:45: HcsXpcS18r000: 16744448
14:57:45: HcsXpcS18r001: 33521664
14:57:45: HcsXpcS18r010: 285179904
14:57:45: HcsXpcS18r011: 301957120
14:57:45: HcsXpcS18r100: 1090486272
14:57:45: HcsXpcS18r101: 1107263488
14:57:45: HcsXpcS18r110: 1358921728
14:57:45: HcsXpcS18r111: 1375698944
14:57:45: ReadyCcs18a000: 16744448
14:57:45: ReadyCcs18a001: 33521664
14:57:45: ReadyCcs18a010: 1090486272
14:57:45: ReadyCcs18a011: 1107263488
14:57:45: ReadyCcs18a100: 2164228096
14:57:45: ReadyCcs18a101: 2181005312
14:57:45: ReadyCcs18a110: 3237969920
14:57:45: ReadyCcs18a111: 3254747136
14:57:45: Card Capacity is : 32.000000 GB
14:57:45: SendFirstOCR : 1358921728
14:57:45: SendOCR : 1358921728
14:57:45: SendOCR : 1358921728
14:57:45: ExpectOCR : 3237969920
14:57:45: globalSpeedMode : SDR50
14:57:45: globalPowerUp : powerCycle
14:57:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ED50>, 0x0, False) , Command count = 1425 ] 
14:57:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ED50>, 0x0, True) , Command count = 1426 ] 
14:57:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:47: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1427 ] 
14:57:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 1428 ] 
14:57:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061199C0>, <py_sfcl.CommandDataDefinition object at 0x06119990>) , Command count = 1429 ] 
14:57:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:48: [ SetCardRCA(0x1, 0xD555) , Command count = 1430 ] 
14:57:48: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:48: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:48: ####CSD Registe 2.0 Values####
14:57:48: CSD_STRUCTURE                                 :0x1
14:57:48: Reserv1                                       :0x0
14:57:48: Time Access 1 TAAC                            :0xe
14:57:48: Time Access 2 NSAC*100                        :0x0
14:57:48: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:48: Card Command Classess CCC                     :0x5b5
14:57:48: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:48: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:48: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:48: DSR(driver stage register)  DSR_IMP           :0x0
14:57:48: Reserv2                                       :0x0
14:57:48: Device Size C_SIZE                            :0xedc8
14:57:48: Reserv3                                       :0x0
14:57:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:48: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:48: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:48: Reserv4                                       :0x0
14:57:48: Write Speed Factor R2W_FACTOR                 :0x2
14:57:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:48: FILE_FORMAT_GRP                               :0x0
14:57:48: COPY flag                                     :0x1
14:57:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:48: File_Format                                   :0x0
14:57:48: CRC                                           :0x0
14:57:48: ####CSD Registe Values####  

14:57:48: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:48: [ SetBusWidth(0x4) , Command count = 1431 ] 
14:57:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119420>, 0x0, False) , Command count = 1432 ] 
14:57:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119810>, 0x0, False) , Command count = 1433 ] 
14:57:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:48: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1434 ] 
14:57:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:48: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1435 ] 
14:57:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:48: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1436 ] 
14:57:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:48: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1437 ] 
14:57:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:48: SendFirstOCR : 1358921728
14:57:48: SendOCR : 1358921728
14:57:48: SendOCR : 1358921728
14:57:48: ExpectOCR : 3237969920
14:57:48: globalSpeedMode : SDR50
14:57:48: globalPowerUp : powerCycle
14:57:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, False) , Command count = 1438 ] 
14:57:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061195A0>, 0x0, True) , Command count = 1439 ] 
14:57:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:50: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1440 ] 
14:57:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x06119ED0>) , Command count = 1441 ] 
14:57:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119570>, <py_sfcl.CommandDataDefinition object at 0x06119EA0>) , Command count = 1442 ] 
14:57:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:50: [ SetCardRCA(0x1, 0xD555) , Command count = 1443 ] 
14:57:50: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:50: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:50: ####CSD Registe 2.0 Values####
14:57:50: CSD_STRUCTURE                                 :0x1
14:57:50: Reserv1                                       :0x0
14:57:50: Time Access 1 TAAC                            :0xe
14:57:50: Time Access 2 NSAC*100                        :0x0
14:57:50: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:50: Card Command Classess CCC                     :0x5b5
14:57:50: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:50: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:50: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:50: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:50: DSR(driver stage register)  DSR_IMP           :0x0
14:57:50: Reserv2                                       :0x0
14:57:50: Device Size C_SIZE                            :0xedc8
14:57:50: Reserv3                                       :0x0
14:57:50: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:50: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:50: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:50: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:50: Reserv4                                       :0x0
14:57:50: Write Speed Factor R2W_FACTOR                 :0x2
14:57:50: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:50: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:50: FILE_FORMAT_GRP                               :0x0
14:57:50: COPY flag                                     :0x1
14:57:50: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:50: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:50: File_Format                                   :0x0
14:57:50: CRC                                           :0x0
14:57:50: ####CSD Registe Values####  

14:57:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:50: [ SetBusWidth(0x4) , Command count = 1444 ] 
14:57:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119CC0>, 0x0, False) , Command count = 1445 ] 
14:57:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E390>, 0x0, False) , Command count = 1446 ] 
14:57:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:50: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1447 ] 
14:57:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:50: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1448 ] 
14:57:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:50: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1449 ] 
14:57:50: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:50: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1450 ] 
14:57:50: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:50: [GO4_globalInitCard]### Switch to Specify Card Type
14:57:52: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:52: Host Frequency set to 25000 KHz
14:57:52: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:52: [GO18_globalSetVolt]### Set Host Voltage value.
14:57:52: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:57:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF90>, 0x0, True) , Command count = 1451 ] 
14:57:53: [GO18_globalSetVolt]### Host voltage value is set.
14:57:53: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:57:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E150>, 0x0, False) , Command count = 1452 ] 
14:57:53: [GO18_globalSetVolt]### Host voltage value is set.
14:57:53: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1453 ] 
14:57:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1454 ] 
14:57:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1455 ] 
14:57:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E10>, <py_sfcl.CommandDataDefinition object at 0x06119A20>) , Command count = 1456 ] 
14:57:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E450>, <py_sfcl.CommandDataDefinition object at 0x06119D20>) , Command count = 1457 ] 
14:57:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:53: [ SetCardRCA(0x1, 0xD555) , Command count = 1458 ] 
14:57:53: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:53: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:57:53: Host Frequency set to 25000 KHz
14:57:53: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:57:53: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:53: ####CSD Registe 2.0 Values####
14:57:53: CSD_STRUCTURE                                 :0x1
14:57:53: Reserv1                                       :0x0
14:57:53: Time Access 1 TAAC                            :0xe
14:57:53: Time Access 2 NSAC*100                        :0x0
14:57:53: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:53: Card Command Classess CCC                     :0x5b5
14:57:53: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:53: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:53: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:53: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:53: DSR(driver stage register)  DSR_IMP           :0x0
14:57:53: Reserv2                                       :0x0
14:57:53: Device Size C_SIZE                            :0xedc8
14:57:53: Reserv3                                       :0x0
14:57:53: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:53: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:53: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:53: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:53: Reserv4                                       :0x0
14:57:53: Write Speed Factor R2W_FACTOR                 :0x2
14:57:53: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:53: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:53: FILE_FORMAT_GRP                               :0x0
14:57:53: COPY flag                                     :0x1
14:57:53: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:53: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:53: File_Format                                   :0x0
14:57:53: CRC                                           :0x0
14:57:53: ####CSD Registe Values####  

14:57:53: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:57:53: [GetSCRRegisterEntry] Passed
14:57:53: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:57:53: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:57:53: Data_Status_After Erases          : 0
14:57:53: CPRM Security Support             : No Security
14:57:53: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:57:53: Spec. Version                     : Version 3.0X
14:57:53: Extended Security Support         : Extended_Security_Not_Supported
14:57:53: Command Support                   : COMMAND_SUPPORT
14:57:53: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F90>, <py_sfcl.CommandDataDefinition object at 0x0611E300>) , Command count = 1459 ] 
14:57:53: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119480>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 1460 ] 
14:57:53: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:57:53: [ SetBusWidth(0x4) , Command count = 1461 ] 
14:57:53: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:57:53: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611E810>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1462 ] 
14:57:53: Protected Area Size 0x28000
14:57:53: Bus Width           2
14:57:53: Secure Mode         0
14:57:53: Speed  Class        4
14:57:53: Perf Move           0
14:57:53: Au Size             9
14:57:53: Erase Size          15
14:57:53: Erase Timeout       1
14:57:53: Erase offset        1
14:57:53: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:57:53: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:57:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:53: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1463 ] 
14:57:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:57:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:53: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:57:53: Host Frequency set to 100000 KHz
14:57:53: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:57:53: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:53: ####CSD Registe 2.0 Values####
14:57:53: CSD_STRUCTURE                                 :0x1
14:57:53: Reserv1                                       :0x0
14:57:53: Time Access 1 TAAC                            :0xe
14:57:53: Time Access 2 NSAC*100                        :0x0
14:57:53: Data Transfer Rate TRAN_SPEED                 :0xb
14:57:53: Card Command Classess CCC                     :0x5b5
14:57:53: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:53: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:53: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:53: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:53: DSR(driver stage register)  DSR_IMP           :0x0
14:57:53: Reserv2                                       :0x0
14:57:53: Device Size C_SIZE                            :0xedc8
14:57:53: Reserv3                                       :0x0
14:57:53: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:53: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:53: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:53: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:53: Reserv4                                       :0x0
14:57:53: Write Speed Factor R2W_FACTOR                 :0x2
14:57:53: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:53: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:53: FILE_FORMAT_GRP                               :0x0
14:57:53: COPY flag                                     :0x1
14:57:53: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:53: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:53: File_Format                                   :0x0
14:57:53: CRC                                           :0x0
14:57:53: ####CSD Registe Values####  

14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191B0>, <py_sfcl.CommandDataDefinition object at 0x06119F60>) , Command count = 1464 ] 
14:57:53: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:57:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197B0>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 1465 ] 
14:57:53: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:57:53: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:57:55: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:55: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E0C0>, 0x0, False) , Command count = 1466 ] 
14:57:55: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:55: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:55: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E0C0>, 0x0, True) , Command count = 1467 ] 
14:57:55: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:55: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:57:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1468 ] 
14:57:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:57:56: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:57:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:57:56: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1469 ] 
14:57:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:57:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DB0>, <py_sfcl.CommandDataDefinition object at 0x0611E4B0>) , Command count = 1470 ] 
14:57:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x06127600>) , Command count = 1471 ] 
14:57:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:57:56: [ SetCardRCA(0x1, 0xD555) , Command count = 1472 ] 
14:57:56: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:56: [ SetBusWidth(0x4) , Command count = 1473 ] 
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:56: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1474 ] 
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:56: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:56: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1475 ] 
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:56: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:56: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1476 ] 
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:56: Host Frequency set to 25000 KHz

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:56: [32799, 49153, 32783, 32783, 32769, 32769]
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:57:56: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1477 ] 
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:57:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:57:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:57:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119C00>, 0x0, False) , Command count = 1478 ] 
14:57:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:57: SendOCR: 1107263488
14:57:57: ExcpectOCR: 3254747136
14:57:57: SendFirstOCR: 1107263488
14:57:57: SendNextOCR: 1107263488
14:57:57: SingleCommand: 0
14:57:57: SingleCommandTestType: 1
14:57:57: Identification: 1
14:57:57: ProtocolMode: 1
14:57:57: VerifyType: 0
14:57:57: SendCMD0: 1
14:57:57: SendCMD8: 1
14:57:57: SendCMD58: 1
14:57:57: SetPower: 1
14:57:57: HcsXpcS18r000: 16744448
14:57:57: HcsXpcS18r001: 33521664
14:57:57: HcsXpcS18r010: 285179904
14:57:57: HcsXpcS18r011: 301957120
14:57:57: HcsXpcS18r100: 1090486272
14:57:57: HcsXpcS18r101: 1107263488
14:57:57: HcsXpcS18r110: 1358921728
14:57:57: HcsXpcS18r111: 1375698944
14:57:57: ReadyCcs18a000: 16744448
14:57:57: ReadyCcs18a001: 33521664
14:57:57: ReadyCcs18a010: 1090486272
14:57:57: ReadyCcs18a011: 1107263488
14:57:57: ReadyCcs18a100: 2164228096
14:57:57: ReadyCcs18a101: 2181005312
14:57:57: ReadyCcs18a110: 3237969920
14:57:57: ReadyCcs18a111: 3254747136
14:57:57: Card Capacity is : 32.000000 GB
14:57:57: SendFirstOCR : 1358921728
14:57:57: SendOCR : 1358921728
14:57:57: SendOCR : 1358921728
14:57:57: ExpectOCR : 3237969920
14:57:57: globalSpeedMode : SDR50
14:57:57: globalPowerUp : powerCycle
14:57:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E70>, 0x0, False) , Command count = 1479 ] 
14:57:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:57:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E70>, 0x0, True) , Command count = 1480 ] 
14:57:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:59: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:57:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1481 ] 
14:57:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:57:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:57:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:57:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:57:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:57:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x0611E900>) , Command count = 1482 ] 
14:57:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:57:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119270>, <py_sfcl.CommandDataDefinition object at 0x0611E930>) , Command count = 1483 ] 
14:57:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:57:59: [ SetCardRCA(0x1, 0xD555) , Command count = 1484 ] 
14:57:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:57:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:57:59: ####CSD Registe 2.0 Values####
14:57:59: CSD_STRUCTURE                                 :0x1
14:57:59: Reserv1                                       :0x0
14:57:59: Time Access 1 TAAC                            :0xe
14:57:59: Time Access 2 NSAC*100                        :0x0
14:57:59: Data Transfer Rate TRAN_SPEED                 :0x32
14:57:59: Card Command Classess CCC                     :0x5b5
14:57:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:57:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:57:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:57:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:57:59: DSR(driver stage register)  DSR_IMP           :0x0
14:57:59: Reserv2                                       :0x0
14:57:59: Device Size C_SIZE                            :0xedc8
14:57:59: Reserv3                                       :0x0
14:57:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:57:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:57:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:57:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:57:59: Reserv4                                       :0x0
14:57:59: Write Speed Factor R2W_FACTOR                 :0x2
14:57:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:57:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:57:59: FILE_FORMAT_GRP                               :0x0
14:57:59: COPY flag                                     :0x1
14:57:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:57:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:57:59: File_Format                                   :0x0
14:57:59: CRC                                           :0x0
14:57:59: ####CSD Registe Values####  

14:57:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:57:59: [ SetBusWidth(0x4) , Command count = 1485 ] 
14:57:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, 0x0, False) , Command count = 1486 ] 
14:57:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:57:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECC0>, 0x0, False) , Command count = 1487 ] 
14:57:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:57:59: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:59: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1488 ] 
14:57:59: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:59: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:59: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1489 ] 
14:57:59: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:59: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:59: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1490 ] 
14:57:59: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:59: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:57:59: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1491 ] 
14:57:59: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:57:59: SendFirstOCR : 1358921728
14:57:59: SendOCR : 1358921728
14:57:59: SendOCR : 1358921728
14:57:59: ExpectOCR : 3237969920
14:57:59: globalSpeedMode : SDR50
14:57:59: globalPowerUp : powerCycle
14:58:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119F90>, 0x0, False) , Command count = 1492 ] 
14:58:01: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119F90>, 0x0, True) , Command count = 1493 ] 
14:58:01: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:01: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1494 ] 
14:58:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123150>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 1495 ] 
14:58:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E4E0>, <py_sfcl.CommandDataDefinition object at 0x0611EF00>) , Command count = 1496 ] 
14:58:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:02: [ SetCardRCA(0x1, 0xD555) , Command count = 1497 ] 
14:58:02: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:02: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:02: ####CSD Registe 2.0 Values####
14:58:02: CSD_STRUCTURE                                 :0x1
14:58:02: Reserv1                                       :0x0
14:58:02: Time Access 1 TAAC                            :0xe
14:58:02: Time Access 2 NSAC*100                        :0x0
14:58:02: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:02: Card Command Classess CCC                     :0x5b5
14:58:02: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:02: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:02: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:02: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:02: DSR(driver stage register)  DSR_IMP           :0x0
14:58:02: Reserv2                                       :0x0
14:58:02: Device Size C_SIZE                            :0xedc8
14:58:02: Reserv3                                       :0x0
14:58:02: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:02: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:02: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:02: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:02: Reserv4                                       :0x0
14:58:02: Write Speed Factor R2W_FACTOR                 :0x2
14:58:02: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:02: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:02: FILE_FORMAT_GRP                               :0x0
14:58:02: COPY flag                                     :0x1
14:58:02: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:02: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:02: File_Format                                   :0x0
14:58:02: CRC                                           :0x0
14:58:02: ####CSD Registe Values####  

14:58:02: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:02: [ SetBusWidth(0x4) , Command count = 1498 ] 
14:58:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EA80>, 0x0, False) , Command count = 1499 ] 
14:58:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x061231E0>, 0x0, False) , Command count = 1500 ] 
14:58:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:02: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1501 ] 
14:58:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:02: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1502 ] 
14:58:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:02: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1503 ] 
14:58:02: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:02: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1504 ] 
14:58:02: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:02: [GO4_globalInitCard]### Switch to Specify Card Type
14:58:04: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:04: Host Frequency set to 25000 KHz
14:58:04: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:04: [GO18_globalSetVolt]### Set Host Voltage value.
14:58:04: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:58:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x061236C0>, 0x0, True) , Command count = 1505 ] 
14:58:04: [GO18_globalSetVolt]### Host voltage value is set.
14:58:04: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:58:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119CF0>, 0x0, False) , Command count = 1506 ] 
14:58:04: [GO18_globalSetVolt]### Host voltage value is set.
14:58:04: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1507 ] 
14:58:04: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1508 ] 
14:58:04: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:04: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:04: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:04: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:04: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1509 ] 
14:58:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:04: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C00>, <py_sfcl.CommandDataDefinition object at 0x06127AE0>) , Command count = 1510 ] 
14:58:04: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123600>, <py_sfcl.CommandDataDefinition object at 0x061277E0>) , Command count = 1511 ] 
14:58:04: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:04: [ SetCardRCA(0x1, 0xD555) , Command count = 1512 ] 
14:58:04: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:04: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:04: Host Frequency set to 25000 KHz
14:58:04: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:04: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:04: ####CSD Registe 2.0 Values####
14:58:04: CSD_STRUCTURE                                 :0x1
14:58:04: Reserv1                                       :0x0
14:58:04: Time Access 1 TAAC                            :0xe
14:58:04: Time Access 2 NSAC*100                        :0x0
14:58:04: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:04: Card Command Classess CCC                     :0x5b5
14:58:04: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:04: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:04: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:04: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:04: DSR(driver stage register)  DSR_IMP           :0x0
14:58:04: Reserv2                                       :0x0
14:58:04: Device Size C_SIZE                            :0xedc8
14:58:04: Reserv3                                       :0x0
14:58:04: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:04: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:04: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:04: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:04: Reserv4                                       :0x0
14:58:04: Write Speed Factor R2W_FACTOR                 :0x2
14:58:04: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:04: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:04: FILE_FORMAT_GRP                               :0x0
14:58:04: COPY flag                                     :0x1
14:58:04: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:04: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:04: File_Format                                   :0x0
14:58:04: CRC                                           :0x0
14:58:04: ####CSD Registe Values####  

14:58:04: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:58:04: [GetSCRRegisterEntry] Passed
14:58:04: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:58:04: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:58:04: Data_Status_After Erases          : 0
14:58:04: CPRM Security Support             : No Security
14:58:04: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:58:04: Spec. Version                     : Version 3.0X
14:58:04: Extended Security Support         : Extended_Security_Not_Supported
14:58:04: Command Support                   : COMMAND_SUPPORT
14:58:04: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233F0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 1513 ] 
14:58:04: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x052571B0>, <py_sfcl.CommandDataDefinition object at 0x06123690>) , Command count = 1514 ] 
14:58:04: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:58:04: [ SetBusWidth(0x4) , Command count = 1515 ] 
14:58:04: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:58:04: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061237E0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1516 ] 
14:58:04: Protected Area Size 0x28000
14:58:04: Bus Width           2
14:58:04: Secure Mode         0
14:58:04: Speed  Class        4
14:58:04: Perf Move           0
14:58:04: Au Size             9
14:58:04: Erase Size          15
14:58:04: Erase Timeout       1
14:58:04: Erase offset        1
14:58:04: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:58:04: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:58:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:04: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1517 ] 
14:58:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:58:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:04: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:58:04: Host Frequency set to 100000 KHz
14:58:04: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:58:04: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:04: ####CSD Registe 2.0 Values####
14:58:04: CSD_STRUCTURE                                 :0x1
14:58:04: Reserv1                                       :0x0
14:58:04: Time Access 1 TAAC                            :0xe
14:58:04: Time Access 2 NSAC*100                        :0x0
14:58:04: Data Transfer Rate TRAN_SPEED                 :0xb
14:58:04: Card Command Classess CCC                     :0x5b5
14:58:04: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:04: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:04: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:04: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:04: DSR(driver stage register)  DSR_IMP           :0x0
14:58:04: Reserv2                                       :0x0
14:58:04: Device Size C_SIZE                            :0xedc8
14:58:04: Reserv3                                       :0x0
14:58:04: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:04: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:04: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:04: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:04: Reserv4                                       :0x0
14:58:04: Write Speed Factor R2W_FACTOR                 :0x2
14:58:04: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:04: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:04: FILE_FORMAT_GRP                               :0x0
14:58:04: COPY flag                                     :0x1
14:58:04: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:04: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:04: File_Format                                   :0x0
14:58:04: CRC                                           :0x0
14:58:04: ####CSD Registe Values####  

14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F00>, <py_sfcl.CommandDataDefinition object at 0x06123060>) , Command count = 1518 ] 
14:58:04: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:58:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123BD0>, <py_sfcl.CommandDataDefinition object at 0x06123BA0>) , Command count = 1519 ] 
14:58:04: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:58:04: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:58:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127900>, 0x0, False) , Command count = 1520 ] 
14:58:06: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127900>, 0x0, True) , Command count = 1521 ] 
14:58:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1522 ] 
14:58:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:07: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:58:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1523 ] 
14:58:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194B0>, <py_sfcl.CommandDataDefinition object at 0x06123B70>) , Command count = 1524 ] 
14:58:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED80>, <py_sfcl.CommandDataDefinition object at 0x06127180>) , Command count = 1525 ] 
14:58:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:07: [ SetCardRCA(0x1, 0xD555) , Command count = 1526 ] 
14:58:07: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:07: [ SetBusWidth(0x4) , Command count = 1527 ] 
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:07: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1528 ] 
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:07: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:07: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1529 ] 
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:07: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:07: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1530 ] 
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:07: Host Frequency set to 25000 KHz

14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:08: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:08: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1531 ] 
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:08: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:08: [ SetVolt(<py_sfcl.SDVoltage object at 0x061233C0>, 0x0, False) , Command count = 1532 ] 
14:58:08: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:08: SendOCR: 1107263488
14:58:08: ExcpectOCR: 3254747136
14:58:08: SendFirstOCR: 1107263488
14:58:08: SendNextOCR: 1107263488
14:58:08: SingleCommand: 0
14:58:08: SingleCommandTestType: 1
14:58:08: Identification: 1
14:58:08: ProtocolMode: 1
14:58:08: VerifyType: 0
14:58:08: SendCMD0: 1
14:58:08: SendCMD8: 1
14:58:08: SendCMD58: 1
14:58:08: SetPower: 1
14:58:08: HcsXpcS18r000: 16744448
14:58:08: HcsXpcS18r001: 33521664
14:58:08: HcsXpcS18r010: 285179904
14:58:08: HcsXpcS18r011: 301957120
14:58:08: HcsXpcS18r100: 1090486272
14:58:08: HcsXpcS18r101: 1107263488
14:58:08: HcsXpcS18r110: 1358921728
14:58:08: HcsXpcS18r111: 1375698944
14:58:08: ReadyCcs18a000: 16744448
14:58:08: ReadyCcs18a001: 33521664
14:58:08: ReadyCcs18a010: 1090486272
14:58:08: ReadyCcs18a011: 1107263488
14:58:08: ReadyCcs18a100: 2164228096
14:58:08: ReadyCcs18a101: 2181005312
14:58:08: ReadyCcs18a110: 3237969920
14:58:08: ReadyCcs18a111: 3254747136
14:58:08: Card Capacity is : 32.000000 GB
14:58:08: SendFirstOCR : 1358921728
14:58:08: SendOCR : 1358921728
14:58:08: SendOCR : 1358921728
14:58:08: ExpectOCR : 3237969920
14:58:08: globalSpeedMode : SDR50
14:58:08: globalPowerUp : powerCycle
14:58:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E480>, 0x0, False) , Command count = 1533 ] 
14:58:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E480>, 0x0, True) , Command count = 1534 ] 
14:58:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:10: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1535 ] 
14:58:10: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:10: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:10: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:10: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:10: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05267E70>, <py_sfcl.CommandDataDefinition object at 0x061234E0>) , Command count = 1536 ] 
14:58:10: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x06127F90>) , Command count = 1537 ] 
14:58:10: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:10: [ SetCardRCA(0x1, 0xD555) , Command count = 1538 ] 
14:58:10: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:10: ####CSD Registe 2.0 Values####
14:58:10: CSD_STRUCTURE                                 :0x1
14:58:10: Reserv1                                       :0x0
14:58:10: Time Access 1 TAAC                            :0xe
14:58:10: Time Access 2 NSAC*100                        :0x0
14:58:10: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:10: Card Command Classess CCC                     :0x5b5
14:58:10: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:10: DSR(driver stage register)  DSR_IMP           :0x0
14:58:10: Reserv2                                       :0x0
14:58:10: Device Size C_SIZE                            :0xedc8
14:58:10: Reserv3                                       :0x0
14:58:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:10: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:10: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:10: Reserv4                                       :0x0
14:58:10: Write Speed Factor R2W_FACTOR                 :0x2
14:58:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:10: FILE_FORMAT_GRP                               :0x0
14:58:10: COPY flag                                     :0x1
14:58:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:10: File_Format                                   :0x0
14:58:10: CRC                                           :0x0
14:58:10: ####CSD Registe Values####  

14:58:10: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:10: [ SetBusWidth(0x4) , Command count = 1539 ] 
14:58:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123AE0>, 0x0, False) , Command count = 1540 ] 
14:58:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:11: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF30>, 0x0, False) , Command count = 1541 ] 
14:58:11: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:11: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:11: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1542 ] 
14:58:11: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:11: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:11: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1543 ] 
14:58:11: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:11: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:11: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1544 ] 
14:58:11: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:11: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:11: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1545 ] 
14:58:11: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:11: SendFirstOCR : 1358921728
14:58:11: SendOCR : 1358921728
14:58:11: SendOCR : 1358921728
14:58:11: ExpectOCR : 3237969920
14:58:11: globalSpeedMode : SDR50
14:58:11: globalPowerUp : powerCycle
14:58:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x061230F0>, 0x0, False) , Command count = 1546 ] 
14:58:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x061230F0>, 0x0, True) , Command count = 1547 ] 
14:58:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:13: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1548 ] 
14:58:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:13: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061236F0>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 1549 ] 
14:58:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A300>, <py_sfcl.CommandDataDefinition object at 0x06127690>) , Command count = 1550 ] 
14:58:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:13: [ SetCardRCA(0x1, 0xD555) , Command count = 1551 ] 
14:58:13: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:13: ####CSD Registe 2.0 Values####
14:58:13: CSD_STRUCTURE                                 :0x1
14:58:13: Reserv1                                       :0x0
14:58:13: Time Access 1 TAAC                            :0xe
14:58:13: Time Access 2 NSAC*100                        :0x0
14:58:13: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:13: Card Command Classess CCC                     :0x5b5
14:58:13: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:13: DSR(driver stage register)  DSR_IMP           :0x0
14:58:13: Reserv2                                       :0x0
14:58:13: Device Size C_SIZE                            :0xedc8
14:58:13: Reserv3                                       :0x0
14:58:13: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:13: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:13: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:13: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:13: Reserv4                                       :0x0
14:58:13: Write Speed Factor R2W_FACTOR                 :0x2
14:58:13: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:13: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:13: FILE_FORMAT_GRP                               :0x0
14:58:13: COPY flag                                     :0x1
14:58:13: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:13: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:13: File_Format                                   :0x0
14:58:13: CRC                                           :0x0
14:58:13: ####CSD Registe Values####  

14:58:13: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:13: [ SetBusWidth(0x4) , Command count = 1552 ] 
14:58:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CDE0>, 0x0, False) , Command count = 1553 ] 
14:58:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:13: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:13: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123F00>, 0x0, False) , Command count = 1554 ] 
14:58:13: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:13: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1555 ] 
14:58:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:13: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1556 ] 
14:58:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:13: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1557 ] 
14:58:13: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:13: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1558 ] 
14:58:13: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:13: [GO4_globalInitCard]### Switch to Specify Card Type
14:58:15: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:15: Host Frequency set to 25000 KHz
14:58:15: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:15: [GO18_globalSetVolt]### Set Host Voltage value.
14:58:15: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:58:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123EA0>, 0x0, True) , Command count = 1559 ] 
14:58:15: [GO18_globalSetVolt]### Host voltage value is set.
14:58:15: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:58:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EFC0>, 0x0, False) , Command count = 1560 ] 
14:58:15: [GO18_globalSetVolt]### Host voltage value is set.
14:58:15: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1561 ] 
14:58:15: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1562 ] 
14:58:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:15: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1563 ] 
14:58:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:15: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C30>, <py_sfcl.CommandDataDefinition object at 0x06127420>) , Command count = 1564 ] 
14:58:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 1565 ] 
14:58:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:15: [ SetCardRCA(0x1, 0xD555) , Command count = 1566 ] 
14:58:16: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:16: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:16: Host Frequency set to 25000 KHz
14:58:16: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:16: ####CSD Registe 2.0 Values####
14:58:16: CSD_STRUCTURE                                 :0x1
14:58:16: Reserv1                                       :0x0
14:58:16: Time Access 1 TAAC                            :0xe
14:58:16: Time Access 2 NSAC*100                        :0x0
14:58:16: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:16: Card Command Classess CCC                     :0x5b5
14:58:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:16: DSR(driver stage register)  DSR_IMP           :0x0
14:58:16: Reserv2                                       :0x0
14:58:16: Device Size C_SIZE                            :0xedc8
14:58:16: Reserv3                                       :0x0
14:58:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:16: Reserv4                                       :0x0
14:58:16: Write Speed Factor R2W_FACTOR                 :0x2
14:58:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:16: FILE_FORMAT_GRP                               :0x0
14:58:16: COPY flag                                     :0x1
14:58:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:16: File_Format                                   :0x0
14:58:16: CRC                                           :0x0
14:58:16: ####CSD Registe Values####  

14:58:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:58:16: [GetSCRRegisterEntry] Passed
14:58:16: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:58:16: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:58:16: Data_Status_After Erases          : 0
14:58:16: CPRM Security Support             : No Security
14:58:16: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:58:16: Spec. Version                     : Version 3.0X
14:58:16: Extended Security Support         : Extended_Security_Not_Supported
14:58:16: Command Support                   : COMMAND_SUPPORT
14:58:16: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:58:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E330>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 1567 ] 
14:58:16: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:58:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x06123AB0>) , Command count = 1568 ] 
14:58:16: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:58:16: [ SetBusWidth(0x4) , Command count = 1569 ] 
14:58:16: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:58:16: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x060C1540>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1570 ] 
14:58:16: Protected Area Size 0x28000
14:58:16: Bus Width           2
14:58:16: Secure Mode         0
14:58:16: Speed  Class        4
14:58:16: Perf Move           0
14:58:16: Au Size             9
14:58:16: Erase Size          15
14:58:16: Erase Timeout       1
14:58:16: Erase offset        1
14:58:16: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:58:16: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:58:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:16: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1571 ] 
14:58:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:58:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:16: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:58:16: Host Frequency set to 100000 KHz
14:58:16: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:58:16: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:16: ####CSD Registe 2.0 Values####
14:58:16: CSD_STRUCTURE                                 :0x1
14:58:16: Reserv1                                       :0x0
14:58:16: Time Access 1 TAAC                            :0xe
14:58:16: Time Access 2 NSAC*100                        :0x0
14:58:16: Data Transfer Rate TRAN_SPEED                 :0xb
14:58:16: Card Command Classess CCC                     :0x5b5
14:58:16: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:16: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:16: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:16: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:16: DSR(driver stage register)  DSR_IMP           :0x0
14:58:16: Reserv2                                       :0x0
14:58:16: Device Size C_SIZE                            :0xedc8
14:58:16: Reserv3                                       :0x0
14:58:16: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:16: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:16: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:16: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:16: Reserv4                                       :0x0
14:58:16: Write Speed Factor R2W_FACTOR                 :0x2
14:58:16: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:16: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:16: FILE_FORMAT_GRP                               :0x0
14:58:16: COPY flag                                     :0x1
14:58:16: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:16: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:16: File_Format                                   :0x0
14:58:16: CRC                                           :0x0
14:58:16: ####CSD Registe Values####  

14:58:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100150>, <py_sfcl.CommandDataDefinition object at 0x06123450>) , Command count = 1572 ] 
14:58:16: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:58:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100180>, <py_sfcl.CommandDataDefinition object at 0x06123FC0>) , Command count = 1573 ] 
14:58:16: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:58:16: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:58:18: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119390>, 0x0, False) , Command count = 1574 ] 
14:58:18: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:18: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119390>, 0x0, True) , Command count = 1575 ] 
14:58:18: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1576 ] 
14:58:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:58:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1577 ] 
14:58:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CF90>, <py_sfcl.CommandDataDefinition object at 0x061274B0>) , Command count = 1578 ] 
14:58:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A030>, <py_sfcl.CommandDataDefinition object at 0x06127630>) , Command count = 1579 ] 
14:58:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:18: [ SetCardRCA(0x1, 0xD555) , Command count = 1580 ] 
14:58:18: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:18: [ SetBusWidth(0x4) , Command count = 1581 ] 
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1582 ] 
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:18: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1583 ] 
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:18: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1584 ] 
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:19: Host Frequency set to 25000 KHz

14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:19: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:19: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1585 ] 
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285510>, 0x0, False) , Command count = 1586 ] 
14:58:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:19: SendOCR: 1107263488
14:58:19: ExcpectOCR: 3254747136
14:58:19: SendFirstOCR: 1107263488
14:58:19: SendNextOCR: 1107263488
14:58:19: SingleCommand: 0
14:58:19: SingleCommandTestType: 1
14:58:19: Identification: 1
14:58:19: ProtocolMode: 1
14:58:19: VerifyType: 0
14:58:19: SendCMD0: 1
14:58:19: SendCMD8: 1
14:58:19: SendCMD58: 1
14:58:19: SetPower: 1
14:58:19: HcsXpcS18r000: 16744448
14:58:19: HcsXpcS18r001: 33521664
14:58:19: HcsXpcS18r010: 285179904
14:58:19: HcsXpcS18r011: 301957120
14:58:19: HcsXpcS18r100: 1090486272
14:58:19: HcsXpcS18r101: 1107263488
14:58:19: HcsXpcS18r110: 1358921728
14:58:19: HcsXpcS18r111: 1375698944
14:58:19: ReadyCcs18a000: 16744448
14:58:19: ReadyCcs18a001: 33521664
14:58:19: ReadyCcs18a010: 1090486272
14:58:19: ReadyCcs18a011: 1107263488
14:58:19: ReadyCcs18a100: 2164228096
14:58:19: ReadyCcs18a101: 2181005312
14:58:19: ReadyCcs18a110: 3237969920
14:58:19: ReadyCcs18a111: 3254747136
14:58:19: Card Capacity is : 32.000000 GB
14:58:19: SendFirstOCR : 1358921728
14:58:19: SendOCR : 1358921728
14:58:19: SendOCR : 1358921728
14:58:19: ExpectOCR : 3237969920
14:58:19: globalSpeedMode : SDR50
14:58:19: globalPowerUp : powerCycle
14:58:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123C00>, 0x0, False) , Command count = 1587 ] 
14:58:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123C00>, 0x0, True) , Command count = 1588 ] 
14:58:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:21: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1589 ] 
14:58:22: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:22: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:22: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:22: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:22: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05177EA0>, <py_sfcl.CommandDataDefinition object at 0x0610E780>) , Command count = 1590 ] 
14:58:22: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123A20>, <py_sfcl.CommandDataDefinition object at 0x060C1C00>) , Command count = 1591 ] 
14:58:22: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:22: [ SetCardRCA(0x1, 0xD555) , Command count = 1592 ] 
14:58:22: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:22: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:22: ####CSD Registe 2.0 Values####
14:58:22: CSD_STRUCTURE                                 :0x1
14:58:22: Reserv1                                       :0x0
14:58:22: Time Access 1 TAAC                            :0xe
14:58:22: Time Access 2 NSAC*100                        :0x0
14:58:22: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:22: Card Command Classess CCC                     :0x5b5
14:58:22: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:22: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:22: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:22: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:22: DSR(driver stage register)  DSR_IMP           :0x0
14:58:22: Reserv2                                       :0x0
14:58:22: Device Size C_SIZE                            :0xedc8
14:58:22: Reserv3                                       :0x0
14:58:22: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:22: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:22: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:22: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:22: Reserv4                                       :0x0
14:58:22: Write Speed Factor R2W_FACTOR                 :0x2
14:58:22: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:22: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:22: FILE_FORMAT_GRP                               :0x0
14:58:22: COPY flag                                     :0x1
14:58:22: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:22: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:22: File_Format                                   :0x0
14:58:22: CRC                                           :0x0
14:58:22: ####CSD Registe Values####  

14:58:22: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:22: [ SetBusWidth(0x4) , Command count = 1593 ] 
14:58:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EE40>, 0x0, False) , Command count = 1594 ] 
14:58:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ECC0>, 0x0, False) , Command count = 1595 ] 
14:58:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:22: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:22: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1596 ] 
14:58:22: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:22: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:22: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1597 ] 
14:58:22: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:22: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:22: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1598 ] 
14:58:22: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:22: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:22: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1599 ] 
14:58:22: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:22: SendFirstOCR : 1358921728
14:58:22: SendOCR : 1358921728
14:58:22: SendOCR : 1358921728
14:58:22: ExpectOCR : 3237969920
14:58:22: globalSpeedMode : SDR50
14:58:22: globalPowerUp : powerCycle
14:58:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EAE0>, 0x0, False) , Command count = 1600 ] 
14:58:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EAE0>, 0x0, True) , Command count = 1601 ] 
14:58:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:24: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1602 ] 
14:58:24: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:24: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:24: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:24: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:24: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7E0>, <py_sfcl.CommandDataDefinition object at 0x0610EC30>) , Command count = 1603 ] 
14:58:24: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E690>, <py_sfcl.CommandDataDefinition object at 0x061005A0>) , Command count = 1604 ] 
14:58:24: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:24: [ SetCardRCA(0x1, 0xD555) , Command count = 1605 ] 
14:58:24: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:24: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:24: ####CSD Registe 2.0 Values####
14:58:24: CSD_STRUCTURE                                 :0x1
14:58:24: Reserv1                                       :0x0
14:58:24: Time Access 1 TAAC                            :0xe
14:58:24: Time Access 2 NSAC*100                        :0x0
14:58:24: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:24: Card Command Classess CCC                     :0x5b5
14:58:24: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:24: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:24: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:24: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:24: DSR(driver stage register)  DSR_IMP           :0x0
14:58:24: Reserv2                                       :0x0
14:58:24: Device Size C_SIZE                            :0xedc8
14:58:24: Reserv3                                       :0x0
14:58:24: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:24: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:24: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:24: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:24: Reserv4                                       :0x0
14:58:24: Write Speed Factor R2W_FACTOR                 :0x2
14:58:24: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:24: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:24: FILE_FORMAT_GRP                               :0x0
14:58:24: COPY flag                                     :0x1
14:58:24: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:24: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:24: File_Format                                   :0x0
14:58:24: CRC                                           :0x0
14:58:24: ####CSD Registe Values####  

14:58:24: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:24: [ SetBusWidth(0x4) , Command count = 1606 ] 
14:58:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x061111B0>, 0x0, False) , Command count = 1607 ] 
14:58:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111240>, 0x0, False) , Command count = 1608 ] 
14:58:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:24: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1609 ] 
14:58:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:24: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1610 ] 
14:58:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:24: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1611 ] 
14:58:24: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:24: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1612 ] 
14:58:24: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:24: [GO4_globalInitCard]### Switch to Specify Card Type
14:58:26: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:26: Host Frequency set to 25000 KHz
14:58:26: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:26: [GO18_globalSetVolt]### Set Host Voltage value.
14:58:26: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:58:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, True) , Command count = 1613 ] 
14:58:26: [GO18_globalSetVolt]### Host voltage value is set.
14:58:26: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:58:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A810>, 0x0, False) , Command count = 1614 ] 
14:58:26: [GO18_globalSetVolt]### Host voltage value is set.
14:58:26: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1615 ] 
14:58:26: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1616 ] 
14:58:27: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:27: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:27: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:27: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:27: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:27: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1617 ] 
14:58:27: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:27: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x0610EBA0>) , Command count = 1618 ] 
14:58:27: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111270>, <py_sfcl.CommandDataDefinition object at 0x06127240>) , Command count = 1619 ] 
14:58:27: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:27: [ SetCardRCA(0x1, 0xD555) , Command count = 1620 ] 
14:58:27: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:27: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:27: Host Frequency set to 25000 KHz
14:58:27: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:27: ####CSD Registe 2.0 Values####
14:58:27: CSD_STRUCTURE                                 :0x1
14:58:27: Reserv1                                       :0x0
14:58:27: Time Access 1 TAAC                            :0xe
14:58:27: Time Access 2 NSAC*100                        :0x0
14:58:27: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:27: Card Command Classess CCC                     :0x5b5
14:58:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:27: DSR(driver stage register)  DSR_IMP           :0x0
14:58:27: Reserv2                                       :0x0
14:58:27: Device Size C_SIZE                            :0xedc8
14:58:27: Reserv3                                       :0x0
14:58:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:27: Reserv4                                       :0x0
14:58:27: Write Speed Factor R2W_FACTOR                 :0x2
14:58:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:27: FILE_FORMAT_GRP                               :0x0
14:58:27: COPY flag                                     :0x1
14:58:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:27: File_Format                                   :0x0
14:58:27: CRC                                           :0x0
14:58:27: ####CSD Registe Values####  

14:58:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:58:27: [GetSCRRegisterEntry] Passed
14:58:27: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:58:27: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:58:27: Data_Status_After Erases          : 0
14:58:27: CPRM Security Support             : No Security
14:58:27: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:58:27: Spec. Version                     : Version 3.0X
14:58:27: Extended Security Support         : Extended_Security_Not_Supported
14:58:27: Command Support                   : COMMAND_SUPPORT
14:58:27: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A690>, <py_sfcl.CommandDataDefinition object at 0x061110C0>) , Command count = 1621 ] 
14:58:27: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112A0>, <py_sfcl.CommandDataDefinition object at 0x06111150>) , Command count = 1622 ] 
14:58:27: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:58:27: [ SetBusWidth(0x4) , Command count = 1623 ] 
14:58:27: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:58:27: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061116C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1624 ] 
14:58:27: Protected Area Size 0x28000
14:58:27: Bus Width           2
14:58:27: Secure Mode         0
14:58:27: Speed  Class        4
14:58:27: Perf Move           0
14:58:27: Au Size             9
14:58:27: Erase Size          15
14:58:27: Erase Timeout       1
14:58:27: Erase offset        1
14:58:27: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:58:27: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:58:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:27: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1625 ] 
14:58:27: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:58:27: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:27: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:58:27: Host Frequency set to 100000 KHz
14:58:27: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:58:27: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:27: ####CSD Registe 2.0 Values####
14:58:27: CSD_STRUCTURE                                 :0x1
14:58:27: Reserv1                                       :0x0
14:58:27: Time Access 1 TAAC                            :0xe
14:58:27: Time Access 2 NSAC*100                        :0x0
14:58:27: Data Transfer Rate TRAN_SPEED                 :0xb
14:58:27: Card Command Classess CCC                     :0x5b5
14:58:27: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:27: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:27: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:27: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:27: DSR(driver stage register)  DSR_IMP           :0x0
14:58:27: Reserv2                                       :0x0
14:58:27: Device Size C_SIZE                            :0xedc8
14:58:27: Reserv3                                       :0x0
14:58:27: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:27: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:27: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:27: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:27: Reserv4                                       :0x0
14:58:27: Write Speed Factor R2W_FACTOR                 :0x2
14:58:27: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:27: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:27: FILE_FORMAT_GRP                               :0x0
14:58:27: COPY flag                                     :0x1
14:58:27: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:27: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:27: File_Format                                   :0x0
14:58:27: CRC                                           :0x0
14:58:27: ####CSD Registe Values####  

14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED80>, <py_sfcl.CommandDataDefinition object at 0x06111510>) , Command count = 1626 ] 
14:58:27: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:58:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E930>, <py_sfcl.CommandDataDefinition object at 0x06111030>) , Command count = 1627 ] 
14:58:28: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:58:28: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:58:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111A20>, 0x0, False) , Command count = 1628 ] 
14:58:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111A20>, 0x0, True) , Command count = 1629 ] 
14:58:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:30: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1630 ] 
14:58:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:58:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1631 ] 
14:58:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1780>, <py_sfcl.CommandDataDefinition object at 0x06111480>) , Command count = 1632 ] 
14:58:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06127B40>) , Command count = 1633 ] 
14:58:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:30: [ SetCardRCA(0x1, 0xD555) , Command count = 1634 ] 
14:58:30: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:30: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:30: [ SetBusWidth(0x4) , Command count = 1635 ] 
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:30: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1636 ] 
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:30: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:30: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1637 ] 
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:30: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:30: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1638 ] 
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:31: Host Frequency set to 25000 KHz

14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:31: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:31: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1639 ] 
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:31: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:31: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100570>, 0x0, False) , Command count = 1640 ] 
14:58:31: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:31: SendOCR: 1107263488
14:58:31: ExcpectOCR: 3254747136
14:58:31: SendFirstOCR: 1107263488
14:58:31: SendNextOCR: 1107263488
14:58:31: SingleCommand: 0
14:58:31: SingleCommandTestType: 1
14:58:31: Identification: 1
14:58:31: ProtocolMode: 1
14:58:31: VerifyType: 0
14:58:31: SendCMD0: 1
14:58:31: SendCMD8: 1
14:58:31: SendCMD58: 1
14:58:31: SetPower: 1
14:58:31: HcsXpcS18r000: 16744448
14:58:31: HcsXpcS18r001: 33521664
14:58:31: HcsXpcS18r010: 285179904
14:58:31: HcsXpcS18r011: 301957120
14:58:31: HcsXpcS18r100: 1090486272
14:58:31: HcsXpcS18r101: 1107263488
14:58:31: HcsXpcS18r110: 1358921728
14:58:31: HcsXpcS18r111: 1375698944
14:58:31: ReadyCcs18a000: 16744448
14:58:31: ReadyCcs18a001: 33521664
14:58:31: ReadyCcs18a010: 1090486272
14:58:31: ReadyCcs18a011: 1107263488
14:58:31: ReadyCcs18a100: 2164228096
14:58:31: ReadyCcs18a101: 2181005312
14:58:31: ReadyCcs18a110: 3237969920
14:58:31: ReadyCcs18a111: 3254747136
14:58:31: Card Capacity is : 32.000000 GB
14:58:31: SendFirstOCR : 1358921728
14:58:31: SendOCR : 1358921728
14:58:31: SendOCR : 1358921728
14:58:31: ExpectOCR : 3237969920
14:58:31: globalSpeedMode : SDR50
14:58:31: globalPowerUp : powerCycle
14:58:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002D0>, 0x0, False) , Command count = 1641 ] 
14:58:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002D0>, 0x0, True) , Command count = 1642 ] 
14:58:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:33: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1643 ] 
14:58:34: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:34: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:34: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:34: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:34: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111720>, <py_sfcl.CommandDataDefinition object at 0x06111B10>) , Command count = 1644 ] 
14:58:34: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119060>, <py_sfcl.CommandDataDefinition object at 0x06111120>) , Command count = 1645 ] 
14:58:34: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:34: [ SetCardRCA(0x1, 0xD555) , Command count = 1646 ] 
14:58:34: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:34: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:34: ####CSD Registe 2.0 Values####
14:58:34: CSD_STRUCTURE                                 :0x1
14:58:34: Reserv1                                       :0x0
14:58:34: Time Access 1 TAAC                            :0xe
14:58:34: Time Access 2 NSAC*100                        :0x0
14:58:34: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:34: Card Command Classess CCC                     :0x5b5
14:58:34: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:34: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:34: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:34: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:34: DSR(driver stage register)  DSR_IMP           :0x0
14:58:34: Reserv2                                       :0x0
14:58:34: Device Size C_SIZE                            :0xedc8
14:58:34: Reserv3                                       :0x0
14:58:34: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:34: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:34: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:34: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:34: Reserv4                                       :0x0
14:58:34: Write Speed Factor R2W_FACTOR                 :0x2
14:58:34: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:34: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:34: FILE_FORMAT_GRP                               :0x0
14:58:34: COPY flag                                     :0x1
14:58:34: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:34: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:34: File_Format                                   :0x0
14:58:34: CRC                                           :0x0
14:58:34: ####CSD Registe Values####  

14:58:34: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:34: [ SetBusWidth(0x4) , Command count = 1647 ] 
14:58:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E9C0>, 0x0, False) , Command count = 1648 ] 
14:58:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECF0>, 0x0, False) , Command count = 1649 ] 
14:58:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:34: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1650 ] 
14:58:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:34: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1651 ] 
14:58:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:34: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1652 ] 
14:58:34: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:34: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1653 ] 
14:58:34: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:34: SendFirstOCR : 1358921728
14:58:34: SendOCR : 1358921728
14:58:34: SendOCR : 1358921728
14:58:34: ExpectOCR : 3237969920
14:58:34: globalSpeedMode : SDR50
14:58:34: globalPowerUp : powerCycle
14:58:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111180>, 0x0, False) , Command count = 1654 ] 
14:58:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111180>, 0x0, True) , Command count = 1655 ] 
14:58:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:36: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1656 ] 
14:58:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x061115D0>) , Command count = 1657 ] 
14:58:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x06111960>) , Command count = 1658 ] 
14:58:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:36: [ SetCardRCA(0x1, 0xD555) , Command count = 1659 ] 
14:58:36: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:36: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:36: ####CSD Registe 2.0 Values####
14:58:36: CSD_STRUCTURE                                 :0x1
14:58:36: Reserv1                                       :0x0
14:58:36: Time Access 1 TAAC                            :0xe
14:58:36: Time Access 2 NSAC*100                        :0x0
14:58:36: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:36: Card Command Classess CCC                     :0x5b5
14:58:36: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:36: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:36: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:36: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:36: DSR(driver stage register)  DSR_IMP           :0x0
14:58:36: Reserv2                                       :0x0
14:58:36: Device Size C_SIZE                            :0xedc8
14:58:36: Reserv3                                       :0x0
14:58:36: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:36: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:36: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:36: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:36: Reserv4                                       :0x0
14:58:36: Write Speed Factor R2W_FACTOR                 :0x2
14:58:36: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:36: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:36: FILE_FORMAT_GRP                               :0x0
14:58:36: COPY flag                                     :0x1
14:58:36: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:36: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:36: File_Format                                   :0x0
14:58:36: CRC                                           :0x0
14:58:36: ####CSD Registe Values####  

14:58:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:36: [ SetBusWidth(0x4) , Command count = 1660 ] 
14:58:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119180>, 0x0, False) , Command count = 1661 ] 
14:58:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x061197E0>, 0x0, False) , Command count = 1662 ] 
14:58:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:36: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1663 ] 
14:58:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:36: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1664 ] 
14:58:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:36: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1665 ] 
14:58:36: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:36: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1666 ] 
14:58:36: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:36: [GO4_globalInitCard]### Switch to Specify Card Type
14:58:38: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:38: Host Frequency set to 25000 KHz
14:58:38: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:38: [GO18_globalSetVolt]### Set Host Voltage value.
14:58:38: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:58:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119330>, 0x0, True) , Command count = 1667 ] 
14:58:38: [GO18_globalSetVolt]### Host voltage value is set.
14:58:38: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:58:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1750>, 0x0, False) , Command count = 1668 ] 
14:58:38: [GO18_globalSetVolt]### Host voltage value is set.
14:58:38: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1669 ] 
14:58:38: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1670 ] 
14:58:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1671 ] 
14:58:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119BD0>, <py_sfcl.CommandDataDefinition object at 0x06111750>) , Command count = 1672 ] 
14:58:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119870>, <py_sfcl.CommandDataDefinition object at 0x06127570>) , Command count = 1673 ] 
14:58:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:39: [ SetCardRCA(0x1, 0xD555) , Command count = 1674 ] 
14:58:39: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:39: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:39: Host Frequency set to 25000 KHz
14:58:39: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:39: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:39: ####CSD Registe 2.0 Values####
14:58:39: CSD_STRUCTURE                                 :0x1
14:58:39: Reserv1                                       :0x0
14:58:39: Time Access 1 TAAC                            :0xe
14:58:39: Time Access 2 NSAC*100                        :0x0
14:58:39: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:39: Card Command Classess CCC                     :0x5b5
14:58:39: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:39: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:39: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:39: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:39: DSR(driver stage register)  DSR_IMP           :0x0
14:58:39: Reserv2                                       :0x0
14:58:39: Device Size C_SIZE                            :0xedc8
14:58:39: Reserv3                                       :0x0
14:58:39: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:39: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:39: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:39: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:39: Reserv4                                       :0x0
14:58:39: Write Speed Factor R2W_FACTOR                 :0x2
14:58:39: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:39: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:39: FILE_FORMAT_GRP                               :0x0
14:58:39: COPY flag                                     :0x1
14:58:39: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:39: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:39: File_Format                                   :0x0
14:58:39: CRC                                           :0x0
14:58:39: ####CSD Registe Values####  

14:58:39: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:58:39: [GetSCRRegisterEntry] Passed
14:58:39: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:58:39: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:58:39: Data_Status_After Erases          : 0
14:58:39: CPRM Security Support             : No Security
14:58:39: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:58:39: Spec. Version                     : Version 3.0X
14:58:39: Extended Security Support         : Extended_Security_Not_Supported
14:58:39: Command Support                   : COMMAND_SUPPORT
14:58:39: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:58:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E70>, <py_sfcl.CommandDataDefinition object at 0x06111D80>) , Command count = 1675 ] 
14:58:39: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:58:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061232D0>, <py_sfcl.CommandDataDefinition object at 0x061198A0>) , Command count = 1676 ] 
14:58:39: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:58:39: [ SetBusWidth(0x4) , Command count = 1677 ] 
14:58:39: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:58:39: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06119750>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1678 ] 
14:58:39: Protected Area Size 0x28000
14:58:39: Bus Width           2
14:58:39: Secure Mode         0
14:58:39: Speed  Class        4
14:58:39: Perf Move           0
14:58:39: Au Size             9
14:58:39: Erase Size          15
14:58:39: Erase Timeout       1
14:58:39: Erase offset        1
14:58:39: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:58:39: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:58:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:39: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1679 ] 
14:58:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:58:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:39: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:58:39: Host Frequency set to 100000 KHz
14:58:39: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:58:39: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:39: ####CSD Registe 2.0 Values####
14:58:39: CSD_STRUCTURE                                 :0x1
14:58:39: Reserv1                                       :0x0
14:58:39: Time Access 1 TAAC                            :0xe
14:58:39: Time Access 2 NSAC*100                        :0x0
14:58:39: Data Transfer Rate TRAN_SPEED                 :0xb
14:58:39: Card Command Classess CCC                     :0x5b5
14:58:39: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:39: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:39: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:39: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:39: DSR(driver stage register)  DSR_IMP           :0x0
14:58:39: Reserv2                                       :0x0
14:58:39: Device Size C_SIZE                            :0xedc8
14:58:39: Reserv3                                       :0x0
14:58:39: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:39: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:39: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:39: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:39: Reserv4                                       :0x0
14:58:39: Write Speed Factor R2W_FACTOR                 :0x2
14:58:39: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:39: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:39: FILE_FORMAT_GRP                               :0x0
14:58:39: COPY flag                                     :0x1
14:58:39: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:39: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:39: File_Format                                   :0x0
14:58:39: CRC                                           :0x0
14:58:39: ####CSD Registe Values####  

14:58:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x0610EAB0>) , Command count = 1680 ] 
14:58:40: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:58:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF90>, <py_sfcl.CommandDataDefinition object at 0x06119B70>) , Command count = 1681 ] 
14:58:40: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:58:40: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:58:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E9F0>, 0x0, False) , Command count = 1682 ] 
14:58:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E9F0>, 0x0, True) , Command count = 1683 ] 
14:58:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1684 ] 
14:58:42: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:42: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:58:42: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:42: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:42: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:42: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1685 ] 
14:58:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:42: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119300>, <py_sfcl.CommandDataDefinition object at 0x06119660>) , Command count = 1686 ] 
14:58:42: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111AE0>, <py_sfcl.CommandDataDefinition object at 0x061270F0>) , Command count = 1687 ] 
14:58:42: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:42: [ SetCardRCA(0x1, 0xD555) , Command count = 1688 ] 
14:58:42: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:42: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:42: [ SetBusWidth(0x4) , Command count = 1689 ] 
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:42: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1690 ] 
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:42: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:42: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1691 ] 
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:42: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:42: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1692 ] 
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:42: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:42: Host Frequency set to 25000 KHz

14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:43: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:43: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1693 ] 
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EC90>, 0x0, False) , Command count = 1694 ] 
14:58:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:43: SendOCR: 1107263488
14:58:43: ExcpectOCR: 3254747136
14:58:43: SendFirstOCR: 1107263488
14:58:43: SendNextOCR: 1107263488
14:58:43: SingleCommand: 0
14:58:43: SingleCommandTestType: 1
14:58:43: Identification: 1
14:58:43: ProtocolMode: 1
14:58:43: VerifyType: 0
14:58:43: SendCMD0: 1
14:58:43: SendCMD8: 1
14:58:43: SendCMD58: 1
14:58:43: SetPower: 1
14:58:43: HcsXpcS18r000: 16744448
14:58:43: HcsXpcS18r001: 33521664
14:58:43: HcsXpcS18r010: 285179904
14:58:43: HcsXpcS18r011: 301957120
14:58:43: HcsXpcS18r100: 1090486272
14:58:43: HcsXpcS18r101: 1107263488
14:58:43: HcsXpcS18r110: 1358921728
14:58:43: HcsXpcS18r111: 1375698944
14:58:43: ReadyCcs18a000: 16744448
14:58:43: ReadyCcs18a001: 33521664
14:58:43: ReadyCcs18a010: 1090486272
14:58:43: ReadyCcs18a011: 1107263488
14:58:43: ReadyCcs18a100: 2164228096
14:58:43: ReadyCcs18a101: 2181005312
14:58:43: ReadyCcs18a110: 3237969920
14:58:43: ReadyCcs18a111: 3254747136
14:58:43: Card Capacity is : 32.000000 GB
14:58:43: SendFirstOCR : 1358921728
14:58:43: SendOCR : 1358921728
14:58:43: SendOCR : 1358921728
14:58:43: ExpectOCR : 3237969920
14:58:43: globalSpeedMode : SDR50
14:58:43: globalPowerUp : powerCycle
14:58:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111C00>, 0x0, False) , Command count = 1695 ] 
14:58:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111C00>, 0x0, True) , Command count = 1696 ] 
14:58:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:45: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1697 ] 
14:58:45: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:45: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:45: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:45: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:45: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x06119CC0>) , Command count = 1698 ] 
14:58:45: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117E0>, <py_sfcl.CommandDataDefinition object at 0x06119990>) , Command count = 1699 ] 
14:58:45: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:45: [ SetCardRCA(0x1, 0xD555) , Command count = 1700 ] 
14:58:45: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:45: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:45: ####CSD Registe 2.0 Values####
14:58:45: CSD_STRUCTURE                                 :0x1
14:58:45: Reserv1                                       :0x0
14:58:45: Time Access 1 TAAC                            :0xe
14:58:45: Time Access 2 NSAC*100                        :0x0
14:58:45: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:45: Card Command Classess CCC                     :0x5b5
14:58:45: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:45: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:45: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:45: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:45: DSR(driver stage register)  DSR_IMP           :0x0
14:58:45: Reserv2                                       :0x0
14:58:45: Device Size C_SIZE                            :0xedc8
14:58:45: Reserv3                                       :0x0
14:58:45: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:45: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:45: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:45: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:45: Reserv4                                       :0x0
14:58:45: Write Speed Factor R2W_FACTOR                 :0x2
14:58:45: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:45: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:45: FILE_FORMAT_GRP                               :0x0
14:58:45: COPY flag                                     :0x1
14:58:45: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:45: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:45: File_Format                                   :0x0
14:58:45: CRC                                           :0x0
14:58:45: ####CSD Registe Values####  

14:58:45: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:45: [ SetBusWidth(0x4) , Command count = 1701 ] 
14:58:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E390>, 0x0, False) , Command count = 1702 ] 
14:58:46: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:46: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF90>, 0x0, False) , Command count = 1703 ] 
14:58:46: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:46: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:46: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1704 ] 
14:58:46: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:46: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:46: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1705 ] 
14:58:46: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:46: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:46: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1706 ] 
14:58:46: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:46: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:46: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1707 ] 
14:58:46: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:46: SendFirstOCR : 1358921728
14:58:46: SendOCR : 1358921728
14:58:46: SendOCR : 1358921728
14:58:46: ExpectOCR : 3237969920
14:58:46: globalSpeedMode : SDR50
14:58:46: globalPowerUp : powerCycle
14:58:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E10>, 0x0, False) , Command count = 1708 ] 
14:58:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E10>, 0x0, True) , Command count = 1709 ] 
14:58:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:48: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1710 ] 
14:58:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F90>, <py_sfcl.CommandDataDefinition object at 0x0611E300>) , Command count = 1711 ] 
14:58:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C90>, <py_sfcl.CommandDataDefinition object at 0x06119B40>) , Command count = 1712 ] 
14:58:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:48: [ SetCardRCA(0x1, 0xD555) , Command count = 1713 ] 
14:58:48: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:48: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:48: ####CSD Registe 2.0 Values####
14:58:48: CSD_STRUCTURE                                 :0x1
14:58:48: Reserv1                                       :0x0
14:58:48: Time Access 1 TAAC                            :0xe
14:58:48: Time Access 2 NSAC*100                        :0x0
14:58:48: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:48: Card Command Classess CCC                     :0x5b5
14:58:48: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:48: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:48: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:48: DSR(driver stage register)  DSR_IMP           :0x0
14:58:48: Reserv2                                       :0x0
14:58:48: Device Size C_SIZE                            :0xedc8
14:58:48: Reserv3                                       :0x0
14:58:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:48: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:48: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:48: Reserv4                                       :0x0
14:58:48: Write Speed Factor R2W_FACTOR                 :0x2
14:58:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:48: FILE_FORMAT_GRP                               :0x0
14:58:48: COPY flag                                     :0x1
14:58:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:48: File_Format                                   :0x0
14:58:48: CRC                                           :0x0
14:58:48: ####CSD Registe Values####  

14:58:48: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:48: [ SetBusWidth(0x4) , Command count = 1714 ] 
14:58:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119480>, 0x0, False) , Command count = 1715 ] 
14:58:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:48: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:48: [ SetVolt(<py_sfcl.SDVoltage object at 0x061191B0>, 0x0, False) , Command count = 1716 ] 
14:58:48: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:48: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1717 ] 
14:58:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:48: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1718 ] 
14:58:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:48: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1719 ] 
14:58:48: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:48: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1720 ] 
14:58:48: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:48: [GO4_globalInitCard]### Switch to Specify Card Type
14:58:50: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:50: Host Frequency set to 25000 KHz
14:58:50: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:50: [GO18_globalSetVolt]### Set Host Voltage value.
14:58:50: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:58:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x061197B0>, 0x0, True) , Command count = 1721 ] 
14:58:50: [GO18_globalSetVolt]### Host voltage value is set.
14:58:50: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:58:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119DB0>, 0x0, False) , Command count = 1722 ] 
14:58:50: [GO18_globalSetVolt]### Host voltage value is set.
14:58:50: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1723 ] 
14:58:50: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1724 ] 
14:58:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1725 ] 
14:58:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E090>, <py_sfcl.CommandDataDefinition object at 0x0611E990>) , Command count = 1726 ] 
14:58:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 1727 ] 
14:58:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:50: [ SetCardRCA(0x1, 0xD555) , Command count = 1728 ] 
14:58:51: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:51: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:58:51: Host Frequency set to 25000 KHz
14:58:51: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:58:51: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:51: ####CSD Registe 2.0 Values####
14:58:51: CSD_STRUCTURE                                 :0x1
14:58:51: Reserv1                                       :0x0
14:58:51: Time Access 1 TAAC                            :0xe
14:58:51: Time Access 2 NSAC*100                        :0x0
14:58:51: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:51: Card Command Classess CCC                     :0x5b5
14:58:51: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:51: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:51: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:51: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:51: DSR(driver stage register)  DSR_IMP           :0x0
14:58:51: Reserv2                                       :0x0
14:58:51: Device Size C_SIZE                            :0xedc8
14:58:51: Reserv3                                       :0x0
14:58:51: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:51: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:51: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:51: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:51: Reserv4                                       :0x0
14:58:51: Write Speed Factor R2W_FACTOR                 :0x2
14:58:51: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:51: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:51: FILE_FORMAT_GRP                               :0x0
14:58:51: COPY flag                                     :0x1
14:58:51: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:51: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:51: File_Format                                   :0x0
14:58:51: CRC                                           :0x0
14:58:51: ####CSD Registe Values####  

14:58:51: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:58:51: [GetSCRRegisterEntry] Passed
14:58:51: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:58:51: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:58:51: Data_Status_After Erases          : 0
14:58:51: CPRM Security Support             : No Security
14:58:51: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:58:51: Spec. Version                     : Version 3.0X
14:58:51: Extended Security Support         : Extended_Security_Not_Supported
14:58:51: Command Support                   : COMMAND_SUPPORT
14:58:51: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:58:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E0C0>, <py_sfcl.CommandDataDefinition object at 0x0611EB10>) , Command count = 1729 ] 
14:58:51: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:58:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C00>, <py_sfcl.CommandDataDefinition object at 0x06119C60>) , Command count = 1730 ] 
14:58:51: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:58:51: [ SetBusWidth(0x4) , Command count = 1731 ] 
14:58:51: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:58:51: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611EE70>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1732 ] 
14:58:51: Protected Area Size 0x28000
14:58:51: Bus Width           2
14:58:51: Secure Mode         0
14:58:51: Speed  Class        4
14:58:51: Perf Move           0
14:58:51: Au Size             9
14:58:51: Erase Size          15
14:58:51: Erase Timeout       1
14:58:51: Erase offset        1
14:58:51: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:58:51: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:58:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:51: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1733 ] 
14:58:51: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:58:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:51: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:58:51: Host Frequency set to 100000 KHz
14:58:51: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:58:51: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:51: ####CSD Registe 2.0 Values####
14:58:51: CSD_STRUCTURE                                 :0x1
14:58:51: Reserv1                                       :0x0
14:58:51: Time Access 1 TAAC                            :0xe
14:58:51: Time Access 2 NSAC*100                        :0x0
14:58:51: Data Transfer Rate TRAN_SPEED                 :0xb
14:58:51: Card Command Classess CCC                     :0x5b5
14:58:51: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:51: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:51: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:51: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:51: DSR(driver stage register)  DSR_IMP           :0x0
14:58:51: Reserv2                                       :0x0
14:58:51: Device Size C_SIZE                            :0xedc8
14:58:51: Reserv3                                       :0x0
14:58:51: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:51: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:51: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:51: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:51: Reserv4                                       :0x0
14:58:51: Write Speed Factor R2W_FACTOR                 :0x2
14:58:51: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:51: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:51: FILE_FORMAT_GRP                               :0x0
14:58:51: COPY flag                                     :0x1
14:58:51: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:51: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:51: File_Format                                   :0x0
14:58:51: CRC                                           :0x0
14:58:51: ####CSD Registe Values####  

14:58:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x0611E900>) , Command count = 1734 ] 
14:58:51: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:58:51: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0611E840>) , Command count = 1735 ] 
14:58:52: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:58:52: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:58:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1F00>, 0x0, False) , Command count = 1736 ] 
14:58:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1F00>, 0x0, True) , Command count = 1737 ] 
14:58:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:58:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1738 ] 
14:58:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:58:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:58:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:58:54: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1739 ] 
14:58:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:58:54: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E180>, <py_sfcl.CommandDataDefinition object at 0x0611EF90>) , Command count = 1740 ] 
14:58:54: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC60>, <py_sfcl.CommandDataDefinition object at 0x06127C90>) , Command count = 1741 ] 
14:58:54: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:58:54: [ SetCardRCA(0x1, 0xD555) , Command count = 1742 ] 
14:58:54: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:54: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:54: [ SetBusWidth(0x4) , Command count = 1743 ] 
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1744 ] 
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:54: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:54: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1745 ] 
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:54: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:54: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1746 ] 
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:55: Host Frequency set to 25000 KHz

14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:55: [32799, 49153, 32783, 32783, 32769, 32769]
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:58:55: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1747 ] 
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:58:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:58:55: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:55: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119D80>, 0x0, False) , Command count = 1748 ] 
14:58:55: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:55: SendOCR: 1107263488
14:58:55: ExcpectOCR: 3254747136
14:58:55: SendFirstOCR: 1107263488
14:58:55: SendNextOCR: 1107263488
14:58:55: SingleCommand: 0
14:58:55: SingleCommandTestType: 1
14:58:55: Identification: 1
14:58:55: ProtocolMode: 1
14:58:55: VerifyType: 0
14:58:55: SendCMD0: 1
14:58:55: SendCMD8: 1
14:58:55: SendCMD58: 1
14:58:55: SetPower: 1
14:58:55: HcsXpcS18r000: 16744448
14:58:55: HcsXpcS18r001: 33521664
14:58:55: HcsXpcS18r010: 285179904
14:58:55: HcsXpcS18r011: 301957120
14:58:55: HcsXpcS18r100: 1090486272
14:58:55: HcsXpcS18r101: 1107263488
14:58:55: HcsXpcS18r110: 1358921728
14:58:55: HcsXpcS18r111: 1375698944
14:58:55: ReadyCcs18a000: 16744448
14:58:55: ReadyCcs18a001: 33521664
14:58:55: ReadyCcs18a010: 1090486272
14:58:55: ReadyCcs18a011: 1107263488
14:58:55: ReadyCcs18a100: 2164228096
14:58:55: ReadyCcs18a101: 2181005312
14:58:55: ReadyCcs18a110: 3237969920
14:58:55: ReadyCcs18a111: 3254747136
14:58:55: Card Capacity is : 32.000000 GB
14:58:55: SendFirstOCR : 1358921728
14:58:55: SendOCR : 1358921728
14:58:55: SendOCR : 1358921728
14:58:55: ExpectOCR : 3237969920
14:58:55: globalSpeedMode : SDR50
14:58:55: globalPowerUp : powerCycle
14:58:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119270>, 0x0, False) , Command count = 1749 ] 
14:58:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:58:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119270>, 0x0, True) , Command count = 1750 ] 
14:58:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:57: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:58:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1751 ] 
14:58:57: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:58:57: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:58:57: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:58:57: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:58:57: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:58:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DE0>, <py_sfcl.CommandDataDefinition object at 0x0611EA20>) , Command count = 1752 ] 
14:58:57: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:58:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EAE0>, <py_sfcl.CommandDataDefinition object at 0x06123240>) , Command count = 1753 ] 
14:58:57: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:58:57: [ SetCardRCA(0x1, 0xD555) , Command count = 1754 ] 
14:58:57: [DVTCommonLib]### Identification :Idenfication of card completed 

14:58:57: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:58:57: ####CSD Registe 2.0 Values####
14:58:57: CSD_STRUCTURE                                 :0x1
14:58:57: Reserv1                                       :0x0
14:58:57: Time Access 1 TAAC                            :0xe
14:58:57: Time Access 2 NSAC*100                        :0x0
14:58:57: Data Transfer Rate TRAN_SPEED                 :0x32
14:58:57: Card Command Classess CCC                     :0x5b5
14:58:57: Max Read Data Block Length  READ_BL_LEN       :0x9
14:58:57: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:58:57: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:58:57: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:58:57: DSR(driver stage register)  DSR_IMP           :0x0
14:58:57: Reserv2                                       :0x0
14:58:57: Device Size C_SIZE                            :0xedc8
14:58:57: Reserv3                                       :0x0
14:58:57: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:58:57: Erase Sector Size SECTOR_SIZE                 :0x7f
14:58:57: Write Protect Group Size WP_GRP_SIZE          :0x0
14:58:57: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:58:57: Reserv4                                       :0x0
14:58:57: Write Speed Factor R2W_FACTOR                 :0x2
14:58:57: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:58:57: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:58:57: FILE_FORMAT_GRP                               :0x0
14:58:57: COPY flag                                     :0x1
14:58:57: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:58:57: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:58:57: File_Format                                   :0x0
14:58:57: CRC                                           :0x0
14:58:57: ####CSD Registe Values####  

14:58:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:58:57: [ SetBusWidth(0x4) , Command count = 1755 ] 
14:58:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x061231E0>, 0x0, False) , Command count = 1756 ] 
14:58:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:58:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x061236C0>, 0x0, False) , Command count = 1757 ] 
14:58:58: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:58:58: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:58: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1758 ] 
14:58:58: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:58: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:58: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1759 ] 
14:58:58: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:58: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:58: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1760 ] 
14:58:58: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:58: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:58:58: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1761 ] 
14:58:58: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:58:58: SendFirstOCR : 1358921728
14:58:58: SendOCR : 1358921728
14:58:58: SendOCR : 1358921728
14:58:58: ExpectOCR : 3237969920
14:58:58: globalSpeedMode : SDR50
14:58:58: globalPowerUp : powerCycle
14:59:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF00>, 0x0, False) , Command count = 1762 ] 
14:59:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF00>, 0x0, True) , Command count = 1763 ] 
14:59:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:00: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1764 ] 
14:59:00: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:00: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:00: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:00: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:00: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233F0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 1765 ] 
14:59:00: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123780>, <py_sfcl.CommandDataDefinition object at 0x061277E0>) , Command count = 1766 ] 
14:59:00: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:00: [ SetCardRCA(0x1, 0xD555) , Command count = 1767 ] 
14:59:00: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:00: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:00: ####CSD Registe 2.0 Values####
14:59:00: CSD_STRUCTURE                                 :0x1
14:59:00: Reserv1                                       :0x0
14:59:00: Time Access 1 TAAC                            :0xe
14:59:00: Time Access 2 NSAC*100                        :0x0
14:59:00: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:00: Card Command Classess CCC                     :0x5b5
14:59:00: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:00: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:00: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:00: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:00: DSR(driver stage register)  DSR_IMP           :0x0
14:59:00: Reserv2                                       :0x0
14:59:00: Device Size C_SIZE                            :0xedc8
14:59:00: Reserv3                                       :0x0
14:59:00: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:00: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:00: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:00: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:00: Reserv4                                       :0x0
14:59:00: Write Speed Factor R2W_FACTOR                 :0x2
14:59:00: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:00: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:00: FILE_FORMAT_GRP                               :0x0
14:59:00: COPY flag                                     :0x1
14:59:00: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:00: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:00: File_Format                                   :0x0
14:59:00: CRC                                           :0x0
14:59:00: ####CSD Registe Values####  

14:59:00: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:00: [ SetBusWidth(0x4) , Command count = 1768 ] 
14:59:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x052571B0>, 0x0, False) , Command count = 1769 ] 
14:59:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119F00>, 0x0, False) , Command count = 1770 ] 
14:59:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:00: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1771 ] 
14:59:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:00: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1772 ] 
14:59:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:00: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1773 ] 
14:59:00: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:00: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1774 ] 
14:59:00: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:00: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:02: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:02: Host Frequency set to 25000 KHz
14:59:02: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:02: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:02: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123BD0>, 0x0, True) , Command count = 1775 ] 
14:59:02: [GO18_globalSetVolt]### Host voltage value is set.
14:59:02: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x061194B0>, 0x0, False) , Command count = 1776 ] 
14:59:02: [GO18_globalSetVolt]### Host voltage value is set.
14:59:02: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1777 ] 
14:59:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1778 ] 
14:59:03: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:03: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:03: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:03: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:03: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1779 ] 
14:59:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:03: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123F30>, <py_sfcl.CommandDataDefinition object at 0x06123900>) , Command count = 1780 ] 
14:59:03: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123210>, <py_sfcl.CommandDataDefinition object at 0x06127D80>) , Command count = 1781 ] 
14:59:03: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:03: [ SetCardRCA(0x1, 0xD555) , Command count = 1782 ] 
14:59:03: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:03: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:03: Host Frequency set to 25000 KHz
14:59:03: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:03: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:03: ####CSD Registe 2.0 Values####
14:59:03: CSD_STRUCTURE                                 :0x1
14:59:03: Reserv1                                       :0x0
14:59:03: Time Access 1 TAAC                            :0xe
14:59:03: Time Access 2 NSAC*100                        :0x0
14:59:03: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:03: Card Command Classess CCC                     :0x5b5
14:59:03: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:03: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:03: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:03: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:03: DSR(driver stage register)  DSR_IMP           :0x0
14:59:03: Reserv2                                       :0x0
14:59:03: Device Size C_SIZE                            :0xedc8
14:59:03: Reserv3                                       :0x0
14:59:03: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:03: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:03: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:03: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:03: Reserv4                                       :0x0
14:59:03: Write Speed Factor R2W_FACTOR                 :0x2
14:59:03: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:03: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:03: FILE_FORMAT_GRP                               :0x0
14:59:03: COPY flag                                     :0x1
14:59:03: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:03: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:03: File_Format                                   :0x0
14:59:03: CRC                                           :0x0
14:59:03: ####CSD Registe Values####  

14:59:03: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:03: [GetSCRRegisterEntry] Passed
14:59:03: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:03: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:03: Data_Status_After Erases          : 0
14:59:03: CPRM Security Support             : No Security
14:59:03: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:03: Spec. Version                     : Version 3.0X
14:59:03: Extended Security Support         : Extended_Security_Not_Supported
14:59:03: Command Support                   : COMMAND_SUPPORT
14:59:03: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123CF0>, <py_sfcl.CommandDataDefinition object at 0x061238A0>) , Command count = 1783 ] 
14:59:03: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233C0>, <py_sfcl.CommandDataDefinition object at 0x06123DE0>) , Command count = 1784 ] 
14:59:03: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:03: [ SetBusWidth(0x4) , Command count = 1785 ] 
14:59:03: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:03: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123870>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1786 ] 
14:59:03: Protected Area Size 0x28000
14:59:03: Bus Width           2
14:59:03: Secure Mode         0
14:59:03: Speed  Class        4
14:59:03: Perf Move           0
14:59:03: Au Size             9
14:59:03: Erase Size          15
14:59:03: Erase Timeout       1
14:59:03: Erase offset        1
14:59:03: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:03: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:03: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1787 ] 
14:59:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:03: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:03: Host Frequency set to 100000 KHz
14:59:03: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:03: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:03: ####CSD Registe 2.0 Values####
14:59:03: CSD_STRUCTURE                                 :0x1
14:59:03: Reserv1                                       :0x0
14:59:03: Time Access 1 TAAC                            :0xe
14:59:03: Time Access 2 NSAC*100                        :0x0
14:59:03: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:03: Card Command Classess CCC                     :0x5b5
14:59:03: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:03: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:03: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:03: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:03: DSR(driver stage register)  DSR_IMP           :0x0
14:59:03: Reserv2                                       :0x0
14:59:03: Device Size C_SIZE                            :0xedc8
14:59:03: Reserv3                                       :0x0
14:59:03: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:03: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:03: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:03: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:03: Reserv4                                       :0x0
14:59:03: Write Speed Factor R2W_FACTOR                 :0x2
14:59:03: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:03: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:03: FILE_FORMAT_GRP                               :0x0
14:59:03: COPY flag                                     :0x1
14:59:03: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:03: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:03: File_Format                                   :0x0
14:59:03: CRC                                           :0x0
14:59:03: ####CSD Registe Values####  

14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05267E70>, <py_sfcl.CommandDataDefinition object at 0x061234E0>) , Command count = 1788 ] 
14:59:03: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:59:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBA0>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 1789 ] 
14:59:04: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:59:04: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:59:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E240>, 0x0, False) , Command count = 1790 ] 
14:59:06: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E240>, 0x0, True) , Command count = 1791 ] 
14:59:06: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:06: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1792 ] 
14:59:06: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:06: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:59:06: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:06: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:06: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:06: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:06: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1793 ] 
14:59:06: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:06: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3F0>, <py_sfcl.CommandDataDefinition object at 0x06123E40>) , Command count = 1794 ] 
14:59:06: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0526B450>, <py_sfcl.CommandDataDefinition object at 0x06127180>) , Command count = 1795 ] 
14:59:06: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:06: [ SetCardRCA(0x1, 0xD555) , Command count = 1796 ] 
14:59:06: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:06: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:06: [ SetBusWidth(0x4) , Command count = 1797 ] 
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:06: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1798 ] 
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:06: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:06: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1799 ] 
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:06: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:06: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1800 ] 
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:07: Host Frequency set to 25000 KHz

14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:07: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:07: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1801 ] 
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123300>, 0x0, False) , Command count = 1802 ] 
14:59:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:07: SendOCR: 1107263488
14:59:07: ExcpectOCR: 3254747136
14:59:07: SendFirstOCR: 1107263488
14:59:07: SendNextOCR: 1107263488
14:59:07: SingleCommand: 0
14:59:07: SingleCommandTestType: 1
14:59:07: Identification: 1
14:59:07: ProtocolMode: 1
14:59:07: VerifyType: 0
14:59:07: SendCMD0: 1
14:59:07: SendCMD8: 1
14:59:07: SendCMD58: 1
14:59:07: SetPower: 1
14:59:07: HcsXpcS18r000: 16744448
14:59:07: HcsXpcS18r001: 33521664
14:59:07: HcsXpcS18r010: 285179904
14:59:07: HcsXpcS18r011: 301957120
14:59:07: HcsXpcS18r100: 1090486272
14:59:07: HcsXpcS18r101: 1107263488
14:59:07: HcsXpcS18r110: 1358921728
14:59:07: HcsXpcS18r111: 1375698944
14:59:07: ReadyCcs18a000: 16744448
14:59:07: ReadyCcs18a001: 33521664
14:59:07: ReadyCcs18a010: 1090486272
14:59:07: ReadyCcs18a011: 1107263488
14:59:07: ReadyCcs18a100: 2164228096
14:59:07: ReadyCcs18a101: 2181005312
14:59:07: ReadyCcs18a110: 3237969920
14:59:07: ReadyCcs18a111: 3254747136
14:59:07: Card Capacity is : 32.000000 GB
14:59:07: SendFirstOCR : 1358921728
14:59:07: SendOCR : 1358921728
14:59:07: SendOCR : 1358921728
14:59:07: ExpectOCR : 3237969920
14:59:07: globalSpeedMode : SDR50
14:59:07: globalPowerUp : powerCycle
14:59:09: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EEA0>, 0x0, False) , Command count = 1803 ] 
14:59:09: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:09: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:09: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EEA0>, 0x0, True) , Command count = 1804 ] 
14:59:09: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:09: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1805 ] 
14:59:09: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:09: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:09: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:09: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:09: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA20>, <py_sfcl.CommandDataDefinition object at 0x06127750>) , Command count = 1806 ] 
14:59:09: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x06127870>) , Command count = 1807 ] 
14:59:09: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:09: [ SetCardRCA(0x1, 0xD555) , Command count = 1808 ] 
14:59:10: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:10: ####CSD Registe 2.0 Values####
14:59:10: CSD_STRUCTURE                                 :0x1
14:59:10: Reserv1                                       :0x0
14:59:10: Time Access 1 TAAC                            :0xe
14:59:10: Time Access 2 NSAC*100                        :0x0
14:59:10: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:10: Card Command Classess CCC                     :0x5b5
14:59:10: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:10: DSR(driver stage register)  DSR_IMP           :0x0
14:59:10: Reserv2                                       :0x0
14:59:10: Device Size C_SIZE                            :0xedc8
14:59:10: Reserv3                                       :0x0
14:59:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:10: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:10: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:10: Reserv4                                       :0x0
14:59:10: Write Speed Factor R2W_FACTOR                 :0x2
14:59:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:10: FILE_FORMAT_GRP                               :0x0
14:59:10: COPY flag                                     :0x1
14:59:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:10: File_Format                                   :0x0
14:59:10: CRC                                           :0x0
14:59:10: ####CSD Registe Values####  

14:59:10: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:10: [ SetBusWidth(0x4) , Command count = 1809 ] 
14:59:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123F00>, 0x0, False) , Command count = 1810 ] 
14:59:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123EA0>, 0x0, False) , Command count = 1811 ] 
14:59:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:10: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:10: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1812 ] 
14:59:10: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:10: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:10: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1813 ] 
14:59:10: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:10: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:10: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1814 ] 
14:59:10: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:10: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:10: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1815 ] 
14:59:10: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:10: SendFirstOCR : 1358921728
14:59:10: SendOCR : 1358921728
14:59:10: SendOCR : 1358921728
14:59:10: ExpectOCR : 3237969920
14:59:10: globalSpeedMode : SDR50
14:59:10: globalPowerUp : powerCycle
14:59:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C30>, 0x0, False) , Command count = 1816 ] 
14:59:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C30>, 0x0, True) , Command count = 1817 ] 
14:59:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:12: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1818 ] 
14:59:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E330>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 1819 ] 
14:59:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1900>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 1820 ] 
14:59:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:12: [ SetCardRCA(0x1, 0xD555) , Command count = 1821 ] 
14:59:12: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:12: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:12: ####CSD Registe 2.0 Values####
14:59:12: CSD_STRUCTURE                                 :0x1
14:59:12: Reserv1                                       :0x0
14:59:12: Time Access 1 TAAC                            :0xe
14:59:12: Time Access 2 NSAC*100                        :0x0
14:59:12: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:12: Card Command Classess CCC                     :0x5b5
14:59:12: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:12: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:12: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:12: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:12: DSR(driver stage register)  DSR_IMP           :0x0
14:59:12: Reserv2                                       :0x0
14:59:12: Device Size C_SIZE                            :0xedc8
14:59:12: Reserv3                                       :0x0
14:59:12: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:12: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:12: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:12: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:12: Reserv4                                       :0x0
14:59:12: Write Speed Factor R2W_FACTOR                 :0x2
14:59:12: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:12: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:12: FILE_FORMAT_GRP                               :0x0
14:59:12: COPY flag                                     :0x1
14:59:12: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:12: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:12: File_Format                                   :0x0
14:59:12: CRC                                           :0x0
14:59:12: ####CSD Registe Values####  

14:59:12: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:12: [ SetBusWidth(0x4) , Command count = 1822 ] 
14:59:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119840>, 0x0, False) , Command count = 1823 ] 
14:59:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100150>, 0x0, False) , Command count = 1824 ] 
14:59:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:12: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:12: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1825 ] 
14:59:12: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:12: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:12: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1826 ] 
14:59:12: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:12: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:12: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1827 ] 
14:59:12: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:12: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:12: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1828 ] 
14:59:12: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:12: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:14: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:14: Host Frequency set to 25000 KHz
14:59:14: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:14: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:14: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:14: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100180>, 0x0, True) , Command count = 1829 ] 
14:59:14: [GO18_globalSetVolt]### Host voltage value is set.
14:59:14: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:14: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CF90>, 0x0, False) , Command count = 1830 ] 
14:59:14: [GO18_globalSetVolt]### Host voltage value is set.
14:59:14: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1831 ] 
14:59:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1832 ] 
14:59:14: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:14: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:14: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:14: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:14: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1833 ] 
14:59:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:14: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x061273F0>) , Command count = 1834 ] 
14:59:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C16F0>, <py_sfcl.CommandDataDefinition object at 0x061273C0>) , Command count = 1835 ] 
14:59:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:15: [ SetCardRCA(0x1, 0xD555) , Command count = 1836 ] 
14:59:15: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:15: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:15: Host Frequency set to 25000 KHz
14:59:15: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:15: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:15: ####CSD Registe 2.0 Values####
14:59:15: CSD_STRUCTURE                                 :0x1
14:59:15: Reserv1                                       :0x0
14:59:15: Time Access 1 TAAC                            :0xe
14:59:15: Time Access 2 NSAC*100                        :0x0
14:59:15: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:15: Card Command Classess CCC                     :0x5b5
14:59:15: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:15: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:15: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:15: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:15: DSR(driver stage register)  DSR_IMP           :0x0
14:59:15: Reserv2                                       :0x0
14:59:15: Device Size C_SIZE                            :0xedc8
14:59:15: Reserv3                                       :0x0
14:59:15: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:15: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:15: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:15: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:15: Reserv4                                       :0x0
14:59:15: Write Speed Factor R2W_FACTOR                 :0x2
14:59:15: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:15: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:15: FILE_FORMAT_GRP                               :0x0
14:59:15: COPY flag                                     :0x1
14:59:15: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:15: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:15: File_Format                                   :0x0
14:59:15: CRC                                           :0x0
14:59:15: ####CSD Registe Values####  

14:59:15: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:15: [GetSCRRegisterEntry] Passed
14:59:15: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:15: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:15: Data_Status_After Erases          : 0
14:59:15: CPRM Security Support             : No Security
14:59:15: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:15: Spec. Version                     : Version 3.0X
14:59:15: Extended Security Support         : Extended_Security_Not_Supported
14:59:15: Command Support                   : COMMAND_SUPPORT
14:59:15: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119390>, <py_sfcl.CommandDataDefinition object at 0x060C1630>) , Command count = 1837 ] 
14:59:15: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285510>, <py_sfcl.CommandDataDefinition object at 0x05285FC0>) , Command count = 1838 ] 
14:59:15: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:15: [ SetBusWidth(0x4) , Command count = 1839 ] 
14:59:15: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:15: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127EA0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1840 ] 
14:59:15: Protected Area Size 0x28000
14:59:15: Bus Width           2
14:59:15: Secure Mode         0
14:59:15: Speed  Class        4
14:59:15: Perf Move           0
14:59:15: Au Size             9
14:59:15: Erase Size          15
14:59:15: Erase Timeout       1
14:59:15: Erase offset        1
14:59:15: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:15: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:15: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1841 ] 
14:59:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:15: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:15: Host Frequency set to 100000 KHz
14:59:15: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:15: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:15: ####CSD Registe 2.0 Values####
14:59:15: CSD_STRUCTURE                                 :0x1
14:59:15: Reserv1                                       :0x0
14:59:15: Time Access 1 TAAC                            :0xe
14:59:15: Time Access 2 NSAC*100                        :0x0
14:59:15: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:15: Card Command Classess CCC                     :0x5b5
14:59:15: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:15: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:15: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:15: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:15: DSR(driver stage register)  DSR_IMP           :0x0
14:59:15: Reserv2                                       :0x0
14:59:15: Device Size C_SIZE                            :0xedc8
14:59:15: Reserv3                                       :0x0
14:59:15: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:15: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:15: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:15: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:15: Reserv4                                       :0x0
14:59:15: Write Speed Factor R2W_FACTOR                 :0x2
14:59:15: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:15: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:15: FILE_FORMAT_GRP                               :0x0
14:59:15: COPY flag                                     :0x1
14:59:15: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:15: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:15: File_Format                                   :0x0
14:59:15: CRC                                           :0x0
14:59:15: ####CSD Registe Values####  

14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05177EA0>, <py_sfcl.CommandDataDefinition object at 0x0610E780>) , Command count = 1842 ] 
14:59:15: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:59:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E6C0>, <py_sfcl.CommandDataDefinition object at 0x060C1720>) , Command count = 1843 ] 
14:59:15: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:59:15: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:59:17: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123C30>, 0x0, False) , Command count = 1844 ] 
14:59:17: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:17: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:17: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123C30>, 0x0, True) , Command count = 1845 ] 
14:59:17: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:17: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1846 ] 
14:59:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:59:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1847 ] 
14:59:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123390>, <py_sfcl.CommandDataDefinition object at 0x06123D20>) , Command count = 1848 ] 
14:59:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100240>, <py_sfcl.CommandDataDefinition object at 0x06127690>) , Command count = 1849 ] 
14:59:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:18: [ SetCardRCA(0x1, 0xD555) , Command count = 1850 ] 
14:59:18: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:18: [ SetBusWidth(0x4) , Command count = 1851 ] 
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1852 ] 
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1853 ] 
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1854 ] 
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:18: Host Frequency set to 25000 KHz

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1855 ] 
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:18: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AC90>, 0x0, False) , Command count = 1856 ] 
14:59:18: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:18: SendOCR: 1107263488
14:59:18: ExcpectOCR: 3254747136
14:59:18: SendFirstOCR: 1107263488
14:59:18: SendNextOCR: 1107263488
14:59:18: SingleCommand: 0
14:59:18: SingleCommandTestType: 1
14:59:18: Identification: 1
14:59:18: ProtocolMode: 1
14:59:18: VerifyType: 0
14:59:18: SendCMD0: 1
14:59:18: SendCMD8: 1
14:59:18: SendCMD58: 1
14:59:18: SetPower: 1
14:59:18: HcsXpcS18r000: 16744448
14:59:18: HcsXpcS18r001: 33521664
14:59:18: HcsXpcS18r010: 285179904
14:59:18: HcsXpcS18r011: 301957120
14:59:18: HcsXpcS18r100: 1090486272
14:59:18: HcsXpcS18r101: 1107263488
14:59:18: HcsXpcS18r110: 1358921728
14:59:18: HcsXpcS18r111: 1375698944
14:59:18: ReadyCcs18a000: 16744448
14:59:18: ReadyCcs18a001: 33521664
14:59:18: ReadyCcs18a010: 1090486272
14:59:18: ReadyCcs18a011: 1107263488
14:59:18: ReadyCcs18a100: 2164228096
14:59:18: ReadyCcs18a101: 2181005312
14:59:18: ReadyCcs18a110: 3237969920
14:59:18: ReadyCcs18a111: 3254747136
14:59:18: Card Capacity is : 32.000000 GB
14:59:18: SendFirstOCR : 1358921728
14:59:18: SendOCR : 1358921728
14:59:18: SendOCR : 1358921728
14:59:18: ExpectOCR : 3237969920
14:59:18: globalSpeedMode : SDR50
14:59:18: globalPowerUp : powerCycle
14:59:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123A20>, 0x0, False) , Command count = 1857 ] 
14:59:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:20: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:20: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123A20>, 0x0, True) , Command count = 1858 ] 
14:59:20: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:20: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1859 ] 
14:59:20: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:20: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:20: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:20: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:20: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:20: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x0610EF00>) , Command count = 1860 ] 
14:59:20: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:20: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC60>, <py_sfcl.CommandDataDefinition object at 0x0610EAE0>) , Command count = 1861 ] 
14:59:20: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:20: [ SetCardRCA(0x1, 0xD555) , Command count = 1862 ] 
14:59:20: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:20: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:20: ####CSD Registe 2.0 Values####
14:59:20: CSD_STRUCTURE                                 :0x1
14:59:20: Reserv1                                       :0x0
14:59:20: Time Access 1 TAAC                            :0xe
14:59:20: Time Access 2 NSAC*100                        :0x0
14:59:20: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:20: Card Command Classess CCC                     :0x5b5
14:59:20: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:20: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:20: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:20: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:20: DSR(driver stage register)  DSR_IMP           :0x0
14:59:20: Reserv2                                       :0x0
14:59:20: Device Size C_SIZE                            :0xedc8
14:59:20: Reserv3                                       :0x0
14:59:20: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:20: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:20: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:20: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:20: Reserv4                                       :0x0
14:59:20: Write Speed Factor R2W_FACTOR                 :0x2
14:59:20: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:20: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:20: FILE_FORMAT_GRP                               :0x0
14:59:20: COPY flag                                     :0x1
14:59:20: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:20: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:20: File_Format                                   :0x0
14:59:20: CRC                                           :0x0
14:59:20: ####CSD Registe Values####  

14:59:20: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:21: [ SetBusWidth(0x4) , Command count = 1863 ] 
14:59:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111240>, 0x0, False) , Command count = 1864 ] 
14:59:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, False) , Command count = 1865 ] 
14:59:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:21: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:21: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1866 ] 
14:59:21: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:21: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:21: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1867 ] 
14:59:21: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:21: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:21: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1868 ] 
14:59:21: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:21: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:21: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1869 ] 
14:59:21: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:21: SendFirstOCR : 1358921728
14:59:21: SendOCR : 1358921728
14:59:21: SendOCR : 1358921728
14:59:21: ExpectOCR : 3237969920
14:59:21: globalSpeedMode : SDR50
14:59:21: globalPowerUp : powerCycle
14:59:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113C0>, 0x0, False) , Command count = 1870 ] 
14:59:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113C0>, 0x0, True) , Command count = 1871 ] 
14:59:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:23: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1872 ] 
14:59:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:23: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A690>, <py_sfcl.CommandDataDefinition object at 0x061110C0>) , Command count = 1873 ] 
14:59:23: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1570>, <py_sfcl.CommandDataDefinition object at 0x06127240>) , Command count = 1874 ] 
14:59:23: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:23: [ SetCardRCA(0x1, 0xD555) , Command count = 1875 ] 
14:59:23: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:23: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:23: ####CSD Registe 2.0 Values####
14:59:23: CSD_STRUCTURE                                 :0x1
14:59:23: Reserv1                                       :0x0
14:59:23: Time Access 1 TAAC                            :0xe
14:59:23: Time Access 2 NSAC*100                        :0x0
14:59:23: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:23: Card Command Classess CCC                     :0x5b5
14:59:23: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:23: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:23: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:23: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:23: DSR(driver stage register)  DSR_IMP           :0x0
14:59:23: Reserv2                                       :0x0
14:59:23: Device Size C_SIZE                            :0xedc8
14:59:23: Reserv3                                       :0x0
14:59:23: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:23: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:23: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:23: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:23: Reserv4                                       :0x0
14:59:23: Write Speed Factor R2W_FACTOR                 :0x2
14:59:23: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:23: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:23: FILE_FORMAT_GRP                               :0x0
14:59:23: COPY flag                                     :0x1
14:59:23: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:23: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:23: File_Format                                   :0x0
14:59:23: CRC                                           :0x0
14:59:23: ####CSD Registe Values####  

14:59:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:23: [ SetBusWidth(0x4) , Command count = 1876 ] 
14:59:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, False) , Command count = 1877 ] 
14:59:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111390>, 0x0, False) , Command count = 1878 ] 
14:59:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:23: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1879 ] 
14:59:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:23: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1880 ] 
14:59:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:23: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1881 ] 
14:59:23: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:23: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1882 ] 
14:59:23: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:23: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:25: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:25: Host Frequency set to 25000 KHz
14:59:25: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:25: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:25: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111030>, 0x0, True) , Command count = 1883 ] 
14:59:25: [GO18_globalSetVolt]### Host voltage value is set.
14:59:25: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, False) , Command count = 1884 ] 
14:59:25: [GO18_globalSetVolt]### Host voltage value is set.
14:59:25: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1885 ] 
14:59:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1886 ] 
14:59:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1887 ] 
14:59:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111BD0>, <py_sfcl.CommandDataDefinition object at 0x0610E8D0>) , Command count = 1888 ] 
14:59:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1990>, <py_sfcl.CommandDataDefinition object at 0x06127AB0>) , Command count = 1889 ] 
14:59:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:25: [ SetCardRCA(0x1, 0xD555) , Command count = 1890 ] 
14:59:26: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:26: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:26: Host Frequency set to 25000 KHz
14:59:26: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:26: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:26: ####CSD Registe 2.0 Values####
14:59:26: CSD_STRUCTURE                                 :0x1
14:59:26: Reserv1                                       :0x0
14:59:26: Time Access 1 TAAC                            :0xe
14:59:26: Time Access 2 NSAC*100                        :0x0
14:59:26: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:26: Card Command Classess CCC                     :0x5b5
14:59:26: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:26: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:26: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:26: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:26: DSR(driver stage register)  DSR_IMP           :0x0
14:59:26: Reserv2                                       :0x0
14:59:26: Device Size C_SIZE                            :0xedc8
14:59:26: Reserv3                                       :0x0
14:59:26: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:26: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:26: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:26: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:26: Reserv4                                       :0x0
14:59:26: Write Speed Factor R2W_FACTOR                 :0x2
14:59:26: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:26: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:26: FILE_FORMAT_GRP                               :0x0
14:59:26: COPY flag                                     :0x1
14:59:26: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:26: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:26: File_Format                                   :0x0
14:59:26: CRC                                           :0x0
14:59:26: ####CSD Registe Values####  

14:59:26: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:26: [GetSCRRegisterEntry] Passed
14:59:26: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:26: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:26: Data_Status_After Erases          : 0
14:59:26: CPRM Security Support             : No Security
14:59:26: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:26: Spec. Version                     : Version 3.0X
14:59:26: Extended Security Support         : Extended_Security_Not_Supported
14:59:26: Command Support                   : COMMAND_SUPPORT
14:59:26: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x061116F0>) , Command count = 1891 ] 
14:59:26: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100570>, <py_sfcl.CommandDataDefinition object at 0x0527C150>) , Command count = 1892 ] 
14:59:26: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:26: [ SetBusWidth(0x4) , Command count = 1893 ] 
14:59:26: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:26: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06111AB0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1894 ] 
14:59:26: Protected Area Size 0x28000
14:59:26: Bus Width           2
14:59:26: Secure Mode         0
14:59:26: Speed  Class        4
14:59:26: Perf Move           0
14:59:26: Au Size             9
14:59:26: Erase Size          15
14:59:26: Erase Timeout       1
14:59:26: Erase offset        1
14:59:26: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:26: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:26: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1895 ] 
14:59:26: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:26: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:26: Host Frequency set to 100000 KHz
14:59:26: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:26: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:26: ####CSD Registe 2.0 Values####
14:59:26: CSD_STRUCTURE                                 :0x1
14:59:26: Reserv1                                       :0x0
14:59:26: Time Access 1 TAAC                            :0xe
14:59:26: Time Access 2 NSAC*100                        :0x0
14:59:26: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:26: Card Command Classess CCC                     :0x5b5
14:59:26: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:26: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:26: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:26: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:26: DSR(driver stage register)  DSR_IMP           :0x0
14:59:26: Reserv2                                       :0x0
14:59:26: Device Size C_SIZE                            :0xedc8
14:59:26: Reserv3                                       :0x0
14:59:26: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:26: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:26: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:26: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:26: Reserv4                                       :0x0
14:59:26: Write Speed Factor R2W_FACTOR                 :0x2
14:59:26: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:26: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:26: FILE_FORMAT_GRP                               :0x0
14:59:26: COPY flag                                     :0x1
14:59:26: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:26: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:26: File_Format                                   :0x0
14:59:26: CRC                                           :0x0
14:59:26: ####CSD Registe Values####  

14:59:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EDE0>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 1896 ] 
14:59:26: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:59:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E600>, <py_sfcl.CommandDataDefinition object at 0x06111330>) , Command count = 1897 ] 
14:59:26: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:59:26: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:59:28: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002A0>, 0x0, False) , Command count = 1898 ] 
14:59:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002A0>, 0x0, True) , Command count = 1899 ] 
14:59:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1900 ] 
14:59:29: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:29: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:59:29: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:29: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:29: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:29: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1901 ] 
14:59:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:29: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100600>, <py_sfcl.CommandDataDefinition object at 0x06111D20>) , Command count = 1902 ] 
14:59:29: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x06127EA0>) , Command count = 1903 ] 
14:59:29: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:29: [ SetCardRCA(0x1, 0xD555) , Command count = 1904 ] 
14:59:29: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:29: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:29: [ SetBusWidth(0x4) , Command count = 1905 ] 
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:29: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1906 ] 
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:29: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:29: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1907 ] 
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:29: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:29: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1908 ] 
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:29: Host Frequency set to 25000 KHz

14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:30: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:30: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1909 ] 
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1690>, 0x0, False) , Command count = 1910 ] 
14:59:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:30: SendOCR: 1107263488
14:59:30: ExcpectOCR: 3254747136
14:59:30: SendFirstOCR: 1107263488
14:59:30: SendNextOCR: 1107263488
14:59:30: SingleCommand: 0
14:59:30: SingleCommandTestType: 1
14:59:30: Identification: 1
14:59:30: ProtocolMode: 1
14:59:30: VerifyType: 0
14:59:30: SendCMD0: 1
14:59:30: SendCMD8: 1
14:59:30: SendCMD58: 1
14:59:30: SetPower: 1
14:59:30: HcsXpcS18r000: 16744448
14:59:30: HcsXpcS18r001: 33521664
14:59:30: HcsXpcS18r010: 285179904
14:59:30: HcsXpcS18r011: 301957120
14:59:30: HcsXpcS18r100: 1090486272
14:59:30: HcsXpcS18r101: 1107263488
14:59:30: HcsXpcS18r110: 1358921728
14:59:30: HcsXpcS18r111: 1375698944
14:59:30: ReadyCcs18a000: 16744448
14:59:30: ReadyCcs18a001: 33521664
14:59:30: ReadyCcs18a010: 1090486272
14:59:30: ReadyCcs18a011: 1107263488
14:59:30: ReadyCcs18a100: 2164228096
14:59:30: ReadyCcs18a101: 2181005312
14:59:30: ReadyCcs18a110: 3237969920
14:59:30: ReadyCcs18a111: 3254747136
14:59:30: Card Capacity is : 32.000000 GB
14:59:30: SendFirstOCR : 1358921728
14:59:30: SendOCR : 1358921728
14:59:30: SendOCR : 1358921728
14:59:30: ExpectOCR : 3237969920
14:59:30: globalSpeedMode : SDR50
14:59:30: globalPowerUp : powerCycle
14:59:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EB70>, 0x0, False) , Command count = 1911 ] 
14:59:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EB70>, 0x0, True) , Command count = 1912 ] 
14:59:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:32: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1913 ] 
14:59:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x06111810>) , Command count = 1914 ] 
14:59:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F30>, <py_sfcl.CommandDataDefinition object at 0x061115D0>) , Command count = 1915 ] 
14:59:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:32: [ SetCardRCA(0x1, 0xD555) , Command count = 1916 ] 
14:59:32: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:32: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:32: ####CSD Registe 2.0 Values####
14:59:32: CSD_STRUCTURE                                 :0x1
14:59:32: Reserv1                                       :0x0
14:59:32: Time Access 1 TAAC                            :0xe
14:59:32: Time Access 2 NSAC*100                        :0x0
14:59:32: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:32: Card Command Classess CCC                     :0x5b5
14:59:32: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:32: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:32: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:32: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:32: DSR(driver stage register)  DSR_IMP           :0x0
14:59:32: Reserv2                                       :0x0
14:59:32: Device Size C_SIZE                            :0xedc8
14:59:32: Reserv3                                       :0x0
14:59:32: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:32: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:32: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:32: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:32: Reserv4                                       :0x0
14:59:32: Write Speed Factor R2W_FACTOR                 :0x2
14:59:32: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:32: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:32: FILE_FORMAT_GRP                               :0x0
14:59:32: COPY flag                                     :0x1
14:59:32: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:32: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:32: File_Format                                   :0x0
14:59:32: CRC                                           :0x0
14:59:32: ####CSD Registe Values####  

14:59:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:32: [ SetBusWidth(0x4) , Command count = 1917 ] 
14:59:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x061197E0>, 0x0, False) , Command count = 1918 ] 
14:59:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119330>, 0x0, False) , Command count = 1919 ] 
14:59:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:32: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:32: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1920 ] 
14:59:32: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:32: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:32: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1921 ] 
14:59:32: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:32: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:32: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1922 ] 
14:59:32: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:32: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:33: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1923 ] 
14:59:33: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:33: SendFirstOCR : 1358921728
14:59:33: SendOCR : 1358921728
14:59:33: SendOCR : 1358921728
14:59:33: ExpectOCR : 3237969920
14:59:33: globalSpeedMode : SDR50
14:59:33: globalPowerUp : powerCycle
14:59:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119BD0>, 0x0, False) , Command count = 1924 ] 
14:59:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119BD0>, 0x0, True) , Command count = 1925 ] 
14:59:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:35: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1926 ] 
14:59:35: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:35: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:35: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:35: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:35: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E70>, <py_sfcl.CommandDataDefinition object at 0x06111D80>) , Command count = 1927 ] 
14:59:35: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195D0>, <py_sfcl.CommandDataDefinition object at 0x06127DE0>) , Command count = 1928 ] 
14:59:35: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:35: [ SetCardRCA(0x1, 0xD555) , Command count = 1929 ] 
14:59:35: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:35: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:35: ####CSD Registe 2.0 Values####
14:59:35: CSD_STRUCTURE                                 :0x1
14:59:35: Reserv1                                       :0x0
14:59:35: Time Access 1 TAAC                            :0xe
14:59:35: Time Access 2 NSAC*100                        :0x0
14:59:35: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:35: Card Command Classess CCC                     :0x5b5
14:59:35: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:35: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:35: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:35: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:35: DSR(driver stage register)  DSR_IMP           :0x0
14:59:35: Reserv2                                       :0x0
14:59:35: Device Size C_SIZE                            :0xedc8
14:59:35: Reserv3                                       :0x0
14:59:35: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:35: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:35: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:35: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:35: Reserv4                                       :0x0
14:59:35: Write Speed Factor R2W_FACTOR                 :0x2
14:59:35: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:35: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:35: FILE_FORMAT_GRP                               :0x0
14:59:35: COPY flag                                     :0x1
14:59:35: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:35: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:35: File_Format                                   :0x0
14:59:35: CRC                                           :0x0
14:59:35: ####CSD Registe Values####  

14:59:35: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:35: [ SetBusWidth(0x4) , Command count = 1930 ] 
14:59:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x061232D0>, 0x0, False) , Command count = 1931 ] 
14:59:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:35: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:35: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111090>, 0x0, False) , Command count = 1932 ] 
14:59:35: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:35: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:35: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1933 ] 
14:59:35: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:35: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:35: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1934 ] 
14:59:35: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:35: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:35: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1935 ] 
14:59:35: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:35: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:35: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1936 ] 
14:59:35: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:35: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:37: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:37: Host Frequency set to 25000 KHz
14:59:37: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:37: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:37: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:37: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EF90>, 0x0, True) , Command count = 1937 ] 
14:59:37: [GO18_globalSetVolt]### Host voltage value is set.
14:59:37: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:37: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119300>, 0x0, False) , Command count = 1938 ] 
14:59:37: [GO18_globalSetVolt]### Host voltage value is set.
14:59:37: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1939 ] 
14:59:37: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1940 ] 
14:59:37: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:37: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:37: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:37: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:37: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1941 ] 
14:59:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:37: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119960>, <py_sfcl.CommandDataDefinition object at 0x06119780>) , Command count = 1942 ] 
14:59:37: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061199C0>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 1943 ] 
14:59:37: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:37: [ SetCardRCA(0x1, 0xD555) , Command count = 1944 ] 
14:59:38: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:38: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:38: Host Frequency set to 25000 KHz
14:59:38: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:38: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:38: ####CSD Registe 2.0 Values####
14:59:38: CSD_STRUCTURE                                 :0x1
14:59:38: Reserv1                                       :0x0
14:59:38: Time Access 1 TAAC                            :0xe
14:59:38: Time Access 2 NSAC*100                        :0x0
14:59:38: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:38: Card Command Classess CCC                     :0x5b5
14:59:38: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:38: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:38: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:38: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:38: DSR(driver stage register)  DSR_IMP           :0x0
14:59:38: Reserv2                                       :0x0
14:59:38: Device Size C_SIZE                            :0xedc8
14:59:38: Reserv3                                       :0x0
14:59:38: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:38: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:38: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:38: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:38: Reserv4                                       :0x0
14:59:38: Write Speed Factor R2W_FACTOR                 :0x2
14:59:38: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:38: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:38: FILE_FORMAT_GRP                               :0x0
14:59:38: COPY flag                                     :0x1
14:59:38: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:38: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:38: File_Format                                   :0x0
14:59:38: CRC                                           :0x0
14:59:38: ####CSD Registe Values####  

14:59:38: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:38: [GetSCRRegisterEntry] Passed
14:59:38: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:38: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:38: Data_Status_After Erases          : 0
14:59:38: CPRM Security Support             : No Security
14:59:38: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:38: Spec. Version                     : Version 3.0X
14:59:38: Extended Security Support         : Extended_Security_Not_Supported
14:59:38: Command Support                   : COMMAND_SUPPORT
14:59:38: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E9F0>, <py_sfcl.CommandDataDefinition object at 0x061190C0>) , Command count = 1945 ] 
14:59:38: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC90>, <py_sfcl.CommandDataDefinition object at 0x061193F0>) , Command count = 1946 ] 
14:59:38: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:38: [ SetBusWidth(0x4) , Command count = 1947 ] 
14:59:38: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:38: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061196C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 1948 ] 
14:59:38: Protected Area Size 0x28000
14:59:38: Bus Width           2
14:59:38: Secure Mode         0
14:59:38: Speed  Class        4
14:59:38: Perf Move           0
14:59:38: Au Size             9
14:59:38: Erase Size          15
14:59:38: Erase Timeout       1
14:59:38: Erase offset        1
14:59:38: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:38: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:38: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:38: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1949 ] 
14:59:38: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:38: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:38: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:38: Host Frequency set to 100000 KHz
14:59:38: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:38: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:38: ####CSD Registe 2.0 Values####
14:59:38: CSD_STRUCTURE                                 :0x1
14:59:38: Reserv1                                       :0x0
14:59:38: Time Access 1 TAAC                            :0xe
14:59:38: Time Access 2 NSAC*100                        :0x0
14:59:38: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:38: Card Command Classess CCC                     :0x5b5
14:59:38: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:38: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:38: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:38: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:38: DSR(driver stage register)  DSR_IMP           :0x0
14:59:38: Reserv2                                       :0x0
14:59:38: Device Size C_SIZE                            :0xedc8
14:59:38: Reserv3                                       :0x0
14:59:38: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:38: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:38: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:38: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:38: Reserv4                                       :0x0
14:59:38: Write Speed Factor R2W_FACTOR                 :0x2
14:59:38: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:38: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:38: FILE_FORMAT_GRP                               :0x0
14:59:38: COPY flag                                     :0x1
14:59:38: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:38: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:38: File_Format                                   :0x0
14:59:38: CRC                                           :0x0
14:59:38: ####CSD Registe Values####  

14:59:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x06119CC0>) , Command count = 1950 ] 
14:59:38: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:59:38: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1E0>, <py_sfcl.CommandDataDefinition object at 0x06119D50>) , Command count = 1951 ] 
14:59:38: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:59:38: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:59:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111E10>, 0x0, False) , Command count = 1952 ] 
14:59:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111E10>, 0x0, True) , Command count = 1953 ] 
14:59:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1954 ] 
14:59:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:40: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:59:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:40: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1955 ] 
14:59:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:40: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118D0>, <py_sfcl.CommandDataDefinition object at 0x06119AE0>) , Command count = 1956 ] 
14:59:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x061277B0>) , Command count = 1957 ] 
14:59:40: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:40: [ SetCardRCA(0x1, 0xD555) , Command count = 1958 ] 
14:59:40: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:40: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:40: [ SetBusWidth(0x4) , Command count = 1959 ] 
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1960 ] 
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:40: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1961 ] 
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:40: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1962 ] 
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:40: Host Frequency set to 25000 KHz

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 1963 ] 
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E300>, 0x0, False) , Command count = 1964 ] 
14:59:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:40: SendOCR: 1107263488
14:59:40: ExcpectOCR: 3254747136
14:59:40: SendFirstOCR: 1107263488
14:59:40: SendNextOCR: 1107263488
14:59:40: SingleCommand: 0
14:59:40: SingleCommandTestType: 1
14:59:40: Identification: 1
14:59:40: ProtocolMode: 1
14:59:40: VerifyType: 0
14:59:40: SendCMD0: 1
14:59:40: SendCMD8: 1
14:59:40: SendCMD58: 1
14:59:40: SetPower: 1
14:59:40: HcsXpcS18r000: 16744448
14:59:40: HcsXpcS18r001: 33521664
14:59:40: HcsXpcS18r010: 285179904
14:59:40: HcsXpcS18r011: 301957120
14:59:40: HcsXpcS18r100: 1090486272
14:59:40: HcsXpcS18r101: 1107263488
14:59:40: HcsXpcS18r110: 1358921728
14:59:40: HcsXpcS18r111: 1375698944
14:59:40: ReadyCcs18a000: 16744448
14:59:40: ReadyCcs18a001: 33521664
14:59:40: ReadyCcs18a010: 1090486272
14:59:40: ReadyCcs18a011: 1107263488
14:59:40: ReadyCcs18a100: 2164228096
14:59:40: ReadyCcs18a101: 2181005312
14:59:40: ReadyCcs18a110: 3237969920
14:59:40: ReadyCcs18a111: 3254747136
14:59:40: Card Capacity is : 32.000000 GB
14:59:40: SendFirstOCR : 1358921728
14:59:40: SendOCR : 1358921728
14:59:40: SendOCR : 1358921728
14:59:40: ExpectOCR : 3237969920
14:59:40: globalSpeedMode : SDR50
14:59:40: globalPowerUp : powerCycle
14:59:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E720>, 0x0, False) , Command count = 1965 ] 
14:59:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:42: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E720>, 0x0, True) , Command count = 1966 ] 
14:59:42: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:42: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1967 ] 
14:59:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x06119F60>) , Command count = 1968 ] 
14:59:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119570>, <py_sfcl.CommandDataDefinition object at 0x06119210>) , Command count = 1969 ] 
14:59:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:43: [ SetCardRCA(0x1, 0xD555) , Command count = 1970 ] 
14:59:43: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:43: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:43: ####CSD Registe 2.0 Values####
14:59:43: CSD_STRUCTURE                                 :0x1
14:59:43: Reserv1                                       :0x0
14:59:43: Time Access 1 TAAC                            :0xe
14:59:43: Time Access 2 NSAC*100                        :0x0
14:59:43: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:43: Card Command Classess CCC                     :0x5b5
14:59:43: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:43: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:43: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:43: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:43: DSR(driver stage register)  DSR_IMP           :0x0
14:59:43: Reserv2                                       :0x0
14:59:43: Device Size C_SIZE                            :0xedc8
14:59:43: Reserv3                                       :0x0
14:59:43: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:43: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:43: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:43: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:43: Reserv4                                       :0x0
14:59:43: Write Speed Factor R2W_FACTOR                 :0x2
14:59:43: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:43: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:43: FILE_FORMAT_GRP                               :0x0
14:59:43: COPY flag                                     :0x1
14:59:43: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:43: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:43: File_Format                                   :0x0
14:59:43: CRC                                           :0x0
14:59:43: ####CSD Registe Values####  

14:59:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:43: [ SetBusWidth(0x4) , Command count = 1971 ] 
14:59:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061191B0>, 0x0, False) , Command count = 1972 ] 
14:59:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x061197B0>, 0x0, False) , Command count = 1973 ] 
14:59:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:43: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:43: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1974 ] 
14:59:43: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:43: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:43: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1975 ] 
14:59:43: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:43: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:43: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1976 ] 
14:59:43: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:43: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:43: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1977 ] 
14:59:43: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:43: SendFirstOCR : 1358921728
14:59:43: SendOCR : 1358921728
14:59:43: SendOCR : 1358921728
14:59:43: ExpectOCR : 3237969920
14:59:43: globalSpeedMode : SDR50
14:59:43: globalPowerUp : powerCycle
14:59:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E090>, 0x0, False) , Command count = 1978 ] 
14:59:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E090>, 0x0, True) , Command count = 1979 ] 
14:59:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:45: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 1980 ] 
14:59:45: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:45: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:45: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:45: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:45: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E0C0>, <py_sfcl.CommandDataDefinition object at 0x0611EB10>) , Command count = 1981 ] 
14:59:45: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111FC0>, <py_sfcl.CommandDataDefinition object at 0x06127D50>) , Command count = 1982 ] 
14:59:45: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:45: [ SetCardRCA(0x1, 0xD555) , Command count = 1983 ] 
14:59:45: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:45: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:45: ####CSD Registe 2.0 Values####
14:59:45: CSD_STRUCTURE                                 :0x1
14:59:45: Reserv1                                       :0x0
14:59:45: Time Access 1 TAAC                            :0xe
14:59:45: Time Access 2 NSAC*100                        :0x0
14:59:45: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:45: Card Command Classess CCC                     :0x5b5
14:59:45: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:45: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:45: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:45: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:45: DSR(driver stage register)  DSR_IMP           :0x0
14:59:45: Reserv2                                       :0x0
14:59:45: Device Size C_SIZE                            :0xedc8
14:59:45: Reserv3                                       :0x0
14:59:45: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:45: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:45: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:45: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:45: Reserv4                                       :0x0
14:59:45: Write Speed Factor R2W_FACTOR                 :0x2
14:59:45: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:45: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:45: FILE_FORMAT_GRP                               :0x0
14:59:45: COPY flag                                     :0x1
14:59:45: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:45: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:45: File_Format                                   :0x0
14:59:45: CRC                                           :0x0
14:59:45: ####CSD Registe Values####  

14:59:45: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:45: [ SetBusWidth(0x4) , Command count = 1984 ] 
14:59:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119C00>, 0x0, False) , Command count = 1985 ] 
14:59:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:45: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:45: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E5D0>, 0x0, False) , Command count = 1986 ] 
14:59:45: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:45: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:45: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1987 ] 
14:59:45: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:45: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:45: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1988 ] 
14:59:45: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:45: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:45: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 1989 ] 
14:59:45: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:45: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:45: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 1990 ] 
14:59:45: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:45: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:47: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:47: Host Frequency set to 25000 KHz
14:59:47: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:47: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:47: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EE40>, 0x0, True) , Command count = 1991 ] 
14:59:47: [GO18_globalSetVolt]### Host voltage value is set.
14:59:47: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E180>, 0x0, False) , Command count = 1992 ] 
14:59:47: [GO18_globalSetVolt]### Host voltage value is set.
14:59:47: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 1993 ] 
14:59:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 1994 ] 
14:59:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:48: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 1995 ] 
14:59:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ECC0>, <py_sfcl.CommandDataDefinition object at 0x06119BA0>) , Command count = 1996 ] 
14:59:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF60>, <py_sfcl.CommandDataDefinition object at 0x06127D50>) , Command count = 1997 ] 
14:59:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:48: [ SetCardRCA(0x1, 0xD555) , Command count = 1998 ] 
14:59:48: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:48: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:48: Host Frequency set to 25000 KHz
14:59:48: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:48: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:48: ####CSD Registe 2.0 Values####
14:59:48: CSD_STRUCTURE                                 :0x1
14:59:48: Reserv1                                       :0x0
14:59:48: Time Access 1 TAAC                            :0xe
14:59:48: Time Access 2 NSAC*100                        :0x0
14:59:48: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:48: Card Command Classess CCC                     :0x5b5
14:59:48: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:48: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:48: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:48: DSR(driver stage register)  DSR_IMP           :0x0
14:59:48: Reserv2                                       :0x0
14:59:48: Device Size C_SIZE                            :0xedc8
14:59:48: Reserv3                                       :0x0
14:59:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:48: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:48: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:48: Reserv4                                       :0x0
14:59:48: Write Speed Factor R2W_FACTOR                 :0x2
14:59:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:48: FILE_FORMAT_GRP                               :0x0
14:59:48: COPY flag                                     :0x1
14:59:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:48: File_Format                                   :0x0
14:59:48: CRC                                           :0x0
14:59:48: ####CSD Registe Values####  

14:59:48: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:48: [GetSCRRegisterEntry] Passed
14:59:48: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:48: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:48: Data_Status_After Erases          : 0
14:59:48: CPRM Security Support             : No Security
14:59:48: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:48: Spec. Version                     : Version 3.0X
14:59:48: Extended Security Support         : Extended_Security_Not_Supported
14:59:48: Command Support                   : COMMAND_SUPPORT
14:59:48: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1F00>, <py_sfcl.CommandDataDefinition object at 0x0611E9C0>) , Command count = 1999 ] 
14:59:48: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D80>, <py_sfcl.CommandDataDefinition object at 0x06111DE0>) , Command count = 2000 ] 
14:59:48: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:48: [ SetBusWidth(0x4) , Command count = 2001 ] 
14:59:48: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:48: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0611EDB0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2002 ] 
14:59:48: Protected Area Size 0x28000
14:59:48: Bus Width           2
14:59:48: Secure Mode         0
14:59:48: Speed  Class        4
14:59:48: Perf Move           0
14:59:48: Au Size             9
14:59:48: Erase Size          15
14:59:48: Erase Timeout       1
14:59:48: Erase offset        1
14:59:48: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:48: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:48: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2003 ] 
14:59:48: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:48: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:48: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:48: Host Frequency set to 100000 KHz
14:59:48: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:48: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:48: ####CSD Registe 2.0 Values####
14:59:48: CSD_STRUCTURE                                 :0x1
14:59:48: Reserv1                                       :0x0
14:59:48: Time Access 1 TAAC                            :0xe
14:59:48: Time Access 2 NSAC*100                        :0x0
14:59:48: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:48: Card Command Classess CCC                     :0x5b5
14:59:48: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:48: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:48: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:48: DSR(driver stage register)  DSR_IMP           :0x0
14:59:48: Reserv2                                       :0x0
14:59:48: Device Size C_SIZE                            :0xedc8
14:59:48: Reserv3                                       :0x0
14:59:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:48: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:48: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:48: Reserv4                                       :0x0
14:59:48: Write Speed Factor R2W_FACTOR                 :0x2
14:59:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:48: FILE_FORMAT_GRP                               :0x0
14:59:48: COPY flag                                     :0x1
14:59:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:48: File_Format                                   :0x0
14:59:48: CRC                                           :0x0
14:59:48: ####CSD Registe Values####  

14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DE0>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 2004 ] 
14:59:48: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
14:59:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC90>, <py_sfcl.CommandDataDefinition object at 0x0611EC60>) , Command count = 2005 ] 
14:59:48: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
14:59:48: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


14:59:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123270>, 0x0, False) , Command count = 2006 ] 
14:59:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123270>, 0x0, True) , Command count = 2007 ] 
14:59:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:50: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2008 ] 
14:59:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
14:59:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2009 ] 
14:59:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 2010 ] 
14:59:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7B0>, <py_sfcl.CommandDataDefinition object at 0x06127B40>) , Command count = 2011 ] 
14:59:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:50: [ SetCardRCA(0x1, 0xD555) , Command count = 2012 ] 
14:59:50: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:50: [ SetBusWidth(0x4) , Command count = 2013 ] 
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2014 ] 
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:50: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:50: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2015 ] 
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:50: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:50: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2016 ] 
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:51: Host Frequency set to 25000 KHz

14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:51: [32799, 49153, 32783, 32783, 32769, 32769]
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:51: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2017 ] 
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
14:59:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119FC0>, 0x0, False) , Command count = 2018 ] 
14:59:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:51: SendOCR: 1107263488
14:59:51: ExcpectOCR: 3254747136
14:59:51: SendFirstOCR: 1107263488
14:59:51: SendNextOCR: 1107263488
14:59:51: SingleCommand: 0
14:59:51: SingleCommandTestType: 1
14:59:51: Identification: 1
14:59:51: ProtocolMode: 1
14:59:51: VerifyType: 0
14:59:51: SendCMD0: 1
14:59:51: SendCMD8: 1
14:59:51: SendCMD58: 1
14:59:51: SetPower: 1
14:59:51: HcsXpcS18r000: 16744448
14:59:51: HcsXpcS18r001: 33521664
14:59:51: HcsXpcS18r010: 285179904
14:59:51: HcsXpcS18r011: 301957120
14:59:51: HcsXpcS18r100: 1090486272
14:59:51: HcsXpcS18r101: 1107263488
14:59:51: HcsXpcS18r110: 1358921728
14:59:51: HcsXpcS18r111: 1375698944
14:59:51: ReadyCcs18a000: 16744448
14:59:51: ReadyCcs18a001: 33521664
14:59:51: ReadyCcs18a010: 1090486272
14:59:51: ReadyCcs18a011: 1107263488
14:59:51: ReadyCcs18a100: 2164228096
14:59:51: ReadyCcs18a101: 2181005312
14:59:51: ReadyCcs18a110: 3237969920
14:59:51: ReadyCcs18a111: 3254747136
14:59:51: Card Capacity is : 32.000000 GB
14:59:51: SendFirstOCR : 1358921728
14:59:51: SendOCR : 1358921728
14:59:51: SendOCR : 1358921728
14:59:51: ExpectOCR : 3237969920
14:59:51: globalSpeedMode : SDR50
14:59:51: globalPowerUp : powerCycle
14:59:53: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EAE0>, 0x0, False) , Command count = 2019 ] 
14:59:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:53: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:53: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EAE0>, 0x0, True) , Command count = 2020 ] 
14:59:53: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:53: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2021 ] 
14:59:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C30>, <py_sfcl.CommandDataDefinition object at 0x06123060>) , Command count = 2022 ] 
14:59:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E4E0>, <py_sfcl.CommandDataDefinition object at 0x06127C00>) , Command count = 2023 ] 
14:59:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:53: [ SetCardRCA(0x1, 0xD555) , Command count = 2024 ] 
14:59:54: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:54: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:54: ####CSD Registe 2.0 Values####
14:59:54: CSD_STRUCTURE                                 :0x1
14:59:54: Reserv1                                       :0x0
14:59:54: Time Access 1 TAAC                            :0xe
14:59:54: Time Access 2 NSAC*100                        :0x0
14:59:54: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:54: Card Command Classess CCC                     :0x5b5
14:59:54: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:54: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:54: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:54: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:54: DSR(driver stage register)  DSR_IMP           :0x0
14:59:54: Reserv2                                       :0x0
14:59:54: Device Size C_SIZE                            :0xedc8
14:59:54: Reserv3                                       :0x0
14:59:54: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:54: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:54: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:54: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:54: Reserv4                                       :0x0
14:59:54: Write Speed Factor R2W_FACTOR                 :0x2
14:59:54: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:54: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:54: FILE_FORMAT_GRP                               :0x0
14:59:54: COPY flag                                     :0x1
14:59:54: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:54: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:54: File_Format                                   :0x0
14:59:54: CRC                                           :0x0
14:59:54: ####CSD Registe Values####  

14:59:54: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:54: [ SetBusWidth(0x4) , Command count = 2025 ] 
14:59:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119F00>, 0x0, False) , Command count = 2026 ] 
14:59:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123BD0>, 0x0, False) , Command count = 2027 ] 
14:59:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:54: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:54: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2028 ] 
14:59:54: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:54: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:54: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2029 ] 
14:59:54: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:54: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:54: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2030 ] 
14:59:54: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:54: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:54: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2031 ] 
14:59:54: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:54: SendFirstOCR : 1358921728
14:59:54: SendOCR : 1358921728
14:59:54: SendOCR : 1358921728
14:59:54: ExpectOCR : 3237969920
14:59:54: globalSpeedMode : SDR50
14:59:54: globalPowerUp : powerCycle
14:59:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123F30>, 0x0, False) , Command count = 2032 ] 
14:59:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
14:59:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123F30>, 0x0, True) , Command count = 2033 ] 
14:59:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:56: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
14:59:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2034 ] 
14:59:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
14:59:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123CF0>, <py_sfcl.CommandDataDefinition object at 0x061238A0>) , Command count = 2035 ] 
14:59:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x06127D80>) , Command count = 2036 ] 
14:59:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
14:59:56: [ SetCardRCA(0x1, 0xD555) , Command count = 2037 ] 
14:59:56: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:56: ####CSD Registe 2.0 Values####
14:59:56: CSD_STRUCTURE                                 :0x1
14:59:56: Reserv1                                       :0x0
14:59:56: Time Access 1 TAAC                            :0xe
14:59:56: Time Access 2 NSAC*100                        :0x0
14:59:56: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:56: Card Command Classess CCC                     :0x5b5
14:59:56: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:56: DSR(driver stage register)  DSR_IMP           :0x0
14:59:56: Reserv2                                       :0x0
14:59:56: Device Size C_SIZE                            :0xedc8
14:59:56: Reserv3                                       :0x0
14:59:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:56: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:56: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:56: Reserv4                                       :0x0
14:59:56: Write Speed Factor R2W_FACTOR                 :0x2
14:59:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:56: FILE_FORMAT_GRP                               :0x0
14:59:56: COPY flag                                     :0x1
14:59:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:56: File_Format                                   :0x0
14:59:56: CRC                                           :0x0
14:59:56: ####CSD Registe Values####  

14:59:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

14:59:56: [ SetBusWidth(0x4) , Command count = 2038 ] 
14:59:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x061233C0>, 0x0, False) , Command count = 2039 ] 
14:59:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:56: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
14:59:56: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123030>, 0x0, False) , Command count = 2040 ] 
14:59:56: [DVTCommonLib]### setVolt[INFO] :Voltage is set

14:59:56: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:56: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2041 ] 
14:59:56: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:56: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:56: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2042 ] 
14:59:56: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:56: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:56: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2043 ] 
14:59:56: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:56: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
14:59:56: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2044 ] 
14:59:56: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

14:59:56: [GO4_globalInitCard]### Switch to Specify Card Type
14:59:58: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:58: Host Frequency set to 25000 KHz
14:59:58: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:58: [GO18_globalSetVolt]### Set Host Voltage value.
14:59:58: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
14:59:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EBA0>, 0x0, True) , Command count = 2045 ] 
14:59:58: [GO18_globalSetVolt]### Host voltage value is set.
14:59:58: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
14:59:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E3F0>, 0x0, False) , Command count = 2046 ] 
14:59:58: [GO18_globalSetVolt]### Host voltage value is set.
14:59:58: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2047 ] 
14:59:58: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
14:59:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2048 ] 
14:59:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
14:59:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
14:59:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
14:59:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
14:59:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
14:59:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2049 ] 
14:59:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
14:59:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
14:59:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC60>, <py_sfcl.CommandDataDefinition object at 0x06127ED0>) , Command count = 2050 ] 
14:59:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
14:59:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x06127390>) , Command count = 2051 ] 
14:59:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
14:59:59: [ SetCardRCA(0x1, 0xD555) , Command count = 2052 ] 
14:59:59: [DVTCommonLib]### Identification :Idenfication of card completed 

14:59:59: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
14:59:59: Host Frequency set to 25000 KHz
14:59:59: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
14:59:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:59: ####CSD Registe 2.0 Values####
14:59:59: CSD_STRUCTURE                                 :0x1
14:59:59: Reserv1                                       :0x0
14:59:59: Time Access 1 TAAC                            :0xe
14:59:59: Time Access 2 NSAC*100                        :0x0
14:59:59: Data Transfer Rate TRAN_SPEED                 :0x32
14:59:59: Card Command Classess CCC                     :0x5b5
14:59:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:59: DSR(driver stage register)  DSR_IMP           :0x0
14:59:59: Reserv2                                       :0x0
14:59:59: Device Size C_SIZE                            :0xedc8
14:59:59: Reserv3                                       :0x0
14:59:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:59: Reserv4                                       :0x0
14:59:59: Write Speed Factor R2W_FACTOR                 :0x2
14:59:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:59: FILE_FORMAT_GRP                               :0x0
14:59:59: COPY flag                                     :0x1
14:59:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:59: File_Format                                   :0x0
14:59:59: CRC                                           :0x0
14:59:59: ####CSD Registe Values####  

14:59:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
14:59:59: [GetSCRRegisterEntry] Passed
14:59:59: SCR_STRUCTURE Version             : SCR_VERSION_1.0
14:59:59: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
14:59:59: Data_Status_After Erases          : 0
14:59:59: CPRM Security Support             : No Security
14:59:59: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
14:59:59: Spec. Version                     : Version 3.0X
14:59:59: Extended Security Support         : Extended_Security_Not_Supported
14:59:59: Command Support                   : COMMAND_SUPPORT
14:59:59: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

14:59:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E240>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 2053 ] 
14:59:59: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
14:59:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py_sfcl.CommandDataDefinition object at 0x05172060>) , Command count = 2054 ] 
14:59:59: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
14:59:59: [ SetBusWidth(0x4) , Command count = 2055 ] 
14:59:59: [DVTCommonLib]### GetSDStatus :######SD Status#######
14:59:59: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123E10>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2056 ] 
14:59:59: Protected Area Size 0x28000
14:59:59: Bus Width           2
14:59:59: Secure Mode         0
14:59:59: Speed  Class        4
14:59:59: Perf Move           0
14:59:59: Au Size             9
14:59:59: Erase Size          15
14:59:59: Erase Timeout       1
14:59:59: Erase offset        1
14:59:59: [DVTCommonLib]### GetSDStatus :######SD Status#######

14:59:59: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
14:59:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
14:59:59: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2057 ] 
14:59:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
14:59:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

14:59:59: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
14:59:59: Host Frequency set to 100000 KHz
14:59:59: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
14:59:59: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
14:59:59: ####CSD Registe 2.0 Values####
14:59:59: CSD_STRUCTURE                                 :0x1
14:59:59: Reserv1                                       :0x0
14:59:59: Time Access 1 TAAC                            :0xe
14:59:59: Time Access 2 NSAC*100                        :0x0
14:59:59: Data Transfer Rate TRAN_SPEED                 :0xb
14:59:59: Card Command Classess CCC                     :0x5b5
14:59:59: Max Read Data Block Length  READ_BL_LEN       :0x9
14:59:59: Partial Blocks for Read READ_BL_PARTIAL       :0x0
14:59:59: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
14:59:59: Read Block Misalignment READ_BLK_MISALIGN     :0x0
14:59:59: DSR(driver stage register)  DSR_IMP           :0x0
14:59:59: Reserv2                                       :0x0
14:59:59: Device Size C_SIZE                            :0xedc8
14:59:59: Reserv3                                       :0x0
14:59:59: Erase Single Block Enable ERASE_BLK_EN        :0x1
14:59:59: Erase Sector Size SECTOR_SIZE                 :0x7f
14:59:59: Write Protect Group Size WP_GRP_SIZE          :0x0
14:59:59: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
14:59:59: Reserv4                                       :0x0
14:59:59: Write Speed Factor R2W_FACTOR                 :0x2
14:59:59: Max. Write Data Block Length WRITE_BL_LEN     :0x9
14:59:59: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
14:59:59: FILE_FORMAT_GRP                               :0x0
14:59:59: COPY flag                                     :0x1
14:59:59: Permanent Write Protection PERM_WRITE_PROTECT :0x0
14:59:59: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
14:59:59: File_Format                                   :0x0
14:59:59: CRC                                           :0x0
14:59:59: ####CSD Registe Values####  

14:59:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA20>, <py_sfcl.CommandDataDefinition object at 0x0526B450>) , Command count = 2058 ] 
15:00:00: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:00:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A060>, <py_sfcl.CommandDataDefinition object at 0x0528AF60>) , Command count = 2059 ] 
15:00:00: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:00:00: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:00:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285960>, 0x0, False) , Command count = 2060 ] 
15:00:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285960>, 0x0, True) , Command count = 2061 ] 
15:00:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:00:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2062 ] 
15:00:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:00:02: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:00:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:00:02: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2063 ] 
15:00:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:00:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061232A0>, <py_sfcl.CommandDataDefinition object at 0x060C1BD0>) , Command count = 2064 ] 
15:00:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C19C0>, <py_sfcl.CommandDataDefinition object at 0x06127780>) , Command count = 2065 ] 
15:00:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:00:02: [ SetCardRCA(0x1, 0xD555) , Command count = 2066 ] 
15:00:02: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:02: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:00:02: [ SetBusWidth(0x4) , Command count = 2067 ] 
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:02: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2068 ] 
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:02: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:02: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2069 ] 
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:02: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:02: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2070 ] 
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:02: Host Frequency set to 25000 KHz

15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:03: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:03: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2071 ] 
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:03: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:03: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8A0>, 0x0, False) , Command count = 2072 ] 
15:00:03: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:03: SendOCR: 1107263488
15:00:03: ExcpectOCR: 3254747136
15:00:03: SendFirstOCR: 1107263488
15:00:03: SendNextOCR: 1107263488
15:00:03: SingleCommand: 0
15:00:03: SingleCommandTestType: 1
15:00:03: Identification: 1
15:00:03: ProtocolMode: 1
15:00:03: VerifyType: 0
15:00:03: SendCMD0: 1
15:00:03: SendCMD8: 1
15:00:03: SendCMD58: 1
15:00:03: SetPower: 1
15:00:03: HcsXpcS18r000: 16744448
15:00:03: HcsXpcS18r001: 33521664
15:00:03: HcsXpcS18r010: 285179904
15:00:03: HcsXpcS18r011: 301957120
15:00:03: HcsXpcS18r100: 1090486272
15:00:03: HcsXpcS18r101: 1107263488
15:00:03: HcsXpcS18r110: 1358921728
15:00:03: HcsXpcS18r111: 1375698944
15:00:03: ReadyCcs18a000: 16744448
15:00:03: ReadyCcs18a001: 33521664
15:00:03: ReadyCcs18a010: 1090486272
15:00:03: ReadyCcs18a011: 1107263488
15:00:03: ReadyCcs18a100: 2164228096
15:00:03: ReadyCcs18a101: 2181005312
15:00:03: ReadyCcs18a110: 3237969920
15:00:03: ReadyCcs18a111: 3254747136
15:00:03: Card Capacity is : 32.000000 GB
15:00:03: SendFirstOCR : 1358921728
15:00:03: SendOCR : 1358921728
15:00:03: SendOCR : 1358921728
15:00:03: ExpectOCR : 3237969920
15:00:03: globalSpeedMode : SDR50
15:00:03: globalPowerUp : powerCycle
15:00:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1960>, 0x0, False) , Command count = 2073 ] 
15:00:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1960>, 0x0, True) , Command count = 2074 ] 
15:00:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:05: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:00:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2075 ] 
15:00:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:00:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:05: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x06123450>) , Command count = 2076 ] 
15:00:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A300>, <py_sfcl.CommandDataDefinition object at 0x06127300>) , Command count = 2077 ] 
15:00:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:00:05: [ SetCardRCA(0x1, 0xD555) , Command count = 2078 ] 
15:00:05: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:05: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:05: ####CSD Registe 2.0 Values####
15:00:05: CSD_STRUCTURE                                 :0x1
15:00:05: Reserv1                                       :0x0
15:00:05: Time Access 1 TAAC                            :0xe
15:00:05: Time Access 2 NSAC*100                        :0x0
15:00:05: Data Transfer Rate TRAN_SPEED                 :0x32
15:00:05: Card Command Classess CCC                     :0x5b5
15:00:05: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:05: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:05: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:05: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:05: DSR(driver stage register)  DSR_IMP           :0x0
15:00:05: Reserv2                                       :0x0
15:00:05: Device Size C_SIZE                            :0xedc8
15:00:05: Reserv3                                       :0x0
15:00:05: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:05: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:05: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:05: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:05: Reserv4                                       :0x0
15:00:05: Write Speed Factor R2W_FACTOR                 :0x2
15:00:05: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:05: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:05: FILE_FORMAT_GRP                               :0x0
15:00:05: COPY flag                                     :0x1
15:00:05: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:05: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:05: File_Format                                   :0x0
15:00:05: CRC                                           :0x0
15:00:05: ####CSD Registe Values####  

15:00:05: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:00:05: [ SetBusWidth(0x4) , Command count = 2079 ] 
15:00:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100150>, 0x0, False) , Command count = 2080 ] 
15:00:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100180>, 0x0, False) , Command count = 2081 ] 
15:00:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:05: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2082 ] 
15:00:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:05: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2083 ] 
15:00:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:05: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2084 ] 
15:00:05: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:05: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2085 ] 
15:00:05: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:05: SendFirstOCR : 1358921728
15:00:05: SendOCR : 1358921728
15:00:05: SendOCR : 1358921728
15:00:05: ExpectOCR : 3237969920
15:00:05: globalSpeedMode : SDR50
15:00:05: globalPowerUp : powerCycle
15:00:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C60>, 0x0, False) , Command count = 2086 ] 
15:00:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C60>, 0x0, True) , Command count = 2087 ] 
15:00:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:07: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:00:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2088 ] 
15:00:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:00:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119390>, <py_sfcl.CommandDataDefinition object at 0x060C1630>) , Command count = 2089 ] 
15:00:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x061273C0>) , Command count = 2090 ] 
15:00:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:00:07: [ SetCardRCA(0x1, 0xD555) , Command count = 2091 ] 
15:00:07: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:07: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:07: ####CSD Registe 2.0 Values####
15:00:07: CSD_STRUCTURE                                 :0x1
15:00:07: Reserv1                                       :0x0
15:00:07: Time Access 1 TAAC                            :0xe
15:00:07: Time Access 2 NSAC*100                        :0x0
15:00:07: Data Transfer Rate TRAN_SPEED                 :0x32
15:00:07: Card Command Classess CCC                     :0x5b5
15:00:07: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:07: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:07: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:07: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:07: DSR(driver stage register)  DSR_IMP           :0x0
15:00:07: Reserv2                                       :0x0
15:00:07: Device Size C_SIZE                            :0xedc8
15:00:07: Reserv3                                       :0x0
15:00:07: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:07: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:07: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:07: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:07: Reserv4                                       :0x0
15:00:07: Write Speed Factor R2W_FACTOR                 :0x2
15:00:07: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:07: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:07: FILE_FORMAT_GRP                               :0x0
15:00:07: COPY flag                                     :0x1
15:00:07: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:07: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:07: File_Format                                   :0x0
15:00:07: CRC                                           :0x0
15:00:07: ####CSD Registe Values####  

15:00:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:00:07: [ SetBusWidth(0x4) , Command count = 2092 ] 
15:00:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x05285510>, 0x0, False) , Command count = 2093 ] 
15:00:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=150, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:08: [ SetVolt(<py_sfcl.SDVoltage object at 0x05177EA0>, 0x0, False) , Command count = 2094 ] 
15:00:08: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:08: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:08: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2095 ] 
15:00:08: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:08: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:08: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2096 ] 
15:00:08: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:08: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :MultipleWrite to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:08: [ WrLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0) , Command count = 2097 ] 
15:00:08: [DVTCommonLib]### WriteWithFPGAPattern[INFO] :Done MultipleWrite from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:08: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :MultipleRead to the card at StartLba:0x0 to EndLba:0x32 with Increment Pattern
15:00:08: [ RdLbaNoData(0x0, 0x32, <0x400/0x200, Arb>, py_sfcl.Pattern.INCREMENTAL, True, False, False, False, 0x0, False, 0x0, True) , Command count = 2098 ] 
15:00:08: [DVTCommonLib]### ReadWithFPGAPattern[INFO] :Done MultipleRead from StartLba: 0x0 to EndLba:0x32 with Increment Pattern 

15:00:08: ########################################
15:00:08: Finished Running script SD3UHS103_DVT_SD3_00_3_4_1_1_2_NON_UHS_HOST 
15:00:08: ########################################
15:00:08: ########################################
15:00:08: Stated Running script SD3UHS104_DVT_SD3_00_3_4_1_1_3_SDSC_NOT__SUPPORTED 
15:00:08: ########################################
15:00:08: ###### Running SD3UHS104_DVT_SD3_00_3_4_1_1_3_SDSC_NOT__SUPPORTED
15:00:08: [GO4_globalInitCard]### Switch to Specify Card Type
15:00:10: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:00:10: Host Frequency set to 25000 KHz
15:00:10: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:00:10: [GO18_globalSetVolt]### Set Host Voltage value.
15:00:10: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:00:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127420>, 0x0, True) , Command count = 2099 ] 
15:00:10: [GO18_globalSetVolt]### Host voltage value is set.
15:00:10: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:00:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123390>, 0x0, False) , Command count = 2100 ] 
15:00:10: [GO18_globalSetVolt]### Host voltage value is set.
15:00:10: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2101 ] 
15:00:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:00:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2102 ] 
15:00:10: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:00:10: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:10: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:10: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:00:10: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2103 ] 
15:00:10: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:00:10: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100540>, <py_sfcl.CommandDataDefinition object at 0x06127960>) , Command count = 2104 ] 
15:00:10: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 2105 ] 
15:00:10: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:00:10: [ SetCardRCA(0x1, 0xD555) , Command count = 2106 ] 
15:00:10: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:10: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:00:10: Host Frequency set to 25000 KHz
15:00:10: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:00:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:10: ####CSD Registe 2.0 Values####
15:00:10: CSD_STRUCTURE                                 :0x1
15:00:10: Reserv1                                       :0x0
15:00:10: Time Access 1 TAAC                            :0xe
15:00:10: Time Access 2 NSAC*100                        :0x0
15:00:10: Data Transfer Rate TRAN_SPEED                 :0x32
15:00:10: Card Command Classess CCC                     :0x5b5
15:00:10: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:10: DSR(driver stage register)  DSR_IMP           :0x0
15:00:10: Reserv2                                       :0x0
15:00:10: Device Size C_SIZE                            :0xedc8
15:00:10: Reserv3                                       :0x0
15:00:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:10: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:10: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:10: Reserv4                                       :0x0
15:00:10: Write Speed Factor R2W_FACTOR                 :0x2
15:00:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:10: FILE_FORMAT_GRP                               :0x0
15:00:10: COPY flag                                     :0x1
15:00:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:10: File_Format                                   :0x0
15:00:10: CRC                                           :0x0
15:00:10: ####CSD Registe Values####  

15:00:10: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:00:10: [GetSCRRegisterEntry] Passed
15:00:10: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:00:10: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:00:10: Data_Status_After Erases          : 0
15:00:10: CPRM Security Support             : No Security
15:00:10: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:00:10: Spec. Version                     : Version 3.0X
15:00:10: Extended Security Support         : Extended_Security_Not_Supported
15:00:10: Command Support                   : COMMAND_SUPPORT
15:00:10: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123C30>, <py_sfcl.CommandDataDefinition object at 0x06100510>) , Command count = 2107 ] 
15:00:10: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x0601A510>) , Command count = 2108 ] 
15:00:10: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:00:10: [ SetBusWidth(0x4) , Command count = 2109 ] 
15:00:10: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:00:10: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06100120>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2110 ] 
15:00:10: Protected Area Size 0x28000
15:00:10: Bus Width           2
15:00:10: Secure Mode         0
15:00:10: Speed  Class        4
15:00:10: Perf Move           0
15:00:10: Au Size             9
15:00:10: Erase Size          15
15:00:10: Erase Timeout       1
15:00:10: Erase offset        1
15:00:10: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:00:10: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:00:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:10: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2111 ] 
15:00:10: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:00:10: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:10: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:00:10: Host Frequency set to 100000 KHz
15:00:10: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:00:10: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:10: ####CSD Registe 2.0 Values####
15:00:10: CSD_STRUCTURE                                 :0x1
15:00:10: Reserv1                                       :0x0
15:00:10: Time Access 1 TAAC                            :0xe
15:00:10: Time Access 2 NSAC*100                        :0x0
15:00:10: Data Transfer Rate TRAN_SPEED                 :0xb
15:00:10: Card Command Classess CCC                     :0x5b5
15:00:10: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:10: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:10: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:10: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:10: DSR(driver stage register)  DSR_IMP           :0x0
15:00:10: Reserv2                                       :0x0
15:00:10: Device Size C_SIZE                            :0xedc8
15:00:10: Reserv3                                       :0x0
15:00:10: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:10: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:10: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:10: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:10: Reserv4                                       :0x0
15:00:10: Write Speed Factor R2W_FACTOR                 :0x2
15:00:10: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:10: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:10: FILE_FORMAT_GRP                               :0x0
15:00:10: COPY flag                                     :0x1
15:00:10: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:10: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:10: File_Format                                   :0x0
15:00:10: CRC                                           :0x0
15:00:10: ####CSD Registe Values####  

15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x06100240>) , Command count = 2112 ] 
15:00:10: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:00:10: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E900>, <py_sfcl.CommandDataDefinition object at 0x0610EC30>) , Command count = 2113 ] 
15:00:10: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:00:10: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:00:10: [GO4_globalInitCard]### Switch to Specify Card Type
15:00:12: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:00:12: Host Frequency set to 25000 KHz
15:00:12: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:00:12: [GO18_globalSetVolt]### Set Host Voltage value.
15:00:12: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:00:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EF60>, 0x0, True) , Command count = 2114 ] 
15:00:12: [GO18_globalSetVolt]### Host voltage value is set.
15:00:12: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:00:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123A20>, 0x0, False) , Command count = 2115 ] 
15:00:12: [GO18_globalSetVolt]### Host voltage value is set.
15:00:12: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2116 ] 
15:00:12: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:00:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2117 ] 
15:00:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:00:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:00:13: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2118 ] 
15:00:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:00:13: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E5A0>, <py_sfcl.CommandDataDefinition object at 0x06111690>) , Command count = 2119 ] 
15:00:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EDB0>, <py_sfcl.CommandDataDefinition object at 0x061275D0>) , Command count = 2120 ] 
15:00:13: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:00:13: [ SetCardRCA(0x1, 0xD555) , Command count = 2121 ] 
15:00:13: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:13: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:00:13: Host Frequency set to 25000 KHz
15:00:13: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:00:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:13: ####CSD Registe 2.0 Values####
15:00:13: CSD_STRUCTURE                                 :0x1
15:00:13: Reserv1                                       :0x0
15:00:13: Time Access 1 TAAC                            :0xe
15:00:13: Time Access 2 NSAC*100                        :0x0
15:00:13: Data Transfer Rate TRAN_SPEED                 :0x32
15:00:13: Card Command Classess CCC                     :0x5b5
15:00:13: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:13: DSR(driver stage register)  DSR_IMP           :0x0
15:00:13: Reserv2                                       :0x0
15:00:13: Device Size C_SIZE                            :0xedc8
15:00:13: Reserv3                                       :0x0
15:00:13: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:13: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:13: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:13: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:13: Reserv4                                       :0x0
15:00:13: Write Speed Factor R2W_FACTOR                 :0x2
15:00:13: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:13: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:13: FILE_FORMAT_GRP                               :0x0
15:00:13: COPY flag                                     :0x1
15:00:13: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:13: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:13: File_Format                                   :0x0
15:00:13: CRC                                           :0x0
15:00:13: ####CSD Registe Values####  

15:00:13: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:00:13: [GetSCRRegisterEntry] Passed
15:00:13: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:00:13: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:00:13: Data_Status_After Erases          : 0
15:00:13: CPRM Security Support             : No Security
15:00:13: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:00:13: Spec. Version                     : Version 3.0X
15:00:13: Extended Security Support         : Extended_Security_Not_Supported
15:00:13: Command Support                   : COMMAND_SUPPORT
15:00:13: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x061005A0>) , Command count = 2122 ] 
15:00:13: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x06127C60>) , Command count = 2123 ] 
15:00:13: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:00:13: [ SetBusWidth(0x4) , Command count = 2124 ] 
15:00:13: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:00:13: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061110C0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2125 ] 
15:00:13: Protected Area Size 0x28000
15:00:13: Bus Width           2
15:00:13: Secure Mode         0
15:00:13: Speed  Class        4
15:00:13: Perf Move           0
15:00:13: Au Size             9
15:00:13: Erase Size          15
15:00:13: Erase Timeout       1
15:00:13: Erase offset        1
15:00:13: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:00:13: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:00:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:13: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2126 ] 
15:00:13: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:00:13: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:13: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:00:13: Host Frequency set to 100000 KHz
15:00:13: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:00:13: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:00:13: ####CSD Registe 2.0 Values####
15:00:13: CSD_STRUCTURE                                 :0x1
15:00:13: Reserv1                                       :0x0
15:00:13: Time Access 1 TAAC                            :0xe
15:00:13: Time Access 2 NSAC*100                        :0x0
15:00:13: Data Transfer Rate TRAN_SPEED                 :0xb
15:00:13: Card Command Classess CCC                     :0x5b5
15:00:13: Max Read Data Block Length  READ_BL_LEN       :0x9
15:00:13: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:00:13: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:00:13: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:00:13: DSR(driver stage register)  DSR_IMP           :0x0
15:00:13: Reserv2                                       :0x0
15:00:13: Device Size C_SIZE                            :0xedc8
15:00:13: Reserv3                                       :0x0
15:00:13: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:00:13: Erase Sector Size SECTOR_SIZE                 :0x7f
15:00:13: Write Protect Group Size WP_GRP_SIZE          :0x0
15:00:13: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:00:13: Reserv4                                       :0x0
15:00:13: Write Speed Factor R2W_FACTOR                 :0x2
15:00:13: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:00:13: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:00:13: FILE_FORMAT_GRP                               :0x0
15:00:13: COPY flag                                     :0x1
15:00:13: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:00:13: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:00:13: File_Format                                   :0x0
15:00:13: CRC                                           :0x0
15:00:13: ####CSD Registe Values####  

15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 2127 ] 
15:00:13: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:00:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x06111150>) , Command count = 2128 ] 
15:00:13: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:00:13: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:00:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, False) , Command count = 2129 ] 
15:00:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112A0>, 0x0, True) , Command count = 2130 ] 
15:00:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:15: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:00:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2131 ] 
15:00:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:00:16: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:00:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:00:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:00:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:00:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:00:16: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2132 ] 
15:00:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:00:16: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:00:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x0612D060>) , Command count = 2133 ] 
15:00:16: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:00:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x0610E930>) , Command count = 2134 ] 
15:00:16: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:00:16: [ SetCardRCA(0x1, 0xD555) , Command count = 2135 ] 
15:00:16: [DVTCommonLib]### Identification :Idenfication of card completed 

15:00:16: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:00:16: [ SetBusWidth(0x4) , Command count = 2136 ] 
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:16: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2137 ] 
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:16: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2138 ] 
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:16: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2139 ] 
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:16: Host Frequency set to 25000 KHz

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [32799, 49153, 32783, 32783, 32769, 32769]
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:00:16: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2140 ] 
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:00:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:00:16: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x061276C0>, 0x0, False) , Command count = 2141 ] 
15:00:16: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:16: SendOCR: 1107263488
15:00:16: ExcpectOCR: 3254747136
15:00:16: SendFirstOCR: 1107263488
15:00:16: SendNextOCR: 1107263488
15:00:16: SingleCommand: 0
15:00:16: SingleCommandTestType: 1
15:00:16: Identification: 1
15:00:16: ProtocolMode: 1
15:00:16: VerifyType: 0
15:00:16: SendCMD0: 1
15:00:16: SendCMD8: 1
15:00:16: SendCMD58: 1
15:00:16: SetPower: 1
15:00:16: HcsXpcS18r000: 16744448
15:00:16: HcsXpcS18r001: 33521664
15:00:16: HcsXpcS18r010: 285179904
15:00:16: HcsXpcS18r011: 301957120
15:00:16: HcsXpcS18r100: 1090486272
15:00:16: HcsXpcS18r101: 1107263488
15:00:16: HcsXpcS18r110: 1358921728
15:00:16: HcsXpcS18r111: 1375698944
15:00:16: ReadyCcs18a000: 16744448
15:00:16: ReadyCcs18a001: 33521664
15:00:16: ReadyCcs18a010: 1090486272
15:00:16: ReadyCcs18a011: 1107263488
15:00:16: ReadyCcs18a100: 2164228096
15:00:16: ReadyCcs18a101: 2181005312
15:00:16: ReadyCcs18a110: 3237969920
15:00:16: ReadyCcs18a111: 3254747136
15:00:16: Card Capacity is : 32.000000 GB
15:00:16: SendFirstOCR : 16744448
15:00:16: SendOCR : 16744448
15:00:16: SendOCR : 16744448
15:00:16: ExpectOCR : 16744448
15:00:16: globalSpeedMode : SDR50
15:00:16: globalPowerUp : powerCycle
15:00:18: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111270>, 0x0, False) , Command count = 2142 ] 
15:00:18: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:18: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:18: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111270>, 0x0, True) , Command count = 2143 ] 
15:00:18: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:18: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2144 ] 
15:00:19: [ GetCardStatus() , Command count = 2145 ] 
15:00:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:19: SendFirstOCR : 33521664
15:00:19: SendOCR : 33521664
15:00:19: SendOCR : 33521664
15:00:19: ExpectOCR : 16744448
15:00:19: globalSpeedMode : SDR50
15:00:19: globalPowerUp : powerCycle
15:00:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x061230C0>, 0x0, False) , Command count = 2146 ] 
15:00:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:21: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x061230C0>, 0x0, True) , Command count = 2147 ] 
15:00:21: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:21: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2148 ] 
15:00:22: [ GetCardStatus() , Command count = 2149 ] 
15:00:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:22: SendFirstOCR : 285179904
15:00:22: SendOCR : 285179904
15:00:22: SendOCR : 285179904
15:00:22: ExpectOCR : 16744448
15:00:22: globalSpeedMode : SDR50
15:00:22: globalPowerUp : powerCycle
15:00:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111660>, 0x0, False) , Command count = 2150 ] 
15:00:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111660>, 0x0, True) , Command count = 2151 ] 
15:00:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:24: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2152 ] 
15:00:24: [ GetCardStatus() , Command count = 2153 ] 
15:00:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:24: SendFirstOCR : 16744448
15:00:24: SendOCR : 16744448
15:00:24: SendOCR : 16744448
15:00:24: ExpectOCR : 16744448
15:00:24: globalSpeedMode : SDR50
15:00:24: globalPowerUp : powerCycle
15:00:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123ED0>, 0x0, False) , Command count = 2154 ] 
15:00:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123ED0>, 0x0, True) , Command count = 2155 ] 
15:00:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:26: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2156 ] 
15:00:27: [ GetCardStatus() , Command count = 2157 ] 
15:00:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:27: SendFirstOCR : 33521664
15:00:27: SendOCR : 33521664
15:00:27: SendOCR : 33521664
15:00:27: ExpectOCR : 16744448
15:00:27: globalSpeedMode : SDR50
15:00:27: globalPowerUp : powerCycle
15:00:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, False) , Command count = 2158 ] 
15:00:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, True) , Command count = 2159 ] 
15:00:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:29: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2160 ] 
15:00:30: [ GetCardStatus() , Command count = 2161 ] 
15:00:30: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:30: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:30: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:30: SendFirstOCR : 285179904
15:00:30: SendOCR : 285179904
15:00:30: SendOCR : 285179904
15:00:30: ExpectOCR : 16744448
15:00:30: globalSpeedMode : SDR50
15:00:30: globalPowerUp : powerCycle
15:00:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:00:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECF0>, 0x0, False) , Command count = 2162 ] 
15:00:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:32: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:00:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ECF0>, 0x0, True) , Command count = 2163 ] 
15:00:32: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:00:32: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2164 ] 
15:00:32: [ GetCardStatus() , Command count = 2165 ] 
15:00:32: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:32: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:32: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:32: SendFirstOCR : 16744448
15:00:32: SendOCR : 16744448
15:00:32: SendOCR : 16744448
15:00:32: ExpectOCR : 16744448
15:00:32: globalSpeedMode : SDR50
15:00:32: globalPowerUp : powerCycle
15:00:32: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2166 ] 
15:00:33: [ GetCardStatus() , Command count = 2167 ] 
15:00:33: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:33: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:33: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:33: SendFirstOCR : 33521664
15:00:33: SendOCR : 33521664
15:00:33: SendOCR : 33521664
15:00:33: ExpectOCR : 16744448
15:00:33: globalSpeedMode : SDR50
15:00:33: globalPowerUp : powerCycle
15:00:33: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2168 ] 
15:00:34: [ GetCardStatus() , Command count = 2169 ] 
15:00:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:34: SendFirstOCR : 285179904
15:00:34: SendOCR : 285179904
15:00:34: SendOCR : 285179904
15:00:34: ExpectOCR : 16744448
15:00:34: globalSpeedMode : SDR50
15:00:34: globalPowerUp : powerCycle
15:00:34: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2170 ] 
15:00:34: [ GetCardStatus() , Command count = 2171 ] 
15:00:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:34: SendFirstOCR : 16744448
15:00:34: SendOCR : 16744448
15:00:34: SendOCR : 16744448
15:00:34: ExpectOCR : 16744448
15:00:34: globalSpeedMode : SDR50
15:00:34: globalPowerUp : powerCycle
15:00:34: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2172 ] 
15:00:35: [ GetCardStatus() , Command count = 2173 ] 
15:00:35: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:35: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:35: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:35: SendFirstOCR : 33521664
15:00:35: SendOCR : 33521664
15:00:35: SendOCR : 33521664
15:00:35: ExpectOCR : 16744448
15:00:35: globalSpeedMode : SDR50
15:00:35: globalPowerUp : powerCycle
15:00:35: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2174 ] 
15:00:35: [ GetCardStatus() , Command count = 2175 ] 
15:00:35: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:35: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:35: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:35: SendFirstOCR : 285179904
15:00:35: SendOCR : 285179904
15:00:35: SendOCR : 285179904
15:00:35: ExpectOCR : 16744448
15:00:35: globalSpeedMode : SDR50
15:00:35: globalPowerUp : powerCycle
15:00:35: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2176 ] 
15:00:36: [ GetCardStatus() , Command count = 2177 ] 
15:00:36: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:36: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:36: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:36: SendFirstOCR : 16744448
15:00:36: SendOCR : 16744448
15:00:36: SendOCR : 16744448
15:00:36: ExpectOCR : 16744448
15:00:36: globalSpeedMode : SDR50
15:00:36: globalPowerUp : powerCycle
15:00:36: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2178 ] 
15:00:37: [ GetCardStatus() , Command count = 2179 ] 
15:00:37: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:37: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:37: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:37: SendFirstOCR : 33521664
15:00:37: SendOCR : 33521664
15:00:37: SendOCR : 33521664
15:00:37: ExpectOCR : 16744448
15:00:37: globalSpeedMode : SDR50
15:00:37: globalPowerUp : powerCycle
15:00:37: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2180 ] 
15:00:37: [ GetCardStatus() , Command count = 2181 ] 
15:00:37: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:37: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:37: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:37: SendFirstOCR : 285179904
15:00:37: SendOCR : 285179904
15:00:37: SendOCR : 285179904
15:00:37: ExpectOCR : 16744448
15:00:37: globalSpeedMode : SDR50
15:00:37: globalPowerUp : powerCycle
15:00:37: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2182 ] 
15:00:38: [ GetCardStatus() , Command count = 2183 ] 
15:00:38: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:38: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:38: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:38: SendFirstOCR : 16744448
15:00:38: SendOCR : 16744448
15:00:38: SendOCR : 16744448
15:00:38: ExpectOCR : 16744448
15:00:38: globalSpeedMode : SDR50
15:00:38: globalPowerUp : powerCycle
15:00:38: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2184 ] 
15:00:39: [ GetCardStatus() , Command count = 2185 ] 
15:00:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:39: SendFirstOCR : 33521664
15:00:39: SendOCR : 33521664
15:00:39: SendOCR : 33521664
15:00:39: ExpectOCR : 16744448
15:00:39: globalSpeedMode : SDR50
15:00:39: globalPowerUp : powerCycle
15:00:39: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2186 ] 
15:00:39: [ GetCardStatus() , Command count = 2187 ] 
15:00:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:39: SendFirstOCR : 285179904
15:00:39: SendOCR : 285179904
15:00:39: SendOCR : 285179904
15:00:39: ExpectOCR : 16744448
15:00:39: globalSpeedMode : SDR50
15:00:39: globalPowerUp : powerCycle
15:00:39: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2188 ] 
15:00:40: [ GetCardStatus() , Command count = 2189 ] 
15:00:40: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:40: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:40: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:40: SendFirstOCR : 16744448
15:00:40: SendOCR : 16744448
15:00:40: SendOCR : 16744448
15:00:40: ExpectOCR : 16744448
15:00:40: globalSpeedMode : SDR50
15:00:40: globalPowerUp : powerCycle
15:00:40: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2190 ] 
15:00:40: [ GetCardStatus() , Command count = 2191 ] 
15:00:40: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:40: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:40: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:40: SendFirstOCR : 33521664
15:00:40: SendOCR : 33521664
15:00:40: SendOCR : 33521664
15:00:40: ExpectOCR : 16744448
15:00:40: globalSpeedMode : SDR50
15:00:40: globalPowerUp : powerCycle
15:00:40: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2192 ] 
15:00:41: [ GetCardStatus() , Command count = 2193 ] 
15:00:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:41: SendFirstOCR : 285179904
15:00:41: SendOCR : 285179904
15:00:41: SendOCR : 285179904
15:00:41: ExpectOCR : 16744448
15:00:41: globalSpeedMode : SDR50
15:00:41: globalPowerUp : powerCycle
15:00:41: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2194 ] 
15:00:42: [ GetCardStatus() , Command count = 2195 ] 
15:00:42: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:42: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:42: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:42: SendFirstOCR : 16744448
15:00:42: SendOCR : 16744448
15:00:42: SendOCR : 16744448
15:00:42: ExpectOCR : 16744448
15:00:42: globalSpeedMode : SDR50
15:00:42: globalPowerUp : powerCycle
15:00:42: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2196 ] 
15:00:42: [ GetCardStatus() , Command count = 2197 ] 
15:00:42: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:42: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:42: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:42: SendFirstOCR : 33521664
15:00:42: SendOCR : 33521664
15:00:42: SendOCR : 33521664
15:00:42: ExpectOCR : 16744448
15:00:42: globalSpeedMode : SDR50
15:00:42: globalPowerUp : powerCycle
15:00:42: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2198 ] 
15:00:43: [ GetCardStatus() , Command count = 2199 ] 
15:00:43: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:43: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:43: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:43: SendFirstOCR : 285179904
15:00:43: SendOCR : 285179904
15:00:43: SendOCR : 285179904
15:00:43: ExpectOCR : 16744448
15:00:43: globalSpeedMode : SDR50
15:00:43: globalPowerUp : powerCycle
15:00:43: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2200 ] 
15:00:44: [ GetCardStatus() , Command count = 2201 ] 
15:00:44: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:44: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:44: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:44: SendFirstOCR : 16744448
15:00:44: SendOCR : 16744448
15:00:44: SendOCR : 16744448
15:00:44: ExpectOCR : 16744448
15:00:44: globalSpeedMode : SDR50
15:00:44: globalPowerUp : powerCycle
15:00:44: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2202 ] 
15:00:44: [ GetCardStatus() , Command count = 2203 ] 
15:00:44: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:44: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:44: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:44: SendFirstOCR : 33521664
15:00:44: SendOCR : 33521664
15:00:44: SendOCR : 33521664
15:00:44: ExpectOCR : 16744448
15:00:44: globalSpeedMode : SDR50
15:00:44: globalPowerUp : powerCycle
15:00:44: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2204 ] 
15:00:45: [ GetCardStatus() , Command count = 2205 ] 
15:00:45: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:45: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:45: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:45: SendFirstOCR : 285179904
15:00:45: SendOCR : 285179904
15:00:45: SendOCR : 285179904
15:00:45: ExpectOCR : 16744448
15:00:45: globalSpeedMode : SDR50
15:00:45: globalPowerUp : powerCycle
15:00:45: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2206 ] 
15:00:46: [ GetCardStatus() , Command count = 2207 ] 
15:00:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:46: SendFirstOCR : 16744448
15:00:46: SendOCR : 16744448
15:00:46: SendOCR : 16744448
15:00:46: ExpectOCR : 16744448
15:00:46: globalSpeedMode : SDR50
15:00:46: globalPowerUp : powerCycle
15:00:46: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2208 ] 
15:00:46: [ GetCardStatus() , Command count = 2209 ] 
15:00:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:46: SendFirstOCR : 33521664
15:00:46: SendOCR : 33521664
15:00:46: SendOCR : 33521664
15:00:46: ExpectOCR : 16744448
15:00:46: globalSpeedMode : SDR50
15:00:46: globalPowerUp : powerCycle
15:00:46: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2210 ] 
15:00:47: [ GetCardStatus() , Command count = 2211 ] 
15:00:47: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:47: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:47: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:47: SendFirstOCR : 285179904
15:00:47: SendOCR : 285179904
15:00:47: SendOCR : 285179904
15:00:47: ExpectOCR : 16744448
15:00:47: globalSpeedMode : SDR50
15:00:47: globalPowerUp : powerCycle
15:00:47: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2212 ] 
15:00:47: [ GetCardStatus() , Command count = 2213 ] 
15:00:47: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:47: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:47: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:47: SendFirstOCR : 16744448
15:00:47: SendOCR : 16744448
15:00:47: SendOCR : 16744448
15:00:47: ExpectOCR : 16744448
15:00:47: globalSpeedMode : SDR50
15:00:47: globalPowerUp : powerCycle
15:00:47: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2214 ] 
15:00:48: [ GetCardStatus() , Command count = 2215 ] 
15:00:48: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:48: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:48: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:48: SendFirstOCR : 33521664
15:00:48: SendOCR : 33521664
15:00:48: SendOCR : 33521664
15:00:48: ExpectOCR : 16744448
15:00:48: globalSpeedMode : SDR50
15:00:48: globalPowerUp : powerCycle
15:00:48: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2216 ] 
15:00:49: [ GetCardStatus() , Command count = 2217 ] 
15:00:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:49: SendFirstOCR : 285179904
15:00:49: SendOCR : 285179904
15:00:49: SendOCR : 285179904
15:00:49: ExpectOCR : 16744448
15:00:49: globalSpeedMode : SDR50
15:00:49: globalPowerUp : powerCycle
15:00:49: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2218 ] 
15:00:49: [ GetCardStatus() , Command count = 2219 ] 
15:00:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:49: SendFirstOCR : 16744448
15:00:49: SendOCR : 16744448
15:00:49: SendOCR : 16744448
15:00:49: ExpectOCR : 16744448
15:00:49: globalSpeedMode : SDR50
15:00:49: globalPowerUp : powerCycle
15:00:49: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2220 ] 
15:00:50: [ GetCardStatus() , Command count = 2221 ] 
15:00:50: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:50: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:50: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:50: SendFirstOCR : 33521664
15:00:50: SendOCR : 33521664
15:00:50: SendOCR : 33521664
15:00:50: ExpectOCR : 16744448
15:00:50: globalSpeedMode : SDR50
15:00:50: globalPowerUp : powerCycle
15:00:50: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2222 ] 
15:00:51: [ GetCardStatus() , Command count = 2223 ] 
15:00:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:51: SendFirstOCR : 285179904
15:00:51: SendOCR : 285179904
15:00:51: SendOCR : 285179904
15:00:51: ExpectOCR : 16744448
15:00:51: globalSpeedMode : SDR50
15:00:51: globalPowerUp : powerCycle
15:00:51: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2224 ] 
15:00:51: [ GetCardStatus() , Command count = 2225 ] 
15:00:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:51: SendFirstOCR : 16744448
15:00:51: SendOCR : 16744448
15:00:51: SendOCR : 16744448
15:00:51: ExpectOCR : 16744448
15:00:51: globalSpeedMode : SDR50
15:00:51: globalPowerUp : powerCycle
15:00:51: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2226 ] 
15:00:52: [ GetCardStatus() , Command count = 2227 ] 
15:00:52: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:52: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:52: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:52: SendFirstOCR : 33521664
15:00:52: SendOCR : 33521664
15:00:52: SendOCR : 33521664
15:00:52: ExpectOCR : 16744448
15:00:52: globalSpeedMode : SDR50
15:00:52: globalPowerUp : powerCycle
15:00:52: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2228 ] 
15:00:52: [ GetCardStatus() , Command count = 2229 ] 
15:00:52: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:52: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:52: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:52: SendFirstOCR : 285179904
15:00:52: SendOCR : 285179904
15:00:52: SendOCR : 285179904
15:00:52: ExpectOCR : 16744448
15:00:52: globalSpeedMode : SDR50
15:00:52: globalPowerUp : powerCycle
15:00:52: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2230 ] 
15:00:53: [ GetCardStatus() , Command count = 2231 ] 
15:00:53: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:53: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:53: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:53: SendFirstOCR : 16744448
15:00:53: SendOCR : 16744448
15:00:53: SendOCR : 16744448
15:00:53: ExpectOCR : 16744448
15:00:53: globalSpeedMode : SDR50
15:00:53: globalPowerUp : powerCycle
15:00:53: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2232 ] 
15:00:54: [ GetCardStatus() , Command count = 2233 ] 
15:00:54: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:54: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:54: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:54: SendFirstOCR : 33521664
15:00:54: SendOCR : 33521664
15:00:54: SendOCR : 33521664
15:00:54: ExpectOCR : 16744448
15:00:54: globalSpeedMode : SDR50
15:00:54: globalPowerUp : powerCycle
15:00:54: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2234 ] 
15:00:54: [ GetCardStatus() , Command count = 2235 ] 
15:00:54: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:54: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:54: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:54: SendFirstOCR : 285179904
15:00:54: SendOCR : 285179904
15:00:54: SendOCR : 285179904
15:00:54: ExpectOCR : 16744448
15:00:54: globalSpeedMode : SDR50
15:00:54: globalPowerUp : powerCycle
15:00:54: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2236 ] 
15:00:55: [ GetCardStatus() , Command count = 2237 ] 
15:00:55: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:55: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:55: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:55: SendFirstOCR : 16744448
15:00:55: SendOCR : 16744448
15:00:55: SendOCR : 16744448
15:00:55: ExpectOCR : 16744448
15:00:55: globalSpeedMode : SDR50
15:00:55: globalPowerUp : powerCycle
15:00:55: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2238 ] 
15:00:56: [ GetCardStatus() , Command count = 2239 ] 
15:00:56: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:56: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:56: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:56: SendFirstOCR : 33521664
15:00:56: SendOCR : 33521664
15:00:56: SendOCR : 33521664
15:00:56: ExpectOCR : 16744448
15:00:56: globalSpeedMode : SDR50
15:00:56: globalPowerUp : powerCycle
15:00:56: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2240 ] 
15:00:56: [ GetCardStatus() , Command count = 2241 ] 
15:00:56: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:56: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:56: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:56: SendFirstOCR : 285179904
15:00:56: SendOCR : 285179904
15:00:56: SendOCR : 285179904
15:00:56: ExpectOCR : 16744448
15:00:56: globalSpeedMode : SDR50
15:00:56: globalPowerUp : powerCycle
15:00:56: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2242 ] 
15:00:57: [ GetCardStatus() , Command count = 2243 ] 
15:00:57: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:57: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:57: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:57: SendFirstOCR : 16744448
15:00:57: SendOCR : 16744448
15:00:57: SendOCR : 16744448
15:00:57: ExpectOCR : 16744448
15:00:57: globalSpeedMode : SDR50
15:00:57: globalPowerUp : powerCycle
15:00:57: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2244 ] 
15:00:58: [ GetCardStatus() , Command count = 2245 ] 
15:00:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:58: SendFirstOCR : 33521664
15:00:58: SendOCR : 33521664
15:00:58: SendOCR : 33521664
15:00:58: ExpectOCR : 16744448
15:00:58: globalSpeedMode : SDR50
15:00:58: globalPowerUp : powerCycle
15:00:58: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:00:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2246 ] 
15:00:58: [ GetCardStatus() , Command count = 2247 ] 
15:00:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:58: SendFirstOCR : 285179904
15:00:58: SendOCR : 285179904
15:00:58: SendOCR : 285179904
15:00:58: ExpectOCR : 16744448
15:00:58: globalSpeedMode : SDR50
15:00:58: globalPowerUp : powerCycle
15:00:58: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:00:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2248 ] 
15:00:59: [ GetCardStatus() , Command count = 2249 ] 
15:00:59: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:59: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:59: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:59: SendFirstOCR : 16744448
15:00:59: SendOCR : 16744448
15:00:59: SendOCR : 16744448
15:00:59: ExpectOCR : 16744448
15:00:59: globalSpeedMode : SDR50
15:00:59: globalPowerUp : powerCycle
15:00:59: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:00:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2250 ] 
15:00:59: [ GetCardStatus() , Command count = 2251 ] 
15:00:59: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:00:59: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:00:59: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:00:59: SendFirstOCR : 33521664
15:00:59: SendOCR : 33521664
15:00:59: SendOCR : 33521664
15:00:59: ExpectOCR : 16744448
15:00:59: globalSpeedMode : SDR50
15:00:59: globalPowerUp : powerCycle
15:00:59: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2252 ] 
15:01:00: [ GetCardStatus() , Command count = 2253 ] 
15:01:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:00: SendFirstOCR : 285179904
15:01:00: SendOCR : 285179904
15:01:00: SendOCR : 285179904
15:01:00: ExpectOCR : 16744448
15:01:00: globalSpeedMode : SDR50
15:01:00: globalPowerUp : powerCycle
15:01:00: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2254 ] 
15:01:01: [ GetCardStatus() , Command count = 2255 ] 
15:01:01: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:01: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:01: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:01: SendFirstOCR : 16744448
15:01:01: SendOCR : 16744448
15:01:01: SendOCR : 16744448
15:01:01: ExpectOCR : 16744448
15:01:01: globalSpeedMode : SDR50
15:01:01: globalPowerUp : powerCycle
15:01:01: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2256 ] 
15:01:01: [ GetCardStatus() , Command count = 2257 ] 
15:01:01: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:01: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:01: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:01: SendFirstOCR : 33521664
15:01:01: SendOCR : 33521664
15:01:01: SendOCR : 33521664
15:01:01: ExpectOCR : 16744448
15:01:01: globalSpeedMode : SDR50
15:01:01: globalPowerUp : powerCycle
15:01:01: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2258 ] 
15:01:02: [ GetCardStatus() , Command count = 2259 ] 
15:01:02: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:02: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:02: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:02: SendFirstOCR : 285179904
15:01:02: SendOCR : 285179904
15:01:02: SendOCR : 285179904
15:01:02: ExpectOCR : 16744448
15:01:02: globalSpeedMode : SDR50
15:01:02: globalPowerUp : powerCycle
15:01:02: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2260 ] 
15:01:03: [ GetCardStatus() , Command count = 2261 ] 
15:01:03: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:03: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:03: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:03: SendFirstOCR : 16744448
15:01:03: SendOCR : 16744448
15:01:03: SendOCR : 16744448
15:01:03: ExpectOCR : 16744448
15:01:03: globalSpeedMode : SDR50
15:01:03: globalPowerUp : powerCycle
15:01:03: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2262 ] 
15:01:03: [ GetCardStatus() , Command count = 2263 ] 
15:01:03: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:03: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:03: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:03: SendFirstOCR : 33521664
15:01:03: SendOCR : 33521664
15:01:03: SendOCR : 33521664
15:01:03: ExpectOCR : 16744448
15:01:03: globalSpeedMode : SDR50
15:01:03: globalPowerUp : powerCycle
15:01:03: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2264 ] 
15:01:04: [ GetCardStatus() , Command count = 2265 ] 
15:01:04: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:04: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:04: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:04: SendFirstOCR : 285179904
15:01:04: SendOCR : 285179904
15:01:04: SendOCR : 285179904
15:01:04: ExpectOCR : 16744448
15:01:04: globalSpeedMode : SDR50
15:01:04: globalPowerUp : powerCycle
15:01:04: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2266 ] 
15:01:04: [ GetCardStatus() , Command count = 2267 ] 
15:01:04: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:04: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:04: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:04: SendFirstOCR : 16744448
15:01:04: SendOCR : 16744448
15:01:04: SendOCR : 16744448
15:01:04: ExpectOCR : 16744448
15:01:04: globalSpeedMode : SDR50
15:01:04: globalPowerUp : powerCycle
15:01:04: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2268 ] 
15:01:05: [ GetCardStatus() , Command count = 2269 ] 
15:01:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:05: SendFirstOCR : 33521664
15:01:05: SendOCR : 33521664
15:01:05: SendOCR : 33521664
15:01:05: ExpectOCR : 16744448
15:01:05: globalSpeedMode : SDR50
15:01:05: globalPowerUp : powerCycle
15:01:05: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2270 ] 
15:01:06: [ GetCardStatus() , Command count = 2271 ] 
15:01:06: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:06: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:06: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:06: SendFirstOCR : 285179904
15:01:06: SendOCR : 285179904
15:01:06: SendOCR : 285179904
15:01:06: ExpectOCR : 16744448
15:01:06: globalSpeedMode : SDR50
15:01:06: globalPowerUp : powerCycle
15:01:06: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2272 ] 
15:01:06: [ GetCardStatus() , Command count = 2273 ] 
15:01:06: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:06: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:06: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:06: SendFirstOCR : 16744448
15:01:06: SendOCR : 16744448
15:01:06: SendOCR : 16744448
15:01:06: ExpectOCR : 16744448
15:01:06: globalSpeedMode : SDR50
15:01:06: globalPowerUp : powerCycle
15:01:06: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2274 ] 
15:01:07: [ GetCardStatus() , Command count = 2275 ] 
15:01:07: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:07: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:07: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:07: SendFirstOCR : 33521664
15:01:07: SendOCR : 33521664
15:01:07: SendOCR : 33521664
15:01:07: ExpectOCR : 16744448
15:01:07: globalSpeedMode : SDR50
15:01:07: globalPowerUp : powerCycle
15:01:07: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2276 ] 
15:01:08: [ GetCardStatus() , Command count = 2277 ] 
15:01:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:08: SendFirstOCR : 285179904
15:01:08: SendOCR : 285179904
15:01:08: SendOCR : 285179904
15:01:08: ExpectOCR : 16744448
15:01:08: globalSpeedMode : SDR50
15:01:08: globalPowerUp : powerCycle
15:01:08: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2278 ] 
15:01:08: [ GetCardStatus() , Command count = 2279 ] 
15:01:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:08: SendFirstOCR : 16744448
15:01:08: SendOCR : 16744448
15:01:08: SendOCR : 16744448
15:01:08: ExpectOCR : 16744448
15:01:08: globalSpeedMode : SDR50
15:01:08: globalPowerUp : powerCycle
15:01:08: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2280 ] 
15:01:09: [ GetCardStatus() , Command count = 2281 ] 
15:01:09: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:09: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:09: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:09: SendFirstOCR : 33521664
15:01:09: SendOCR : 33521664
15:01:09: SendOCR : 33521664
15:01:09: ExpectOCR : 16744448
15:01:09: globalSpeedMode : SDR50
15:01:09: globalPowerUp : powerCycle
15:01:09: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2282 ] 
15:01:10: [ GetCardStatus() , Command count = 2283 ] 
15:01:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:10: SendFirstOCR : 285179904
15:01:10: SendOCR : 285179904
15:01:10: SendOCR : 285179904
15:01:10: ExpectOCR : 16744448
15:01:10: globalSpeedMode : SDR50
15:01:10: globalPowerUp : powerCycle
15:01:10: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2284 ] 
15:01:10: [ GetCardStatus() , Command count = 2285 ] 
15:01:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:10: SendFirstOCR : 16744448
15:01:10: SendOCR : 16744448
15:01:10: SendOCR : 16744448
15:01:10: ExpectOCR : 16744448
15:01:10: globalSpeedMode : SDR50
15:01:10: globalPowerUp : powerCycle
15:01:10: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2286 ] 
15:01:11: [ GetCardStatus() , Command count = 2287 ] 
15:01:11: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:11: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:11: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:11: SendFirstOCR : 33521664
15:01:11: SendOCR : 33521664
15:01:11: SendOCR : 33521664
15:01:11: ExpectOCR : 16744448
15:01:11: globalSpeedMode : SDR50
15:01:11: globalPowerUp : powerCycle
15:01:11: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2288 ] 
15:01:11: [ GetCardStatus() , Command count = 2289 ] 
15:01:11: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:11: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:11: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:11: SendFirstOCR : 285179904
15:01:11: SendOCR : 285179904
15:01:11: SendOCR : 285179904
15:01:11: ExpectOCR : 16744448
15:01:11: globalSpeedMode : SDR50
15:01:11: globalPowerUp : powerCycle
15:01:11: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2290 ] 
15:01:12: [ GetCardStatus() , Command count = 2291 ] 
15:01:12: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:12: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:12: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:12: SendFirstOCR : 16744448
15:01:12: SendOCR : 16744448
15:01:12: SendOCR : 16744448
15:01:12: ExpectOCR : 16744448
15:01:12: globalSpeedMode : SDR50
15:01:12: globalPowerUp : powerCycle
15:01:12: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2292 ] 
15:01:13: [ GetCardStatus() , Command count = 2293 ] 
15:01:13: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:13: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:13: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:13: SendFirstOCR : 33521664
15:01:13: SendOCR : 33521664
15:01:13: SendOCR : 33521664
15:01:13: ExpectOCR : 16744448
15:01:13: globalSpeedMode : SDR50
15:01:13: globalPowerUp : powerCycle
15:01:13: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2294 ] 
15:01:13: [ GetCardStatus() , Command count = 2295 ] 
15:01:13: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:13: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:13: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:13: SendFirstOCR : 285179904
15:01:13: SendOCR : 285179904
15:01:13: SendOCR : 285179904
15:01:13: ExpectOCR : 16744448
15:01:13: globalSpeedMode : SDR50
15:01:13: globalPowerUp : powerCycle
15:01:13: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2296 ] 
15:01:14: [ GetCardStatus() , Command count = 2297 ] 
15:01:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:14: SendFirstOCR : 16744448
15:01:14: SendOCR : 16744448
15:01:14: SendOCR : 16744448
15:01:14: ExpectOCR : 16744448
15:01:14: globalSpeedMode : SDR50
15:01:14: globalPowerUp : powerCycle
15:01:14: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2298 ] 
15:01:15: [ GetCardStatus() , Command count = 2299 ] 
15:01:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:15: SendFirstOCR : 33521664
15:01:15: SendOCR : 33521664
15:01:15: SendOCR : 33521664
15:01:15: ExpectOCR : 16744448
15:01:15: globalSpeedMode : SDR50
15:01:15: globalPowerUp : powerCycle
15:01:15: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2300 ] 
15:01:15: [ GetCardStatus() , Command count = 2301 ] 
15:01:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:15: SendFirstOCR : 285179904
15:01:15: SendOCR : 285179904
15:01:15: SendOCR : 285179904
15:01:15: ExpectOCR : 16744448
15:01:15: globalSpeedMode : SDR50
15:01:15: globalPowerUp : powerCycle
15:01:15: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2302 ] 
15:01:16: [ GetCardStatus() , Command count = 2303 ] 
15:01:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:16: SendFirstOCR : 16744448
15:01:16: SendOCR : 16744448
15:01:16: SendOCR : 16744448
15:01:16: ExpectOCR : 16744448
15:01:16: globalSpeedMode : SDR50
15:01:16: globalPowerUp : powerCycle
15:01:16: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2304 ] 
15:01:16: [ GetCardStatus() , Command count = 2305 ] 
15:01:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:16: SendFirstOCR : 33521664
15:01:16: SendOCR : 33521664
15:01:16: SendOCR : 33521664
15:01:16: ExpectOCR : 16744448
15:01:16: globalSpeedMode : SDR50
15:01:16: globalPowerUp : powerCycle
15:01:16: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2306 ] 
15:01:17: [ GetCardStatus() , Command count = 2307 ] 
15:01:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:17: SendFirstOCR : 285179904
15:01:17: SendOCR : 285179904
15:01:17: SendOCR : 285179904
15:01:17: ExpectOCR : 16744448
15:01:17: globalSpeedMode : SDR50
15:01:17: globalPowerUp : powerCycle
15:01:17: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2308 ] 
15:01:18: [ GetCardStatus() , Command count = 2309 ] 
15:01:18: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:18: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:18: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:18: SendFirstOCR : 16744448
15:01:18: SendOCR : 16744448
15:01:18: SendOCR : 16744448
15:01:18: ExpectOCR : 16744448
15:01:18: globalSpeedMode : SDR50
15:01:18: globalPowerUp : powerCycle
15:01:18: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2310 ] 
15:01:18: [ GetCardStatus() , Command count = 2311 ] 
15:01:18: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:18: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:18: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:18: SendFirstOCR : 33521664
15:01:18: SendOCR : 33521664
15:01:18: SendOCR : 33521664
15:01:18: ExpectOCR : 16744448
15:01:18: globalSpeedMode : SDR50
15:01:18: globalPowerUp : powerCycle
15:01:18: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2312 ] 
15:01:19: [ GetCardStatus() , Command count = 2313 ] 
15:01:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:19: SendFirstOCR : 285179904
15:01:19: SendOCR : 285179904
15:01:19: SendOCR : 285179904
15:01:19: ExpectOCR : 16744448
15:01:19: globalSpeedMode : SDR50
15:01:19: globalPowerUp : powerCycle
15:01:19: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2314 ] 
15:01:20: [ GetCardStatus() , Command count = 2315 ] 
15:01:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:20: SendFirstOCR : 16744448
15:01:20: SendOCR : 16744448
15:01:20: SendOCR : 16744448
15:01:20: ExpectOCR : 16744448
15:01:20: globalSpeedMode : SDR50
15:01:20: globalPowerUp : powerCycle
15:01:20: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2316 ] 
15:01:20: [ GetCardStatus() , Command count = 2317 ] 
15:01:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:20: SendFirstOCR : 33521664
15:01:20: SendOCR : 33521664
15:01:20: SendOCR : 33521664
15:01:20: ExpectOCR : 16744448
15:01:20: globalSpeedMode : SDR50
15:01:20: globalPowerUp : powerCycle
15:01:20: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2318 ] 
15:01:21: [ GetCardStatus() , Command count = 2319 ] 
15:01:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:21: SendFirstOCR : 285179904
15:01:21: SendOCR : 285179904
15:01:21: SendOCR : 285179904
15:01:21: ExpectOCR : 16744448
15:01:21: globalSpeedMode : SDR50
15:01:21: globalPowerUp : powerCycle
15:01:21: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2320 ] 
15:01:22: [ GetCardStatus() , Command count = 2321 ] 
15:01:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:22: SendFirstOCR : 16744448
15:01:22: SendOCR : 16744448
15:01:22: SendOCR : 16744448
15:01:22: ExpectOCR : 16744448
15:01:22: globalSpeedMode : SDR50
15:01:22: globalPowerUp : powerCycle
15:01:22: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2322 ] 
15:01:22: [ GetCardStatus() , Command count = 2323 ] 
15:01:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:22: SendFirstOCR : 33521664
15:01:22: SendOCR : 33521664
15:01:22: SendOCR : 33521664
15:01:22: ExpectOCR : 16744448
15:01:22: globalSpeedMode : SDR50
15:01:22: globalPowerUp : powerCycle
15:01:22: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2324 ] 
15:01:23: [ GetCardStatus() , Command count = 2325 ] 
15:01:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:23: SendFirstOCR : 285179904
15:01:23: SendOCR : 285179904
15:01:23: SendOCR : 285179904
15:01:23: ExpectOCR : 16744448
15:01:23: globalSpeedMode : SDR50
15:01:23: globalPowerUp : powerCycle
15:01:23: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2326 ] 
15:01:23: [ GetCardStatus() , Command count = 2327 ] 
15:01:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:23: SendFirstOCR : 16744448
15:01:23: SendOCR : 16744448
15:01:23: SendOCR : 16744448
15:01:23: ExpectOCR : 16744448
15:01:23: globalSpeedMode : SDR50
15:01:23: globalPowerUp : powerCycle
15:01:23: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2328 ] 
15:01:24: [ GetCardStatus() , Command count = 2329 ] 
15:01:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:24: SendFirstOCR : 33521664
15:01:24: SendOCR : 33521664
15:01:24: SendOCR : 33521664
15:01:24: ExpectOCR : 16744448
15:01:24: globalSpeedMode : SDR50
15:01:24: globalPowerUp : powerCycle
15:01:24: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2330 ] 
15:01:25: [ GetCardStatus() , Command count = 2331 ] 
15:01:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:25: SendFirstOCR : 285179904
15:01:25: SendOCR : 285179904
15:01:25: SendOCR : 285179904
15:01:25: ExpectOCR : 16744448
15:01:25: globalSpeedMode : SDR50
15:01:25: globalPowerUp : powerCycle
15:01:25: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2332 ] 
15:01:25: [ GetCardStatus() , Command count = 2333 ] 
15:01:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:25: ########################################
15:01:25: Finished Running script SD3UHS104_DVT_SD3_00_3_4_1_1_3_SDSC_NOT__SUPPORTED 
15:01:25: ########################################
15:01:25: ########################################
15:01:25: Stated Running script SD3UHS105_DVT_SD3_00_3_4_1_1_4_CMD8_MANDATORY 
15:01:25: ########################################
15:01:25: ###### Running SD3UHS105_DVT_SD3_00_3_4_1_1_4_CMD8_MANDATORY
15:01:25: [GO4_globalInitCard]### Switch to Specify Card Type
15:01:27: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:01:27: Host Frequency set to 25000 KHz
15:01:27: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:01:27: [GO18_globalSetVolt]### Set Host Voltage value.
15:01:27: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:01:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x06123CC0>, 0x0, True) , Command count = 2334 ] 
15:01:27: [GO18_globalSetVolt]### Host voltage value is set.
15:01:27: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:01:27: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, False) , Command count = 2335 ] 
15:01:27: [GO18_globalSetVolt]### Host voltage value is set.
15:01:27: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2336 ] 
15:01:27: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:01:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2337 ] 
15:01:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:01:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:01:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:01:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:01:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:01:28: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2338 ] 
15:01:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:01:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:01:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py_sfcl.CommandDataDefinition object at 0x06123B40>) , Command count = 2339 ] 
15:01:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:01:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A300>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 2340 ] 
15:01:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:01:28: [ SetCardRCA(0x1, 0xD555) , Command count = 2341 ] 
15:01:28: [DVTCommonLib]### Identification :Idenfication of card completed 

15:01:28: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:01:28: Host Frequency set to 25000 KHz
15:01:28: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:01:28: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:01:28: ####CSD Registe 2.0 Values####
15:01:28: CSD_STRUCTURE                                 :0x1
15:01:28: Reserv1                                       :0x0
15:01:28: Time Access 1 TAAC                            :0xe
15:01:28: Time Access 2 NSAC*100                        :0x0
15:01:28: Data Transfer Rate TRAN_SPEED                 :0x32
15:01:28: Card Command Classess CCC                     :0x5b5
15:01:28: Max Read Data Block Length  READ_BL_LEN       :0x9
15:01:28: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:01:28: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:01:28: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:01:28: DSR(driver stage register)  DSR_IMP           :0x0
15:01:28: Reserv2                                       :0x0
15:01:28: Device Size C_SIZE                            :0xedc8
15:01:28: Reserv3                                       :0x0
15:01:28: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:01:28: Erase Sector Size SECTOR_SIZE                 :0x7f
15:01:28: Write Protect Group Size WP_GRP_SIZE          :0x0
15:01:28: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:01:28: Reserv4                                       :0x0
15:01:28: Write Speed Factor R2W_FACTOR                 :0x2
15:01:28: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:01:28: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:01:28: FILE_FORMAT_GRP                               :0x0
15:01:28: COPY flag                                     :0x1
15:01:28: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:01:28: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:01:28: File_Format                                   :0x0
15:01:28: CRC                                           :0x0
15:01:28: ####CSD Registe Values####  

15:01:28: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:01:28: [GetSCRRegisterEntry] Passed
15:01:28: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:01:28: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:01:28: Data_Status_After Erases          : 0
15:01:28: CPRM Security Support             : No Security
15:01:28: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:01:28: Spec. Version                     : Version 3.0X
15:01:28: Extended Security Support         : Extended_Security_Not_Supported
15:01:28: Command Support                   : COMMAND_SUPPORT
15:01:28: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:01:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123960>, <py_sfcl.CommandDataDefinition object at 0x061233F0>) , Command count = 2342 ] 
15:01:28: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:01:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061239C0>, <py_sfcl.CommandDataDefinition object at 0x06119390>) , Command count = 2343 ] 
15:01:28: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:01:28: [ SetBusWidth(0x4) , Command count = 2344 ] 
15:01:28: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:01:28: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x05285FC0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2345 ] 
15:01:28: Protected Area Size 0x28000
15:01:28: Bus Width           2
15:01:28: Secure Mode         0
15:01:28: Speed  Class        4
15:01:28: Perf Move           0
15:01:28: Au Size             9
15:01:28: Erase Size          15
15:01:28: Erase Timeout       1
15:01:28: Erase offset        1
15:01:28: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:01:28: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:01:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:28: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2346 ] 
15:01:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:01:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:28: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:01:28: Host Frequency set to 100000 KHz
15:01:28: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:01:28: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:01:28: ####CSD Registe 2.0 Values####
15:01:28: CSD_STRUCTURE                                 :0x1
15:01:28: Reserv1                                       :0x0
15:01:28: Time Access 1 TAAC                            :0xe
15:01:28: Time Access 2 NSAC*100                        :0x0
15:01:28: Data Transfer Rate TRAN_SPEED                 :0xb
15:01:28: Card Command Classess CCC                     :0x5b5
15:01:28: Max Read Data Block Length  READ_BL_LEN       :0x9
15:01:28: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:01:28: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:01:28: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:01:28: DSR(driver stage register)  DSR_IMP           :0x0
15:01:28: Reserv2                                       :0x0
15:01:28: Device Size C_SIZE                            :0xedc8
15:01:28: Reserv3                                       :0x0
15:01:28: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:01:28: Erase Sector Size SECTOR_SIZE                 :0x7f
15:01:28: Write Protect Group Size WP_GRP_SIZE          :0x0
15:01:29: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:01:29: Reserv4                                       :0x0
15:01:29: Write Speed Factor R2W_FACTOR                 :0x2
15:01:29: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:01:29: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:01:29: FILE_FORMAT_GRP                               :0x0
15:01:29: COPY flag                                     :0x1
15:01:29: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:01:29: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:01:29: File_Format                                   :0x0
15:01:29: CRC                                           :0x0
15:01:29: ####CSD Registe Values####  

15:01:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x06119570>) , Command count = 2347 ] 
15:01:29: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:01:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CF90>, <py_sfcl.CommandDataDefinition object at 0x06119A80>) , Command count = 2348 ] 
15:01:29: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:01:29: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:01:29: [GO4_globalInitCard]### Switch to Specify Card Type
15:01:31: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:01:31: Host Frequency set to 25000 KHz
15:01:31: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:01:31: [GO18_globalSetVolt]### Set Host Voltage value.
15:01:31: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:01:31: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111750>, 0x0, True) , Command count = 2349 ] 
15:01:31: [GO18_globalSetVolt]### Host voltage value is set.
15:01:31: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:01:31: [ SetVolt(<py_sfcl.SDVoltage object at 0x05177EA0>, 0x0, False) , Command count = 2350 ] 
15:01:31: [GO18_globalSetVolt]### Host voltage value is set.
15:01:31: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2351 ] 
15:01:31: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:01:31: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2352 ] 
15:01:31: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:01:31: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:01:31: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:01:31: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:01:31: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:01:31: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2353 ] 
15:01:31: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:01:31: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:01:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F00>, <py_sfcl.CommandDataDefinition object at 0x061117B0>) , Command count = 2354 ] 
15:01:31: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:01:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x06111390>) , Command count = 2355 ] 
15:01:31: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:01:31: [ SetCardRCA(0x1, 0xD555) , Command count = 2356 ] 
15:01:31: [DVTCommonLib]### Identification :Idenfication of card completed 

15:01:31: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:01:31: Host Frequency set to 25000 KHz
15:01:31: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:01:31: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:01:31: ####CSD Registe 2.0 Values####
15:01:31: CSD_STRUCTURE                                 :0x1
15:01:31: Reserv1                                       :0x0
15:01:31: Time Access 1 TAAC                            :0xe
15:01:31: Time Access 2 NSAC*100                        :0x0
15:01:31: Data Transfer Rate TRAN_SPEED                 :0x32
15:01:31: Card Command Classess CCC                     :0x5b5
15:01:31: Max Read Data Block Length  READ_BL_LEN       :0x9
15:01:31: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:01:31: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:01:31: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:01:31: DSR(driver stage register)  DSR_IMP           :0x0
15:01:31: Reserv2                                       :0x0
15:01:31: Device Size C_SIZE                            :0xedc8
15:01:31: Reserv3                                       :0x0
15:01:31: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:01:31: Erase Sector Size SECTOR_SIZE                 :0x7f
15:01:31: Write Protect Group Size WP_GRP_SIZE          :0x0
15:01:31: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:01:31: Reserv4                                       :0x0
15:01:31: Write Speed Factor R2W_FACTOR                 :0x2
15:01:31: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:01:31: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:01:31: FILE_FORMAT_GRP                               :0x0
15:01:31: COPY flag                                     :0x1
15:01:31: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:01:31: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:01:31: File_Format                                   :0x0
15:01:31: CRC                                           :0x0
15:01:31: ####CSD Registe Values####  

15:01:31: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:01:31: [GetSCRRegisterEntry] Passed
15:01:31: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:01:31: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:01:31: Data_Status_After Erases          : 0
15:01:31: CPRM Security Support             : No Security
15:01:31: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:01:31: Spec. Version                     : Version 3.0X
15:01:31: Extended Security Support         : Extended_Security_Not_Supported
15:01:31: Command Support                   : COMMAND_SUPPORT
15:01:31: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:01:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B40>, <py_sfcl.CommandDataDefinition object at 0x061110C0>) , Command count = 2357 ] 
15:01:31: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:01:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py_sfcl.CommandDataDefinition object at 0x061199F0>) , Command count = 2358 ] 
15:01:31: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:01:31: [ SetBusWidth(0x4) , Command count = 2359 ] 
15:01:31: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:01:31: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061194B0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2360 ] 
15:01:31: Protected Area Size 0x28000
15:01:31: Bus Width           2
15:01:31: Secure Mode         0
15:01:31: Speed  Class        4
15:01:31: Perf Move           0
15:01:31: Au Size             9
15:01:31: Erase Size          15
15:01:31: Erase Timeout       1
15:01:31: Erase offset        1
15:01:31: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:01:31: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:01:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:31: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2361 ] 
15:01:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:01:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:31: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:01:32: Host Frequency set to 100000 KHz
15:01:32: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:01:32: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:01:32: ####CSD Registe 2.0 Values####
15:01:32: CSD_STRUCTURE                                 :0x1
15:01:32: Reserv1                                       :0x0
15:01:32: Time Access 1 TAAC                            :0xe
15:01:32: Time Access 2 NSAC*100                        :0x0
15:01:32: Data Transfer Rate TRAN_SPEED                 :0xb
15:01:32: Card Command Classess CCC                     :0x5b5
15:01:32: Max Read Data Block Length  READ_BL_LEN       :0x9
15:01:32: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:01:32: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:01:32: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:01:32: DSR(driver stage register)  DSR_IMP           :0x0
15:01:32: Reserv2                                       :0x0
15:01:32: Device Size C_SIZE                            :0xedc8
15:01:32: Reserv3                                       :0x0
15:01:32: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:01:32: Erase Sector Size SECTOR_SIZE                 :0x7f
15:01:32: Write Protect Group Size WP_GRP_SIZE          :0x0
15:01:32: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:01:32: Reserv4                                       :0x0
15:01:32: Write Speed Factor R2W_FACTOR                 :0x2
15:01:32: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:01:32: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:01:32: FILE_FORMAT_GRP                               :0x0
15:01:32: COPY flag                                     :0x1
15:01:32: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:01:32: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:01:32: File_Format                                   :0x0
15:01:32: CRC                                           :0x0
15:01:32: ####CSD Registe Values####  

15:01:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CDE0>, <py_sfcl.CommandDataDefinition object at 0x06119A20>) , Command count = 2362 ] 
15:01:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:01:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x0601A510>) , Command count = 2363 ] 
15:01:32: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:01:32: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:01:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C00>, 0x0, False) , Command count = 2364 ] 
15:01:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:34: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:34: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1C00>, 0x0, True) , Command count = 2365 ] 
15:01:34: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:34: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:01:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2366 ] 
15:01:35: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:01:35: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:01:35: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:01:35: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:01:35: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:01:35: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:01:35: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2367 ] 
15:01:35: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:01:35: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:01:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061190C0>, <py_sfcl.CommandDataDefinition object at 0x06119090>) , Command count = 2368 ] 
15:01:35: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:01:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CC60>, <py_sfcl.CommandDataDefinition object at 0x06119D20>) , Command count = 2369 ] 
15:01:35: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:01:35: [ SetCardRCA(0x1, 0xD555) , Command count = 2370 ] 
15:01:35: [DVTCommonLib]### Identification :Idenfication of card completed 

15:01:35: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:01:35: [ SetBusWidth(0x4) , Command count = 2371 ] 
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:35: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2372 ] 
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:35: [32799, 49153, 32783, 32783, 32769, 32769]
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:35: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2373 ] 
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:35: [32799, 49153, 32783, 32783, 32769, 32769]
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:35: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2374 ] 
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:35: Host Frequency set to 25000 KHz

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:35: [32799, 49153, 32783, 32783, 32769, 32769]
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:01:35: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2375 ] 
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:01:35: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:01:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:01:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1B70>, 0x0, False) , Command count = 2376 ] 
15:01:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:36: SendOCR: 1107263488
15:01:36: ExcpectOCR: 3254747136
15:01:36: SendFirstOCR: 1107263488
15:01:36: SendNextOCR: 1107263488
15:01:36: SingleCommand: 0
15:01:36: SingleCommandTestType: 1
15:01:36: Identification: 1
15:01:36: ProtocolMode: 1
15:01:36: VerifyType: 0
15:01:36: SendCMD0: 1
15:01:36: SendCMD8: 1
15:01:36: SendCMD58: 1
15:01:36: SetPower: 1
15:01:36: HcsXpcS18r000: 16744448
15:01:36: HcsXpcS18r001: 33521664
15:01:36: HcsXpcS18r010: 285179904
15:01:36: HcsXpcS18r011: 301957120
15:01:36: HcsXpcS18r100: 1090486272
15:01:36: HcsXpcS18r101: 1107263488
15:01:36: HcsXpcS18r110: 1358921728
15:01:36: HcsXpcS18r111: 1375698944
15:01:36: ReadyCcs18a000: 16744448
15:01:36: ReadyCcs18a001: 33521664
15:01:36: ReadyCcs18a010: 1090486272
15:01:36: ReadyCcs18a011: 1107263488
15:01:36: ReadyCcs18a100: 2164228096
15:01:36: ReadyCcs18a101: 2181005312
15:01:36: ReadyCcs18a110: 3237969920
15:01:36: ReadyCcs18a111: 3254747136
15:01:36: Card Capacity is : 32.000000 GB
15:01:36: SendFirstOCR : 16744448
15:01:36: SendOCR : 16744448
15:01:36: SendOCR : 16744448
15:01:36: ExpectOCR : 16744448
15:01:36: globalSpeedMode : SDR50
15:01:36: globalPowerUp : powerCycle
15:01:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, False) , Command count = 2377 ] 
15:01:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:38: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:38: [ SetVolt(<py_sfcl.SDVoltage object at 0x05257060>, 0x0, True) , Command count = 2378 ] 
15:01:38: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:38: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2379 ] 
15:01:39: [ GetCardStatus() , Command count = 2380 ] 
15:01:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:39: SendFirstOCR : 33521664
15:01:39: SendOCR : 33521664
15:01:39: SendOCR : 33521664
15:01:39: ExpectOCR : 16744448
15:01:39: globalSpeedMode : SDR50
15:01:39: globalPowerUp : powerCycle
15:01:41: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:41: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193F0>, 0x0, False) , Command count = 2381 ] 
15:01:41: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:41: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:41: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193F0>, 0x0, True) , Command count = 2382 ] 
15:01:41: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:41: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:01:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2383 ] 
15:01:41: [ GetCardStatus() , Command count = 2384 ] 
15:01:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:41: SendFirstOCR : 285179904
15:01:41: SendOCR : 285179904
15:01:41: SendOCR : 285179904
15:01:41: ExpectOCR : 16744448
15:01:41: globalSpeedMode : SDR50
15:01:41: globalPowerUp : powerCycle
15:01:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, False) , Command count = 2385 ] 
15:01:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:43: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AF30>, 0x0, True) , Command count = 2386 ] 
15:01:43: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:43: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:01:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2387 ] 
15:01:44: [ GetCardStatus() , Command count = 2388 ] 
15:01:44: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:44: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:44: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:44: SendFirstOCR : 301957120
15:01:44: SendOCR : 301957120
15:01:44: SendOCR : 301957120
15:01:44: ExpectOCR : 16744448
15:01:44: globalSpeedMode : SDR50
15:01:44: globalPowerUp : powerCycle
15:01:46: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A810>, 0x0, False) , Command count = 2389 ] 
15:01:46: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:46: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0601A810>, 0x0, True) , Command count = 2390 ] 
15:01:46: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:46: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:01:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2391 ] 
15:01:47: [ GetCardStatus() , Command count = 2392 ] 
15:01:47: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:47: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:47: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:47: SendFirstOCR : 1090486272
15:01:47: SendOCR : 1090486272
15:01:47: SendOCR : 1090486272
15:01:47: ExpectOCR : 16744448
15:01:47: globalSpeedMode : SDR50
15:01:47: globalPowerUp : powerCycle
15:01:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112D0>, 0x0, False) , Command count = 2393 ] 
15:01:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112D0>, 0x0, True) , Command count = 2394 ] 
15:01:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:49: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:01:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2395 ] 
15:01:49: [ GetCardStatus() , Command count = 2396 ] 
15:01:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:49: SendFirstOCR : 1107263488
15:01:49: SendOCR : 1107263488
15:01:49: SendOCR : 1107263488
15:01:49: ExpectOCR : 16744448
15:01:49: globalSpeedMode : SDR50
15:01:49: globalPowerUp : powerCycle
15:01:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100690>, 0x0, False) , Command count = 2397 ] 
15:01:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100690>, 0x0, True) , Command count = 2398 ] 
15:01:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:51: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:01:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2399 ] 
15:01:52: [ GetCardStatus() , Command count = 2400 ] 
15:01:52: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:52: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:52: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:52: SendFirstOCR : 1358921728
15:01:52: SendOCR : 1358921728
15:01:52: SendOCR : 1358921728
15:01:52: ExpectOCR : 16744448
15:01:52: globalSpeedMode : SDR50
15:01:52: globalPowerUp : powerCycle
15:01:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1990>, 0x0, False) , Command count = 2401 ] 
15:01:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1990>, 0x0, True) , Command count = 2402 ] 
15:01:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:54: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:01:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2403 ] 
15:01:54: [ GetCardStatus() , Command count = 2404 ] 
15:01:54: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:54: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:54: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:54: SendFirstOCR : 16744448
15:01:54: SendOCR : 16744448
15:01:54: SendOCR : 16744448
15:01:54: ExpectOCR : 16744448
15:01:54: globalSpeedMode : SDR50
15:01:54: globalPowerUp : powerCycle
15:01:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111270>, 0x0, False) , Command count = 2405 ] 
15:01:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111270>, 0x0, True) , Command count = 2406 ] 
15:01:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:57: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:01:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2407 ] 
15:01:57: [ GetCardStatus() , Command count = 2408 ] 
15:01:57: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:01:57: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:01:57: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:01:57: SendFirstOCR : 33521664
15:01:57: SendOCR : 33521664
15:01:57: SendOCR : 33521664
15:01:57: ExpectOCR : 16744448
15:01:57: globalSpeedMode : SDR50
15:01:57: globalPowerUp : powerCycle
15:01:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:01:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, False) , Command count = 2409 ] 
15:01:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:59: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:01:59: [ SetVolt(<py_sfcl.SDVoltage object at 0x061113F0>, 0x0, True) , Command count = 2410 ] 
15:01:59: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:01:59: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2411 ] 
15:02:00: [ GetCardStatus() , Command count = 2412 ] 
15:02:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:00: SendFirstOCR : 285179904
15:02:00: SendOCR : 285179904
15:02:00: SendOCR : 285179904
15:02:00: ExpectOCR : 16744448
15:02:00: globalSpeedMode : SDR50
15:02:00: globalPowerUp : powerCycle
15:02:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:02:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111B10>, 0x0, False) , Command count = 2413 ] 
15:02:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:02: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:02:02: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111B10>, 0x0, True) , Command count = 2414 ] 
15:02:02: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:02: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2415 ] 
15:02:02: [ GetCardStatus() , Command count = 2416 ] 
15:02:02: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:02: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:02: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:02: SendFirstOCR : 301957120
15:02:02: SendOCR : 301957120
15:02:02: SendOCR : 301957120
15:02:02: ExpectOCR : 16744448
15:02:02: globalSpeedMode : SDR50
15:02:02: globalPowerUp : powerCycle
15:02:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:02:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111330>, 0x0, False) , Command count = 2417 ] 
15:02:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:02:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111330>, 0x0, True) , Command count = 2418 ] 
15:02:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:05: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2419 ] 
15:02:05: [ GetCardStatus() , Command count = 2420 ] 
15:02:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:05: SendFirstOCR : 1090486272
15:02:05: SendOCR : 1090486272
15:02:05: SendOCR : 1090486272
15:02:05: ExpectOCR : 16744448
15:02:05: globalSpeedMode : SDR50
15:02:05: globalPowerUp : powerCycle
15:02:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:02:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, False) , Command count = 2421 ] 
15:02:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:07: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:02:07: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1780>, 0x0, True) , Command count = 2422 ] 
15:02:07: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:07: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2423 ] 
15:02:08: [ GetCardStatus() , Command count = 2424 ] 
15:02:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:08: SendFirstOCR : 1107263488
15:02:08: SendOCR : 1107263488
15:02:08: SendOCR : 1107263488
15:02:08: ExpectOCR : 16744448
15:02:08: globalSpeedMode : SDR50
15:02:08: globalPowerUp : powerCycle
15:02:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:02:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E420>, 0x0, False) , Command count = 2425 ] 
15:02:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:10: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:02:10: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E420>, 0x0, True) , Command count = 2426 ] 
15:02:10: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2427 ] 
15:02:10: [ GetCardStatus() , Command count = 2428 ] 
15:02:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:10: SendFirstOCR : 1358921728
15:02:10: SendOCR : 1358921728
15:02:10: SendOCR : 1358921728
15:02:10: ExpectOCR : 16744448
15:02:10: globalSpeedMode : SDR50
15:02:10: globalPowerUp : powerCycle
15:02:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:02:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EC30>, 0x0, False) , Command count = 2429 ] 
15:02:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:02:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EC30>, 0x0, True) , Command count = 2430 ] 
15:02:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:02:12: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2431 ] 
15:02:13: [ GetCardStatus() , Command count = 2432 ] 
15:02:13: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:13: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:13: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:13: SendFirstOCR : 16744448
15:02:13: SendOCR : 16744448
15:02:13: SendOCR : 16744448
15:02:13: ExpectOCR : 16744448
15:02:13: globalSpeedMode : SDR50
15:02:13: globalPowerUp : powerCycle
15:02:13: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2433 ] 
15:02:14: [ GetCardStatus() , Command count = 2434 ] 
15:02:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:14: SendFirstOCR : 33521664
15:02:14: SendOCR : 33521664
15:02:14: SendOCR : 33521664
15:02:14: ExpectOCR : 16744448
15:02:14: globalSpeedMode : SDR50
15:02:14: globalPowerUp : powerCycle
15:02:14: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2435 ] 
15:02:14: [ GetCardStatus() , Command count = 2436 ] 
15:02:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:14: SendFirstOCR : 285179904
15:02:14: SendOCR : 285179904
15:02:14: SendOCR : 285179904
15:02:14: ExpectOCR : 16744448
15:02:14: globalSpeedMode : SDR50
15:02:14: globalPowerUp : powerCycle
15:02:14: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2437 ] 
15:02:15: [ GetCardStatus() , Command count = 2438 ] 
15:02:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:15: SendFirstOCR : 301957120
15:02:15: SendOCR : 301957120
15:02:15: SendOCR : 301957120
15:02:15: ExpectOCR : 16744448
15:02:15: globalSpeedMode : SDR50
15:02:15: globalPowerUp : powerCycle
15:02:15: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2439 ] 
15:02:16: [ GetCardStatus() , Command count = 2440 ] 
15:02:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:16: SendFirstOCR : 1090486272
15:02:16: SendOCR : 1090486272
15:02:16: SendOCR : 1090486272
15:02:16: ExpectOCR : 16744448
15:02:16: globalSpeedMode : SDR50
15:02:16: globalPowerUp : powerCycle
15:02:16: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2441 ] 
15:02:16: [ GetCardStatus() , Command count = 2442 ] 
15:02:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:16: SendFirstOCR : 1107263488
15:02:16: SendOCR : 1107263488
15:02:16: SendOCR : 1107263488
15:02:16: ExpectOCR : 16744448
15:02:16: globalSpeedMode : SDR50
15:02:16: globalPowerUp : powerCycle
15:02:16: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2443 ] 
15:02:17: [ GetCardStatus() , Command count = 2444 ] 
15:02:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:17: SendFirstOCR : 1358921728
15:02:17: SendOCR : 1358921728
15:02:17: SendOCR : 1358921728
15:02:17: ExpectOCR : 16744448
15:02:17: globalSpeedMode : SDR50
15:02:17: globalPowerUp : powerCycle
15:02:17: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2445 ] 
15:02:17: [ GetCardStatus() , Command count = 2446 ] 
15:02:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:17: SendFirstOCR : 16744448
15:02:17: SendOCR : 16744448
15:02:17: SendOCR : 16744448
15:02:17: ExpectOCR : 16744448
15:02:17: globalSpeedMode : SDR50
15:02:17: globalPowerUp : powerCycle
15:02:17: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2447 ] 
15:02:18: [ GetCardStatus() , Command count = 2448 ] 
15:02:18: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:18: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:18: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:18: SendFirstOCR : 33521664
15:02:18: SendOCR : 33521664
15:02:18: SendOCR : 33521664
15:02:18: ExpectOCR : 16744448
15:02:18: globalSpeedMode : SDR50
15:02:18: globalPowerUp : powerCycle
15:02:18: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2449 ] 
15:02:19: [ GetCardStatus() , Command count = 2450 ] 
15:02:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:19: SendFirstOCR : 285179904
15:02:19: SendOCR : 285179904
15:02:19: SendOCR : 285179904
15:02:19: ExpectOCR : 16744448
15:02:19: globalSpeedMode : SDR50
15:02:19: globalPowerUp : powerCycle
15:02:19: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2451 ] 
15:02:19: [ GetCardStatus() , Command count = 2452 ] 
15:02:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:19: SendFirstOCR : 301957120
15:02:19: SendOCR : 301957120
15:02:19: SendOCR : 301957120
15:02:19: ExpectOCR : 16744448
15:02:19: globalSpeedMode : SDR50
15:02:19: globalPowerUp : powerCycle
15:02:19: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2453 ] 
15:02:20: [ GetCardStatus() , Command count = 2454 ] 
15:02:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:20: SendFirstOCR : 1090486272
15:02:20: SendOCR : 1090486272
15:02:20: SendOCR : 1090486272
15:02:20: ExpectOCR : 16744448
15:02:20: globalSpeedMode : SDR50
15:02:20: globalPowerUp : powerCycle
15:02:20: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2455 ] 
15:02:21: [ GetCardStatus() , Command count = 2456 ] 
15:02:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:21: SendFirstOCR : 1107263488
15:02:21: SendOCR : 1107263488
15:02:21: SendOCR : 1107263488
15:02:21: ExpectOCR : 16744448
15:02:21: globalSpeedMode : SDR50
15:02:21: globalPowerUp : powerCycle
15:02:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2457 ] 
15:02:21: [ GetCardStatus() , Command count = 2458 ] 
15:02:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:21: SendFirstOCR : 1358921728
15:02:21: SendOCR : 1358921728
15:02:21: SendOCR : 1358921728
15:02:21: ExpectOCR : 16744448
15:02:21: globalSpeedMode : SDR50
15:02:21: globalPowerUp : powerCycle
15:02:21: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2459 ] 
15:02:22: [ GetCardStatus() , Command count = 2460 ] 
15:02:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:22: SendFirstOCR : 16744448
15:02:22: SendOCR : 16744448
15:02:22: SendOCR : 16744448
15:02:22: ExpectOCR : 16744448
15:02:22: globalSpeedMode : SDR50
15:02:22: globalPowerUp : powerCycle
15:02:22: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2461 ] 
15:02:23: [ GetCardStatus() , Command count = 2462 ] 
15:02:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:23: SendFirstOCR : 33521664
15:02:23: SendOCR : 33521664
15:02:23: SendOCR : 33521664
15:02:23: ExpectOCR : 16744448
15:02:23: globalSpeedMode : SDR50
15:02:23: globalPowerUp : powerCycle
15:02:23: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2463 ] 
15:02:23: [ GetCardStatus() , Command count = 2464 ] 
15:02:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:23: SendFirstOCR : 285179904
15:02:23: SendOCR : 285179904
15:02:23: SendOCR : 285179904
15:02:23: ExpectOCR : 16744448
15:02:23: globalSpeedMode : SDR50
15:02:23: globalPowerUp : powerCycle
15:02:23: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2465 ] 
15:02:24: [ GetCardStatus() , Command count = 2466 ] 
15:02:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:24: SendFirstOCR : 301957120
15:02:24: SendOCR : 301957120
15:02:24: SendOCR : 301957120
15:02:24: ExpectOCR : 16744448
15:02:24: globalSpeedMode : SDR50
15:02:24: globalPowerUp : powerCycle
15:02:24: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2467 ] 
15:02:24: [ GetCardStatus() , Command count = 2468 ] 
15:02:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:24: SendFirstOCR : 1090486272
15:02:24: SendOCR : 1090486272
15:02:24: SendOCR : 1090486272
15:02:24: ExpectOCR : 16744448
15:02:24: globalSpeedMode : SDR50
15:02:24: globalPowerUp : powerCycle
15:02:24: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2469 ] 
15:02:25: [ GetCardStatus() , Command count = 2470 ] 
15:02:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:25: SendFirstOCR : 1107263488
15:02:25: SendOCR : 1107263488
15:02:25: SendOCR : 1107263488
15:02:25: ExpectOCR : 16744448
15:02:25: globalSpeedMode : SDR50
15:02:25: globalPowerUp : powerCycle
15:02:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2471 ] 
15:02:26: [ GetCardStatus() , Command count = 2472 ] 
15:02:26: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:26: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:26: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:26: SendFirstOCR : 1358921728
15:02:26: SendOCR : 1358921728
15:02:26: SendOCR : 1358921728
15:02:26: ExpectOCR : 16744448
15:02:26: globalSpeedMode : SDR50
15:02:26: globalPowerUp : powerCycle
15:02:26: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2473 ] 
15:02:26: [ GetCardStatus() , Command count = 2474 ] 
15:02:26: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:26: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:26: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:26: SendFirstOCR : 16744448
15:02:26: SendOCR : 16744448
15:02:26: SendOCR : 16744448
15:02:26: ExpectOCR : 16744448
15:02:26: globalSpeedMode : SDR50
15:02:26: globalPowerUp : powerCycle
15:02:26: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2475 ] 
15:02:27: [ GetCardStatus() , Command count = 2476 ] 
15:02:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:27: SendFirstOCR : 33521664
15:02:27: SendOCR : 33521664
15:02:27: SendOCR : 33521664
15:02:27: ExpectOCR : 16744448
15:02:27: globalSpeedMode : SDR50
15:02:27: globalPowerUp : powerCycle
15:02:27: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2477 ] 
15:02:28: [ GetCardStatus() , Command count = 2478 ] 
15:02:28: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:28: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:28: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:28: SendFirstOCR : 285179904
15:02:28: SendOCR : 285179904
15:02:28: SendOCR : 285179904
15:02:28: ExpectOCR : 16744448
15:02:28: globalSpeedMode : SDR50
15:02:28: globalPowerUp : powerCycle
15:02:28: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2479 ] 
15:02:28: [ GetCardStatus() , Command count = 2480 ] 
15:02:28: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:28: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:28: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:28: SendFirstOCR : 301957120
15:02:28: SendOCR : 301957120
15:02:28: SendOCR : 301957120
15:02:28: ExpectOCR : 16744448
15:02:28: globalSpeedMode : SDR50
15:02:28: globalPowerUp : powerCycle
15:02:28: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2481 ] 
15:02:29: [ GetCardStatus() , Command count = 2482 ] 
15:02:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:29: SendFirstOCR : 1090486272
15:02:29: SendOCR : 1090486272
15:02:29: SendOCR : 1090486272
15:02:29: ExpectOCR : 16744448
15:02:29: globalSpeedMode : SDR50
15:02:29: globalPowerUp : powerCycle
15:02:29: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2483 ] 
15:02:29: [ GetCardStatus() , Command count = 2484 ] 
15:02:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:29: SendFirstOCR : 1107263488
15:02:29: SendOCR : 1107263488
15:02:29: SendOCR : 1107263488
15:02:29: ExpectOCR : 16744448
15:02:29: globalSpeedMode : SDR50
15:02:29: globalPowerUp : powerCycle
15:02:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2485 ] 
15:02:30: [ GetCardStatus() , Command count = 2486 ] 
15:02:30: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:30: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:30: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:30: SendFirstOCR : 1358921728
15:02:30: SendOCR : 1358921728
15:02:30: SendOCR : 1358921728
15:02:30: ExpectOCR : 16744448
15:02:30: globalSpeedMode : SDR50
15:02:30: globalPowerUp : powerCycle
15:02:30: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:31: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2487 ] 
15:02:31: [ GetCardStatus() , Command count = 2488 ] 
15:02:31: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:31: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:31: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:31: SendFirstOCR : 16744448
15:02:31: SendOCR : 16744448
15:02:31: SendOCR : 16744448
15:02:31: ExpectOCR : 16744448
15:02:31: globalSpeedMode : SDR50
15:02:31: globalPowerUp : powerCycle
15:02:31: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:31: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2489 ] 
15:02:31: [ GetCardStatus() , Command count = 2490 ] 
15:02:31: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:31: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:31: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:31: SendFirstOCR : 33521664
15:02:31: SendOCR : 33521664
15:02:31: SendOCR : 33521664
15:02:31: ExpectOCR : 16744448
15:02:31: globalSpeedMode : SDR50
15:02:31: globalPowerUp : powerCycle
15:02:31: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2491 ] 
15:02:32: [ GetCardStatus() , Command count = 2492 ] 
15:02:32: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:32: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:32: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:32: SendFirstOCR : 285179904
15:02:32: SendOCR : 285179904
15:02:32: SendOCR : 285179904
15:02:32: ExpectOCR : 16744448
15:02:32: globalSpeedMode : SDR50
15:02:32: globalPowerUp : powerCycle
15:02:32: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2493 ] 
15:02:33: [ GetCardStatus() , Command count = 2494 ] 
15:02:33: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:33: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:33: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:33: SendFirstOCR : 301957120
15:02:33: SendOCR : 301957120
15:02:33: SendOCR : 301957120
15:02:33: ExpectOCR : 16744448
15:02:33: globalSpeedMode : SDR50
15:02:33: globalPowerUp : powerCycle
15:02:33: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2495 ] 
15:02:33: [ GetCardStatus() , Command count = 2496 ] 
15:02:33: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:33: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:33: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:33: SendFirstOCR : 1090486272
15:02:33: SendOCR : 1090486272
15:02:33: SendOCR : 1090486272
15:02:33: ExpectOCR : 16744448
15:02:33: globalSpeedMode : SDR50
15:02:33: globalPowerUp : powerCycle
15:02:33: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2497 ] 
15:02:34: [ GetCardStatus() , Command count = 2498 ] 
15:02:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:34: SendFirstOCR : 1107263488
15:02:34: SendOCR : 1107263488
15:02:34: SendOCR : 1107263488
15:02:34: ExpectOCR : 16744448
15:02:34: globalSpeedMode : SDR50
15:02:34: globalPowerUp : powerCycle
15:02:34: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2499 ] 
15:02:34: [ GetCardStatus() , Command count = 2500 ] 
15:02:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:34: SendFirstOCR : 1358921728
15:02:34: SendOCR : 1358921728
15:02:34: SendOCR : 1358921728
15:02:34: ExpectOCR : 16744448
15:02:34: globalSpeedMode : SDR50
15:02:34: globalPowerUp : powerCycle
15:02:34: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2501 ] 
15:02:35: [ GetCardStatus() , Command count = 2502 ] 
15:02:35: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:35: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:35: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:35: SendFirstOCR : 16744448
15:02:35: SendOCR : 16744448
15:02:35: SendOCR : 16744448
15:02:35: ExpectOCR : 16744448
15:02:35: globalSpeedMode : SDR50
15:02:35: globalPowerUp : powerCycle
15:02:35: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2503 ] 
15:02:36: [ GetCardStatus() , Command count = 2504 ] 
15:02:36: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:36: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:36: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:36: SendFirstOCR : 33521664
15:02:36: SendOCR : 33521664
15:02:36: SendOCR : 33521664
15:02:36: ExpectOCR : 16744448
15:02:36: globalSpeedMode : SDR50
15:02:36: globalPowerUp : powerCycle
15:02:36: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2505 ] 
15:02:36: [ GetCardStatus() , Command count = 2506 ] 
15:02:36: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:36: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:36: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:36: SendFirstOCR : 285179904
15:02:36: SendOCR : 285179904
15:02:36: SendOCR : 285179904
15:02:36: ExpectOCR : 16744448
15:02:36: globalSpeedMode : SDR50
15:02:36: globalPowerUp : powerCycle
15:02:36: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2507 ] 
15:02:37: [ GetCardStatus() , Command count = 2508 ] 
15:02:37: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:37: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:37: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:37: SendFirstOCR : 301957120
15:02:37: SendOCR : 301957120
15:02:37: SendOCR : 301957120
15:02:37: ExpectOCR : 16744448
15:02:37: globalSpeedMode : SDR50
15:02:37: globalPowerUp : powerCycle
15:02:37: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2509 ] 
15:02:38: [ GetCardStatus() , Command count = 2510 ] 
15:02:38: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:38: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:38: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:38: SendFirstOCR : 1090486272
15:02:38: SendOCR : 1090486272
15:02:38: SendOCR : 1090486272
15:02:38: ExpectOCR : 16744448
15:02:38: globalSpeedMode : SDR50
15:02:38: globalPowerUp : powerCycle
15:02:38: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2511 ] 
15:02:38: [ GetCardStatus() , Command count = 2512 ] 
15:02:38: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:38: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:38: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:38: SendFirstOCR : 1107263488
15:02:38: SendOCR : 1107263488
15:02:38: SendOCR : 1107263488
15:02:38: ExpectOCR : 16744448
15:02:38: globalSpeedMode : SDR50
15:02:38: globalPowerUp : powerCycle
15:02:38: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2513 ] 
15:02:39: [ GetCardStatus() , Command count = 2514 ] 
15:02:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:39: SendFirstOCR : 1358921728
15:02:39: SendOCR : 1358921728
15:02:39: SendOCR : 1358921728
15:02:39: ExpectOCR : 16744448
15:02:39: globalSpeedMode : SDR50
15:02:39: globalPowerUp : powerCycle
15:02:39: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2515 ] 
15:02:40: [ GetCardStatus() , Command count = 2516 ] 
15:02:40: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:40: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:40: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:40: SendFirstOCR : 16744448
15:02:40: SendOCR : 16744448
15:02:40: SendOCR : 16744448
15:02:40: ExpectOCR : 16744448
15:02:40: globalSpeedMode : SDR50
15:02:40: globalPowerUp : powerCycle
15:02:40: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2517 ] 
15:02:40: [ GetCardStatus() , Command count = 2518 ] 
15:02:40: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:40: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:40: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:40: SendFirstOCR : 33521664
15:02:40: SendOCR : 33521664
15:02:40: SendOCR : 33521664
15:02:40: ExpectOCR : 16744448
15:02:40: globalSpeedMode : SDR50
15:02:40: globalPowerUp : powerCycle
15:02:40: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2519 ] 
15:02:41: [ GetCardStatus() , Command count = 2520 ] 
15:02:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:41: SendFirstOCR : 285179904
15:02:41: SendOCR : 285179904
15:02:41: SendOCR : 285179904
15:02:41: ExpectOCR : 16744448
15:02:41: globalSpeedMode : SDR50
15:02:41: globalPowerUp : powerCycle
15:02:41: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2521 ] 
15:02:41: [ GetCardStatus() , Command count = 2522 ] 
15:02:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:41: SendFirstOCR : 301957120
15:02:41: SendOCR : 301957120
15:02:41: SendOCR : 301957120
15:02:41: ExpectOCR : 16744448
15:02:41: globalSpeedMode : SDR50
15:02:41: globalPowerUp : powerCycle
15:02:41: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2523 ] 
15:02:42: [ GetCardStatus() , Command count = 2524 ] 
15:02:42: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:42: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:42: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:42: SendFirstOCR : 1090486272
15:02:42: SendOCR : 1090486272
15:02:42: SendOCR : 1090486272
15:02:42: ExpectOCR : 16744448
15:02:42: globalSpeedMode : SDR50
15:02:42: globalPowerUp : powerCycle
15:02:42: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2525 ] 
15:02:43: [ GetCardStatus() , Command count = 2526 ] 
15:02:43: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:43: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:43: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:43: SendFirstOCR : 1107263488
15:02:43: SendOCR : 1107263488
15:02:43: SendOCR : 1107263488
15:02:43: ExpectOCR : 16744448
15:02:43: globalSpeedMode : SDR50
15:02:43: globalPowerUp : powerCycle
15:02:43: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2527 ] 
15:02:43: [ GetCardStatus() , Command count = 2528 ] 
15:02:43: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:43: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:43: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:43: SendFirstOCR : 1358921728
15:02:43: SendOCR : 1358921728
15:02:43: SendOCR : 1358921728
15:02:43: ExpectOCR : 16744448
15:02:43: globalSpeedMode : SDR50
15:02:43: globalPowerUp : powerCycle
15:02:43: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2529 ] 
15:02:44: [ GetCardStatus() , Command count = 2530 ] 
15:02:44: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:44: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:44: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:44: SendFirstOCR : 16744448
15:02:44: SendOCR : 16744448
15:02:44: SendOCR : 16744448
15:02:44: ExpectOCR : 16744448
15:02:44: globalSpeedMode : SDR50
15:02:44: globalPowerUp : powerCycle
15:02:44: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2531 ] 
15:02:45: [ GetCardStatus() , Command count = 2532 ] 
15:02:45: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:45: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:45: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:45: SendFirstOCR : 33521664
15:02:45: SendOCR : 33521664
15:02:45: SendOCR : 33521664
15:02:45: ExpectOCR : 16744448
15:02:45: globalSpeedMode : SDR50
15:02:45: globalPowerUp : powerCycle
15:02:45: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2533 ] 
15:02:45: [ GetCardStatus() , Command count = 2534 ] 
15:02:45: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:45: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:45: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:45: SendFirstOCR : 285179904
15:02:45: SendOCR : 285179904
15:02:45: SendOCR : 285179904
15:02:45: ExpectOCR : 16744448
15:02:45: globalSpeedMode : SDR50
15:02:45: globalPowerUp : powerCycle
15:02:45: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2535 ] 
15:02:46: [ GetCardStatus() , Command count = 2536 ] 
15:02:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:46: SendFirstOCR : 301957120
15:02:46: SendOCR : 301957120
15:02:46: SendOCR : 301957120
15:02:46: ExpectOCR : 16744448
15:02:46: globalSpeedMode : SDR50
15:02:46: globalPowerUp : powerCycle
15:02:46: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2537 ] 
15:02:46: [ GetCardStatus() , Command count = 2538 ] 
15:02:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:46: SendFirstOCR : 1090486272
15:02:46: SendOCR : 1090486272
15:02:46: SendOCR : 1090486272
15:02:46: ExpectOCR : 16744448
15:02:46: globalSpeedMode : SDR50
15:02:46: globalPowerUp : powerCycle
15:02:46: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2539 ] 
15:02:47: [ GetCardStatus() , Command count = 2540 ] 
15:02:47: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:47: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:47: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:47: SendFirstOCR : 1107263488
15:02:47: SendOCR : 1107263488
15:02:47: SendOCR : 1107263488
15:02:47: ExpectOCR : 16744448
15:02:47: globalSpeedMode : SDR50
15:02:47: globalPowerUp : powerCycle
15:02:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2541 ] 
15:02:48: [ GetCardStatus() , Command count = 2542 ] 
15:02:48: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:48: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:48: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:48: SendFirstOCR : 1358921728
15:02:48: SendOCR : 1358921728
15:02:48: SendOCR : 1358921728
15:02:48: ExpectOCR : 16744448
15:02:48: globalSpeedMode : SDR50
15:02:48: globalPowerUp : powerCycle
15:02:48: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2543 ] 
15:02:48: [ GetCardStatus() , Command count = 2544 ] 
15:02:48: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:48: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:48: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:48: SendFirstOCR : 16744448
15:02:48: SendOCR : 16744448
15:02:48: SendOCR : 16744448
15:02:48: ExpectOCR : 16744448
15:02:48: globalSpeedMode : SDR50
15:02:48: globalPowerUp : powerCycle
15:02:48: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2545 ] 
15:02:49: [ GetCardStatus() , Command count = 2546 ] 
15:02:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:49: SendFirstOCR : 33521664
15:02:49: SendOCR : 33521664
15:02:49: SendOCR : 33521664
15:02:49: ExpectOCR : 16744448
15:02:49: globalSpeedMode : SDR50
15:02:49: globalPowerUp : powerCycle
15:02:49: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2547 ] 
15:02:50: [ GetCardStatus() , Command count = 2548 ] 
15:02:50: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:50: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:50: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:50: SendFirstOCR : 285179904
15:02:50: SendOCR : 285179904
15:02:50: SendOCR : 285179904
15:02:50: ExpectOCR : 16744448
15:02:50: globalSpeedMode : SDR50
15:02:50: globalPowerUp : powerCycle
15:02:50: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2549 ] 
15:02:50: [ GetCardStatus() , Command count = 2550 ] 
15:02:50: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:50: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:50: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:50: SendFirstOCR : 301957120
15:02:50: SendOCR : 301957120
15:02:50: SendOCR : 301957120
15:02:50: ExpectOCR : 16744448
15:02:50: globalSpeedMode : SDR50
15:02:50: globalPowerUp : powerCycle
15:02:50: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2551 ] 
15:02:51: [ GetCardStatus() , Command count = 2552 ] 
15:02:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:51: SendFirstOCR : 1090486272
15:02:51: SendOCR : 1090486272
15:02:51: SendOCR : 1090486272
15:02:51: ExpectOCR : 16744448
15:02:51: globalSpeedMode : SDR50
15:02:51: globalPowerUp : powerCycle
15:02:51: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2553 ] 
15:02:51: [ GetCardStatus() , Command count = 2554 ] 
15:02:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:51: SendFirstOCR : 1107263488
15:02:51: SendOCR : 1107263488
15:02:51: SendOCR : 1107263488
15:02:51: ExpectOCR : 16744448
15:02:51: globalSpeedMode : SDR50
15:02:51: globalPowerUp : powerCycle
15:02:51: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2555 ] 
15:02:52: [ GetCardStatus() , Command count = 2556 ] 
15:02:52: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:52: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:52: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:52: SendFirstOCR : 1358921728
15:02:52: SendOCR : 1358921728
15:02:52: SendOCR : 1358921728
15:02:52: ExpectOCR : 16744448
15:02:52: globalSpeedMode : SDR50
15:02:52: globalPowerUp : powerCycle
15:02:52: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2557 ] 
15:02:53: [ GetCardStatus() , Command count = 2558 ] 
15:02:53: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:53: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:53: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:53: SendFirstOCR : 16744448
15:02:53: SendOCR : 16744448
15:02:53: SendOCR : 16744448
15:02:53: ExpectOCR : 16744448
15:02:53: globalSpeedMode : SDR50
15:02:53: globalPowerUp : powerCycle
15:02:53: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2559 ] 
15:02:53: [ GetCardStatus() , Command count = 2560 ] 
15:02:53: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:53: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:53: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:53: SendFirstOCR : 33521664
15:02:53: SendOCR : 33521664
15:02:53: SendOCR : 33521664
15:02:53: ExpectOCR : 16744448
15:02:53: globalSpeedMode : SDR50
15:02:53: globalPowerUp : powerCycle
15:02:53: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2561 ] 
15:02:54: [ GetCardStatus() , Command count = 2562 ] 
15:02:54: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:54: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:54: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:54: SendFirstOCR : 285179904
15:02:54: SendOCR : 285179904
15:02:54: SendOCR : 285179904
15:02:54: ExpectOCR : 16744448
15:02:54: globalSpeedMode : SDR50
15:02:54: globalPowerUp : powerCycle
15:02:54: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2563 ] 
15:02:55: [ GetCardStatus() , Command count = 2564 ] 
15:02:55: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:55: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:55: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:55: SendFirstOCR : 301957120
15:02:55: SendOCR : 301957120
15:02:55: SendOCR : 301957120
15:02:55: ExpectOCR : 16744448
15:02:55: globalSpeedMode : SDR50
15:02:55: globalPowerUp : powerCycle
15:02:55: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:02:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2565 ] 
15:02:55: [ GetCardStatus() , Command count = 2566 ] 
15:02:55: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:55: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:55: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:55: SendFirstOCR : 1090486272
15:02:55: SendOCR : 1090486272
15:02:55: SendOCR : 1090486272
15:02:55: ExpectOCR : 16744448
15:02:55: globalSpeedMode : SDR50
15:02:55: globalPowerUp : powerCycle
15:02:55: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:02:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2567 ] 
15:02:56: [ GetCardStatus() , Command count = 2568 ] 
15:02:56: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:56: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:56: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:56: SendFirstOCR : 1107263488
15:02:56: SendOCR : 1107263488
15:02:56: SendOCR : 1107263488
15:02:56: ExpectOCR : 16744448
15:02:56: globalSpeedMode : SDR50
15:02:56: globalPowerUp : powerCycle
15:02:56: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:02:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2569 ] 
15:02:57: [ GetCardStatus() , Command count = 2570 ] 
15:02:57: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:57: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:57: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:57: SendFirstOCR : 1358921728
15:02:57: SendOCR : 1358921728
15:02:57: SendOCR : 1358921728
15:02:57: ExpectOCR : 16744448
15:02:57: globalSpeedMode : SDR50
15:02:57: globalPowerUp : powerCycle
15:02:57: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:02:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2571 ] 
15:02:57: [ GetCardStatus() , Command count = 2572 ] 
15:02:57: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:57: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:57: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:57: SendFirstOCR : 16744448
15:02:57: SendOCR : 16744448
15:02:57: SendOCR : 16744448
15:02:57: ExpectOCR : 16744448
15:02:57: globalSpeedMode : SDR50
15:02:57: globalPowerUp : powerCycle
15:02:57: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:02:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2573 ] 
15:02:58: [ GetCardStatus() , Command count = 2574 ] 
15:02:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:58: SendFirstOCR : 33521664
15:02:58: SendOCR : 33521664
15:02:58: SendOCR : 33521664
15:02:58: ExpectOCR : 16744448
15:02:58: globalSpeedMode : SDR50
15:02:58: globalPowerUp : powerCycle
15:02:58: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:02:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2575 ] 
15:02:58: [ GetCardStatus() , Command count = 2576 ] 
15:02:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:58: SendFirstOCR : 285179904
15:02:58: SendOCR : 285179904
15:02:58: SendOCR : 285179904
15:02:58: ExpectOCR : 16744448
15:02:58: globalSpeedMode : SDR50
15:02:58: globalPowerUp : powerCycle
15:02:58: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:02:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2577 ] 
15:02:59: [ GetCardStatus() , Command count = 2578 ] 
15:02:59: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:02:59: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:02:59: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:02:59: SendFirstOCR : 301957120
15:02:59: SendOCR : 301957120
15:02:59: SendOCR : 301957120
15:02:59: ExpectOCR : 16744448
15:02:59: globalSpeedMode : SDR50
15:02:59: globalPowerUp : powerCycle
15:02:59: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2579 ] 
15:03:00: [ GetCardStatus() , Command count = 2580 ] 
15:03:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:00: SendFirstOCR : 1090486272
15:03:00: SendOCR : 1090486272
15:03:00: SendOCR : 1090486272
15:03:00: ExpectOCR : 16744448
15:03:00: globalSpeedMode : SDR50
15:03:00: globalPowerUp : powerCycle
15:03:00: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2581 ] 
15:03:00: [ GetCardStatus() , Command count = 2582 ] 
15:03:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:00: SendFirstOCR : 1107263488
15:03:00: SendOCR : 1107263488
15:03:00: SendOCR : 1107263488
15:03:00: ExpectOCR : 16744448
15:03:00: globalSpeedMode : SDR50
15:03:00: globalPowerUp : powerCycle
15:03:00: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2583 ] 
15:03:01: [ GetCardStatus() , Command count = 2584 ] 
15:03:01: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:01: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:01: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:01: SendFirstOCR : 1358921728
15:03:01: SendOCR : 1358921728
15:03:01: SendOCR : 1358921728
15:03:01: ExpectOCR : 16744448
15:03:01: globalSpeedMode : SDR50
15:03:01: globalPowerUp : powerCycle
15:03:01: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2585 ] 
15:03:02: [ GetCardStatus() , Command count = 2586 ] 
15:03:02: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:02: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:02: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:02: SendFirstOCR : 16744448
15:03:02: SendOCR : 16744448
15:03:02: SendOCR : 16744448
15:03:02: ExpectOCR : 16744448
15:03:02: globalSpeedMode : SDR50
15:03:02: globalPowerUp : powerCycle
15:03:02: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2587 ] 
15:03:02: [ GetCardStatus() , Command count = 2588 ] 
15:03:02: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:02: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:02: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:02: SendFirstOCR : 33521664
15:03:02: SendOCR : 33521664
15:03:02: SendOCR : 33521664
15:03:02: ExpectOCR : 16744448
15:03:02: globalSpeedMode : SDR50
15:03:02: globalPowerUp : powerCycle
15:03:02: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2589 ] 
15:03:03: [ GetCardStatus() , Command count = 2590 ] 
15:03:03: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:03: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:03: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:03: SendFirstOCR : 285179904
15:03:03: SendOCR : 285179904
15:03:03: SendOCR : 285179904
15:03:03: ExpectOCR : 16744448
15:03:03: globalSpeedMode : SDR50
15:03:03: globalPowerUp : powerCycle
15:03:03: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2591 ] 
15:03:04: [ GetCardStatus() , Command count = 2592 ] 
15:03:04: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:04: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:04: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:04: SendFirstOCR : 301957120
15:03:04: SendOCR : 301957120
15:03:04: SendOCR : 301957120
15:03:04: ExpectOCR : 16744448
15:03:04: globalSpeedMode : SDR50
15:03:04: globalPowerUp : powerCycle
15:03:04: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2593 ] 
15:03:04: [ GetCardStatus() , Command count = 2594 ] 
15:03:04: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:04: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:04: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:04: SendFirstOCR : 1090486272
15:03:04: SendOCR : 1090486272
15:03:04: SendOCR : 1090486272
15:03:04: ExpectOCR : 16744448
15:03:04: globalSpeedMode : SDR50
15:03:04: globalPowerUp : powerCycle
15:03:04: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2595 ] 
15:03:05: [ GetCardStatus() , Command count = 2596 ] 
15:03:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:05: SendFirstOCR : 1107263488
15:03:05: SendOCR : 1107263488
15:03:05: SendOCR : 1107263488
15:03:05: ExpectOCR : 16744448
15:03:05: globalSpeedMode : SDR50
15:03:05: globalPowerUp : powerCycle
15:03:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2597 ] 
15:03:05: [ GetCardStatus() , Command count = 2598 ] 
15:03:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:05: SendFirstOCR : 1358921728
15:03:05: SendOCR : 1358921728
15:03:05: SendOCR : 1358921728
15:03:05: ExpectOCR : 16744448
15:03:05: globalSpeedMode : SDR50
15:03:05: globalPowerUp : powerCycle
15:03:05: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2599 ] 
15:03:06: [ GetCardStatus() , Command count = 2600 ] 
15:03:06: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:06: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:06: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:06: SendFirstOCR : 16744448
15:03:06: SendOCR : 16744448
15:03:06: SendOCR : 16744448
15:03:06: ExpectOCR : 16744448
15:03:06: globalSpeedMode : SDR50
15:03:06: globalPowerUp : powerCycle
15:03:06: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2601 ] 
15:03:07: [ GetCardStatus() , Command count = 2602 ] 
15:03:07: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:07: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:07: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:07: SendFirstOCR : 33521664
15:03:07: SendOCR : 33521664
15:03:07: SendOCR : 33521664
15:03:07: ExpectOCR : 16744448
15:03:07: globalSpeedMode : SDR50
15:03:07: globalPowerUp : powerCycle
15:03:07: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2603 ] 
15:03:07: [ GetCardStatus() , Command count = 2604 ] 
15:03:07: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:07: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:07: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:07: SendFirstOCR : 285179904
15:03:07: SendOCR : 285179904
15:03:07: SendOCR : 285179904
15:03:07: ExpectOCR : 16744448
15:03:07: globalSpeedMode : SDR50
15:03:07: globalPowerUp : powerCycle
15:03:07: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2605 ] 
15:03:08: [ GetCardStatus() , Command count = 2606 ] 
15:03:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:08: SendFirstOCR : 301957120
15:03:08: SendOCR : 301957120
15:03:08: SendOCR : 301957120
15:03:08: ExpectOCR : 16744448
15:03:08: globalSpeedMode : SDR50
15:03:08: globalPowerUp : powerCycle
15:03:08: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2607 ] 
15:03:09: [ GetCardStatus() , Command count = 2608 ] 
15:03:09: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:09: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:09: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:09: SendFirstOCR : 1090486272
15:03:09: SendOCR : 1090486272
15:03:09: SendOCR : 1090486272
15:03:09: ExpectOCR : 16744448
15:03:09: globalSpeedMode : SDR50
15:03:09: globalPowerUp : powerCycle
15:03:09: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2609 ] 
15:03:09: [ GetCardStatus() , Command count = 2610 ] 
15:03:09: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:09: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:09: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:09: SendFirstOCR : 1107263488
15:03:09: SendOCR : 1107263488
15:03:09: SendOCR : 1107263488
15:03:09: ExpectOCR : 16744448
15:03:09: globalSpeedMode : SDR50
15:03:09: globalPowerUp : powerCycle
15:03:09: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2611 ] 
15:03:10: [ GetCardStatus() , Command count = 2612 ] 
15:03:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:10: SendFirstOCR : 1358921728
15:03:10: SendOCR : 1358921728
15:03:10: SendOCR : 1358921728
15:03:10: ExpectOCR : 16744448
15:03:10: globalSpeedMode : SDR50
15:03:10: globalPowerUp : powerCycle
15:03:10: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2613 ] 
15:03:10: [ GetCardStatus() , Command count = 2614 ] 
15:03:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:10: SendFirstOCR : 16744448
15:03:10: SendOCR : 16744448
15:03:10: SendOCR : 16744448
15:03:10: ExpectOCR : 16744448
15:03:10: globalSpeedMode : SDR50
15:03:10: globalPowerUp : powerCycle
15:03:10: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2615 ] 
15:03:11: [ GetCardStatus() , Command count = 2616 ] 
15:03:11: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:11: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:11: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:11: SendFirstOCR : 33521664
15:03:11: SendOCR : 33521664
15:03:11: SendOCR : 33521664
15:03:11: ExpectOCR : 16744448
15:03:11: globalSpeedMode : SDR50
15:03:11: globalPowerUp : powerCycle
15:03:11: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2617 ] 
15:03:12: [ GetCardStatus() , Command count = 2618 ] 
15:03:12: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:12: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:12: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:12: SendFirstOCR : 285179904
15:03:12: SendOCR : 285179904
15:03:12: SendOCR : 285179904
15:03:12: ExpectOCR : 16744448
15:03:12: globalSpeedMode : SDR50
15:03:12: globalPowerUp : powerCycle
15:03:12: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2619 ] 
15:03:12: [ GetCardStatus() , Command count = 2620 ] 
15:03:12: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:12: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:12: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:12: SendFirstOCR : 301957120
15:03:12: SendOCR : 301957120
15:03:12: SendOCR : 301957120
15:03:12: ExpectOCR : 16744448
15:03:12: globalSpeedMode : SDR50
15:03:12: globalPowerUp : powerCycle
15:03:12: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2621 ] 
15:03:13: [ GetCardStatus() , Command count = 2622 ] 
15:03:13: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:13: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:13: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:13: SendFirstOCR : 1090486272
15:03:13: SendOCR : 1090486272
15:03:13: SendOCR : 1090486272
15:03:13: ExpectOCR : 16744448
15:03:13: globalSpeedMode : SDR50
15:03:13: globalPowerUp : powerCycle
15:03:13: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2623 ] 
15:03:14: [ GetCardStatus() , Command count = 2624 ] 
15:03:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:14: SendFirstOCR : 1107263488
15:03:14: SendOCR : 1107263488
15:03:14: SendOCR : 1107263488
15:03:14: ExpectOCR : 16744448
15:03:14: globalSpeedMode : SDR50
15:03:14: globalPowerUp : powerCycle
15:03:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2625 ] 
15:03:14: [ GetCardStatus() , Command count = 2626 ] 
15:03:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:14: SendFirstOCR : 1358921728
15:03:14: SendOCR : 1358921728
15:03:14: SendOCR : 1358921728
15:03:14: ExpectOCR : 16744448
15:03:14: globalSpeedMode : SDR50
15:03:14: globalPowerUp : powerCycle
15:03:14: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2627 ] 
15:03:15: [ GetCardStatus() , Command count = 2628 ] 
15:03:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:15: SendFirstOCR : 16744448
15:03:15: SendOCR : 16744448
15:03:15: SendOCR : 16744448
15:03:15: ExpectOCR : 16744448
15:03:15: globalSpeedMode : SDR50
15:03:15: globalPowerUp : powerCycle
15:03:15: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2629 ] 
15:03:16: [ GetCardStatus() , Command count = 2630 ] 
15:03:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:16: SendFirstOCR : 33521664
15:03:16: SendOCR : 33521664
15:03:16: SendOCR : 33521664
15:03:16: ExpectOCR : 16744448
15:03:16: globalSpeedMode : SDR50
15:03:16: globalPowerUp : powerCycle
15:03:16: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2631 ] 
15:03:16: [ GetCardStatus() , Command count = 2632 ] 
15:03:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:16: SendFirstOCR : 285179904
15:03:16: SendOCR : 285179904
15:03:16: SendOCR : 285179904
15:03:16: ExpectOCR : 16744448
15:03:16: globalSpeedMode : SDR50
15:03:16: globalPowerUp : powerCycle
15:03:16: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2633 ] 
15:03:17: [ GetCardStatus() , Command count = 2634 ] 
15:03:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:17: SendFirstOCR : 301957120
15:03:17: SendOCR : 301957120
15:03:17: SendOCR : 301957120
15:03:17: ExpectOCR : 16744448
15:03:17: globalSpeedMode : SDR50
15:03:17: globalPowerUp : powerCycle
15:03:17: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2635 ] 
15:03:17: [ GetCardStatus() , Command count = 2636 ] 
15:03:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:17: SendFirstOCR : 1090486272
15:03:17: SendOCR : 1090486272
15:03:17: SendOCR : 1090486272
15:03:17: ExpectOCR : 16744448
15:03:17: globalSpeedMode : SDR50
15:03:17: globalPowerUp : powerCycle
15:03:17: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2637 ] 
15:03:18: [ GetCardStatus() , Command count = 2638 ] 
15:03:18: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:18: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:18: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:18: SendFirstOCR : 1107263488
15:03:18: SendOCR : 1107263488
15:03:18: SendOCR : 1107263488
15:03:18: ExpectOCR : 16744448
15:03:18: globalSpeedMode : SDR50
15:03:18: globalPowerUp : powerCycle
15:03:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2639 ] 
15:03:19: [ GetCardStatus() , Command count = 2640 ] 
15:03:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:19: SendFirstOCR : 1358921728
15:03:19: SendOCR : 1358921728
15:03:19: SendOCR : 1358921728
15:03:19: ExpectOCR : 16744448
15:03:19: globalSpeedMode : SDR50
15:03:19: globalPowerUp : powerCycle
15:03:19: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2641 ] 
15:03:19: [ GetCardStatus() , Command count = 2642 ] 
15:03:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:19: SendFirstOCR : 16744448
15:03:19: SendOCR : 16744448
15:03:19: SendOCR : 16744448
15:03:19: ExpectOCR : 16744448
15:03:19: globalSpeedMode : SDR50
15:03:19: globalPowerUp : powerCycle
15:03:19: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2643 ] 
15:03:20: [ GetCardStatus() , Command count = 2644 ] 
15:03:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:20: SendFirstOCR : 33521664
15:03:20: SendOCR : 33521664
15:03:20: SendOCR : 33521664
15:03:20: ExpectOCR : 16744448
15:03:20: globalSpeedMode : SDR50
15:03:20: globalPowerUp : powerCycle
15:03:20: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2645 ] 
15:03:21: [ GetCardStatus() , Command count = 2646 ] 
15:03:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:21: SendFirstOCR : 285179904
15:03:21: SendOCR : 285179904
15:03:21: SendOCR : 285179904
15:03:21: ExpectOCR : 16744448
15:03:21: globalSpeedMode : SDR50
15:03:21: globalPowerUp : powerCycle
15:03:21: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2647 ] 
15:03:21: [ GetCardStatus() , Command count = 2648 ] 
15:03:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:21: SendFirstOCR : 301957120
15:03:21: SendOCR : 301957120
15:03:21: SendOCR : 301957120
15:03:21: ExpectOCR : 16744448
15:03:21: globalSpeedMode : SDR50
15:03:21: globalPowerUp : powerCycle
15:03:21: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2649 ] 
15:03:22: [ GetCardStatus() , Command count = 2650 ] 
15:03:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:22: SendFirstOCR : 1090486272
15:03:22: SendOCR : 1090486272
15:03:22: SendOCR : 1090486272
15:03:22: ExpectOCR : 16744448
15:03:22: globalSpeedMode : SDR50
15:03:22: globalPowerUp : powerCycle
15:03:22: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2651 ] 
15:03:22: [ GetCardStatus() , Command count = 2652 ] 
15:03:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:23: SendFirstOCR : 1107263488
15:03:23: SendOCR : 1107263488
15:03:23: SendOCR : 1107263488
15:03:23: ExpectOCR : 16744448
15:03:23: globalSpeedMode : SDR50
15:03:23: globalPowerUp : powerCycle
15:03:23: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2653 ] 
15:03:23: [ GetCardStatus() , Command count = 2654 ] 
15:03:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:23: SendFirstOCR : 1358921728
15:03:23: SendOCR : 1358921728
15:03:23: SendOCR : 1358921728
15:03:23: ExpectOCR : 16744448
15:03:23: globalSpeedMode : SDR50
15:03:23: globalPowerUp : powerCycle
15:03:23: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2655 ] 
15:03:24: [ GetCardStatus() , Command count = 2656 ] 
15:03:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:24: SendFirstOCR : 16744448
15:03:24: SendOCR : 16744448
15:03:24: SendOCR : 16744448
15:03:24: ExpectOCR : 16744448
15:03:24: globalSpeedMode : SDR50
15:03:24: globalPowerUp : powerCycle
15:03:24: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2657 ] 
15:03:24: [ GetCardStatus() , Command count = 2658 ] 
15:03:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:24: SendFirstOCR : 33521664
15:03:24: SendOCR : 33521664
15:03:24: SendOCR : 33521664
15:03:24: ExpectOCR : 16744448
15:03:24: globalSpeedMode : SDR50
15:03:24: globalPowerUp : powerCycle
15:03:24: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2659 ] 
15:03:25: [ GetCardStatus() , Command count = 2660 ] 
15:03:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:25: SendFirstOCR : 285179904
15:03:25: SendOCR : 285179904
15:03:25: SendOCR : 285179904
15:03:25: ExpectOCR : 16744448
15:03:25: globalSpeedMode : SDR50
15:03:25: globalPowerUp : powerCycle
15:03:25: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2661 ] 
15:03:26: [ GetCardStatus() , Command count = 2662 ] 
15:03:26: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:26: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:26: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:26: SendFirstOCR : 301957120
15:03:26: SendOCR : 301957120
15:03:26: SendOCR : 301957120
15:03:26: ExpectOCR : 16744448
15:03:26: globalSpeedMode : SDR50
15:03:26: globalPowerUp : powerCycle
15:03:26: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2663 ] 
15:03:26: [ GetCardStatus() , Command count = 2664 ] 
15:03:26: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:26: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:26: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:26: SendFirstOCR : 1090486272
15:03:26: SendOCR : 1090486272
15:03:26: SendOCR : 1090486272
15:03:26: ExpectOCR : 16744448
15:03:26: globalSpeedMode : SDR50
15:03:26: globalPowerUp : powerCycle
15:03:26: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2665 ] 
15:03:27: [ GetCardStatus() , Command count = 2666 ] 
15:03:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:27: SendFirstOCR : 1107263488
15:03:27: SendOCR : 1107263488
15:03:27: SendOCR : 1107263488
15:03:27: ExpectOCR : 16744448
15:03:27: globalSpeedMode : SDR50
15:03:27: globalPowerUp : powerCycle
15:03:27: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2667 ] 
15:03:27: [ GetCardStatus() , Command count = 2668 ] 
15:03:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:27: SendFirstOCR : 1358921728
15:03:27: SendOCR : 1358921728
15:03:27: SendOCR : 1358921728
15:03:27: ExpectOCR : 16744448
15:03:27: globalSpeedMode : SDR50
15:03:27: globalPowerUp : powerCycle
15:03:27: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2669 ] 
15:03:28: [ GetCardStatus() , Command count = 2670 ] 
15:03:28: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:28: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:28: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:28: SendFirstOCR : 16744448
15:03:28: SendOCR : 16744448
15:03:28: SendOCR : 16744448
15:03:28: ExpectOCR : 16744448
15:03:28: globalSpeedMode : SDR50
15:03:28: globalPowerUp : powerCycle
15:03:28: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2671 ] 
15:03:29: [ GetCardStatus() , Command count = 2672 ] 
15:03:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:29: SendFirstOCR : 33521664
15:03:29: SendOCR : 33521664
15:03:29: SendOCR : 33521664
15:03:29: ExpectOCR : 16744448
15:03:29: globalSpeedMode : SDR50
15:03:29: globalPowerUp : powerCycle
15:03:29: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2673 ] 
15:03:29: [ GetCardStatus() , Command count = 2674 ] 
15:03:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:29: SendFirstOCR : 285179904
15:03:29: SendOCR : 285179904
15:03:29: SendOCR : 285179904
15:03:29: ExpectOCR : 16744448
15:03:29: globalSpeedMode : SDR50
15:03:29: globalPowerUp : powerCycle
15:03:29: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2675 ] 
15:03:30: [ GetCardStatus() , Command count = 2676 ] 
15:03:30: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:30: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:30: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:30: SendFirstOCR : 301957120
15:03:30: SendOCR : 301957120
15:03:30: SendOCR : 301957120
15:03:30: ExpectOCR : 16744448
15:03:30: globalSpeedMode : SDR50
15:03:30: globalPowerUp : powerCycle
15:03:30: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:31: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2677 ] 
15:03:31: [ GetCardStatus() , Command count = 2678 ] 
15:03:31: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:31: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:31: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:31: SendFirstOCR : 1090486272
15:03:31: SendOCR : 1090486272
15:03:31: SendOCR : 1090486272
15:03:31: ExpectOCR : 16744448
15:03:31: globalSpeedMode : SDR50
15:03:31: globalPowerUp : powerCycle
15:03:31: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:31: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2679 ] 
15:03:31: [ GetCardStatus() , Command count = 2680 ] 
15:03:31: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:31: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:31: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:31: SendFirstOCR : 1107263488
15:03:31: SendOCR : 1107263488
15:03:31: SendOCR : 1107263488
15:03:31: ExpectOCR : 16744448
15:03:31: globalSpeedMode : SDR50
15:03:31: globalPowerUp : powerCycle
15:03:31: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2681 ] 
15:03:32: [ GetCardStatus() , Command count = 2682 ] 
15:03:32: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:32: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:32: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:32: SendFirstOCR : 1358921728
15:03:32: SendOCR : 1358921728
15:03:32: SendOCR : 1358921728
15:03:32: ExpectOCR : 16744448
15:03:32: globalSpeedMode : SDR50
15:03:32: globalPowerUp : powerCycle
15:03:32: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2683 ] 
15:03:33: [ GetCardStatus() , Command count = 2684 ] 
15:03:33: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:33: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:33: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:33: SendFirstOCR : 16744448
15:03:33: SendOCR : 16744448
15:03:33: SendOCR : 16744448
15:03:33: ExpectOCR : 16744448
15:03:33: globalSpeedMode : SDR50
15:03:33: globalPowerUp : powerCycle
15:03:33: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2685 ] 
15:03:33: [ GetCardStatus() , Command count = 2686 ] 
15:03:33: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:33: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:33: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:33: SendFirstOCR : 33521664
15:03:33: SendOCR : 33521664
15:03:33: SendOCR : 33521664
15:03:33: ExpectOCR : 16744448
15:03:33: globalSpeedMode : SDR50
15:03:33: globalPowerUp : powerCycle
15:03:33: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2687 ] 
15:03:34: [ GetCardStatus() , Command count = 2688 ] 
15:03:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:34: SendFirstOCR : 285179904
15:03:34: SendOCR : 285179904
15:03:34: SendOCR : 285179904
15:03:34: ExpectOCR : 16744448
15:03:34: globalSpeedMode : SDR50
15:03:34: globalPowerUp : powerCycle
15:03:34: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2689 ] 
15:03:34: [ GetCardStatus() , Command count = 2690 ] 
15:03:34: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:34: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:34: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:34: SendFirstOCR : 301957120
15:03:34: SendOCR : 301957120
15:03:34: SendOCR : 301957120
15:03:34: ExpectOCR : 16744448
15:03:34: globalSpeedMode : SDR50
15:03:34: globalPowerUp : powerCycle
15:03:34: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2691 ] 
15:03:35: [ GetCardStatus() , Command count = 2692 ] 
15:03:35: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:35: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:35: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:35: SendFirstOCR : 1090486272
15:03:35: SendOCR : 1090486272
15:03:35: SendOCR : 1090486272
15:03:35: ExpectOCR : 16744448
15:03:35: globalSpeedMode : SDR50
15:03:35: globalPowerUp : powerCycle
15:03:35: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2693 ] 
15:03:36: [ GetCardStatus() , Command count = 2694 ] 
15:03:36: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:36: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:36: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:36: SendFirstOCR : 1107263488
15:03:36: SendOCR : 1107263488
15:03:36: SendOCR : 1107263488
15:03:36: ExpectOCR : 16744448
15:03:36: globalSpeedMode : SDR50
15:03:36: globalPowerUp : powerCycle
15:03:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2695 ] 
15:03:36: [ GetCardStatus() , Command count = 2696 ] 
15:03:36: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:36: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:36: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:36: SendFirstOCR : 1358921728
15:03:36: SendOCR : 1358921728
15:03:36: SendOCR : 1358921728
15:03:36: ExpectOCR : 16744448
15:03:36: globalSpeedMode : SDR50
15:03:36: globalPowerUp : powerCycle
15:03:36: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2697 ] 
15:03:37: [ GetCardStatus() , Command count = 2698 ] 
15:03:37: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:37: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:37: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:37: SendFirstOCR : 16744448
15:03:37: SendOCR : 16744448
15:03:37: SendOCR : 16744448
15:03:37: ExpectOCR : 16744448
15:03:37: globalSpeedMode : SDR50
15:03:37: globalPowerUp : powerCycle
15:03:37: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2699 ] 
15:03:38: [ GetCardStatus() , Command count = 2700 ] 
15:03:38: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:38: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:38: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:38: SendFirstOCR : 33521664
15:03:38: SendOCR : 33521664
15:03:38: SendOCR : 33521664
15:03:38: ExpectOCR : 16744448
15:03:38: globalSpeedMode : SDR50
15:03:38: globalPowerUp : powerCycle
15:03:38: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2701 ] 
15:03:38: [ GetCardStatus() , Command count = 2702 ] 
15:03:38: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:38: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:38: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:38: SendFirstOCR : 285179904
15:03:38: SendOCR : 285179904
15:03:38: SendOCR : 285179904
15:03:38: ExpectOCR : 16744448
15:03:38: globalSpeedMode : SDR50
15:03:38: globalPowerUp : powerCycle
15:03:38: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2703 ] 
15:03:39: [ GetCardStatus() , Command count = 2704 ] 
15:03:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:39: SendFirstOCR : 301957120
15:03:39: SendOCR : 301957120
15:03:39: SendOCR : 301957120
15:03:39: ExpectOCR : 16744448
15:03:39: globalSpeedMode : SDR50
15:03:39: globalPowerUp : powerCycle
15:03:39: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2705 ] 
15:03:39: [ GetCardStatus() , Command count = 2706 ] 
15:03:39: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:39: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:39: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:39: SendFirstOCR : 1090486272
15:03:39: SendOCR : 1090486272
15:03:39: SendOCR : 1090486272
15:03:39: ExpectOCR : 16744448
15:03:39: globalSpeedMode : SDR50
15:03:39: globalPowerUp : powerCycle
15:03:39: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2707 ] 
15:03:40: [ GetCardStatus() , Command count = 2708 ] 
15:03:40: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:40: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:40: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:40: SendFirstOCR : 1107263488
15:03:40: SendOCR : 1107263488
15:03:40: SendOCR : 1107263488
15:03:40: ExpectOCR : 16744448
15:03:40: globalSpeedMode : SDR50
15:03:40: globalPowerUp : powerCycle
15:03:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2709 ] 
15:03:41: [ GetCardStatus() , Command count = 2710 ] 
15:03:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:41: SendFirstOCR : 1358921728
15:03:41: SendOCR : 1358921728
15:03:41: SendOCR : 1358921728
15:03:41: ExpectOCR : 16744448
15:03:41: globalSpeedMode : SDR50
15:03:41: globalPowerUp : powerCycle
15:03:41: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:41: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2711 ] 
15:03:41: [ GetCardStatus() , Command count = 2712 ] 
15:03:41: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:41: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:41: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:41: SendFirstOCR : 16744448
15:03:41: SendOCR : 16744448
15:03:41: SendOCR : 16744448
15:03:41: ExpectOCR : 16744448
15:03:41: globalSpeedMode : SDR50
15:03:41: globalPowerUp : powerCycle
15:03:41: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2713 ] 
15:03:42: [ GetCardStatus() , Command count = 2714 ] 
15:03:42: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:42: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:42: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:42: SendFirstOCR : 33521664
15:03:42: SendOCR : 33521664
15:03:42: SendOCR : 33521664
15:03:42: ExpectOCR : 16744448
15:03:42: globalSpeedMode : SDR50
15:03:42: globalPowerUp : powerCycle
15:03:42: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2715 ] 
15:03:43: [ GetCardStatus() , Command count = 2716 ] 
15:03:43: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:43: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:43: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:43: SendFirstOCR : 285179904
15:03:43: SendOCR : 285179904
15:03:43: SendOCR : 285179904
15:03:43: ExpectOCR : 16744448
15:03:43: globalSpeedMode : SDR50
15:03:43: globalPowerUp : powerCycle
15:03:43: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2717 ] 
15:03:43: [ GetCardStatus() , Command count = 2718 ] 
15:03:43: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:43: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:43: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:43: SendFirstOCR : 301957120
15:03:43: SendOCR : 301957120
15:03:43: SendOCR : 301957120
15:03:43: ExpectOCR : 16744448
15:03:43: globalSpeedMode : SDR50
15:03:43: globalPowerUp : powerCycle
15:03:43: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2719 ] 
15:03:44: [ GetCardStatus() , Command count = 2720 ] 
15:03:44: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:44: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:44: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:44: SendFirstOCR : 1090486272
15:03:44: SendOCR : 1090486272
15:03:44: SendOCR : 1090486272
15:03:44: ExpectOCR : 16744448
15:03:44: globalSpeedMode : SDR50
15:03:44: globalPowerUp : powerCycle
15:03:44: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2721 ] 
15:03:45: [ GetCardStatus() , Command count = 2722 ] 
15:03:45: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:45: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:45: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:45: SendFirstOCR : 1107263488
15:03:45: SendOCR : 1107263488
15:03:45: SendOCR : 1107263488
15:03:45: ExpectOCR : 16744448
15:03:45: globalSpeedMode : SDR50
15:03:45: globalPowerUp : powerCycle
15:03:45: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2723 ] 
15:03:45: [ GetCardStatus() , Command count = 2724 ] 
15:03:45: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:45: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:45: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:45: SendFirstOCR : 1358921728
15:03:45: SendOCR : 1358921728
15:03:45: SendOCR : 1358921728
15:03:45: ExpectOCR : 16744448
15:03:45: globalSpeedMode : SDR50
15:03:45: globalPowerUp : powerCycle
15:03:45: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2725 ] 
15:03:46: [ GetCardStatus() , Command count = 2726 ] 
15:03:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:46: SendFirstOCR : 16744448
15:03:46: SendOCR : 16744448
15:03:46: SendOCR : 16744448
15:03:46: ExpectOCR : 16744448
15:03:46: globalSpeedMode : SDR50
15:03:46: globalPowerUp : powerCycle
15:03:46: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2727 ] 
15:03:46: [ GetCardStatus() , Command count = 2728 ] 
15:03:46: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:46: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:46: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:46: SendFirstOCR : 33521664
15:03:46: SendOCR : 33521664
15:03:46: SendOCR : 33521664
15:03:46: ExpectOCR : 16744448
15:03:46: globalSpeedMode : SDR50
15:03:46: globalPowerUp : powerCycle
15:03:46: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2729 ] 
15:03:47: [ GetCardStatus() , Command count = 2730 ] 
15:03:47: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:47: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:47: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:47: SendFirstOCR : 285179904
15:03:47: SendOCR : 285179904
15:03:47: SendOCR : 285179904
15:03:47: ExpectOCR : 16744448
15:03:47: globalSpeedMode : SDR50
15:03:47: globalPowerUp : powerCycle
15:03:47: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2731 ] 
15:03:48: [ GetCardStatus() , Command count = 2732 ] 
15:03:48: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:48: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:48: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:48: SendFirstOCR : 301957120
15:03:48: SendOCR : 301957120
15:03:48: SendOCR : 301957120
15:03:48: ExpectOCR : 16744448
15:03:48: globalSpeedMode : SDR50
15:03:48: globalPowerUp : powerCycle
15:03:48: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2733 ] 
15:03:48: [ GetCardStatus() , Command count = 2734 ] 
15:03:48: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:48: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:48: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:48: SendFirstOCR : 1090486272
15:03:48: SendOCR : 1090486272
15:03:48: SendOCR : 1090486272
15:03:48: ExpectOCR : 16744448
15:03:48: globalSpeedMode : SDR50
15:03:48: globalPowerUp : powerCycle
15:03:48: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2735 ] 
15:03:49: [ GetCardStatus() , Command count = 2736 ] 
15:03:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:49: SendFirstOCR : 1107263488
15:03:49: SendOCR : 1107263488
15:03:49: SendOCR : 1107263488
15:03:49: ExpectOCR : 16744448
15:03:49: globalSpeedMode : SDR50
15:03:49: globalPowerUp : powerCycle
15:03:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2737 ] 
15:03:49: [ GetCardStatus() , Command count = 2738 ] 
15:03:49: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:49: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:49: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:49: SendFirstOCR : 1358921728
15:03:49: SendOCR : 1358921728
15:03:49: SendOCR : 1358921728
15:03:49: ExpectOCR : 16744448
15:03:49: globalSpeedMode : SDR50
15:03:49: globalPowerUp : powerCycle
15:03:49: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2739 ] 
15:03:50: [ GetCardStatus() , Command count = 2740 ] 
15:03:50: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:50: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:50: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:50: SendFirstOCR : 16744448
15:03:50: SendOCR : 16744448
15:03:50: SendOCR : 16744448
15:03:50: ExpectOCR : 16744448
15:03:50: globalSpeedMode : SDR50
15:03:50: globalPowerUp : powerCycle
15:03:50: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2741 ] 
15:03:51: [ GetCardStatus() , Command count = 2742 ] 
15:03:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:51: SendFirstOCR : 33521664
15:03:51: SendOCR : 33521664
15:03:51: SendOCR : 33521664
15:03:51: ExpectOCR : 16744448
15:03:51: globalSpeedMode : SDR50
15:03:51: globalPowerUp : powerCycle
15:03:51: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2743 ] 
15:03:51: [ GetCardStatus() , Command count = 2744 ] 
15:03:51: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:51: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:51: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:51: SendFirstOCR : 285179904
15:03:51: SendOCR : 285179904
15:03:51: SendOCR : 285179904
15:03:51: ExpectOCR : 16744448
15:03:51: globalSpeedMode : SDR50
15:03:51: globalPowerUp : powerCycle
15:03:51: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2745 ] 
15:03:52: [ GetCardStatus() , Command count = 2746 ] 
15:03:52: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:52: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:52: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:52: SendFirstOCR : 301957120
15:03:52: SendOCR : 301957120
15:03:52: SendOCR : 301957120
15:03:52: ExpectOCR : 16744448
15:03:52: globalSpeedMode : SDR50
15:03:52: globalPowerUp : powerCycle
15:03:52: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2747 ] 
15:03:53: [ GetCardStatus() , Command count = 2748 ] 
15:03:53: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:53: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:53: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:53: SendFirstOCR : 1090486272
15:03:53: SendOCR : 1090486272
15:03:53: SendOCR : 1090486272
15:03:53: ExpectOCR : 16744448
15:03:53: globalSpeedMode : SDR50
15:03:53: globalPowerUp : powerCycle
15:03:53: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2749 ] 
15:03:53: [ GetCardStatus() , Command count = 2750 ] 
15:03:53: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:53: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:53: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:53: SendFirstOCR : 1107263488
15:03:53: SendOCR : 1107263488
15:03:53: SendOCR : 1107263488
15:03:53: ExpectOCR : 16744448
15:03:53: globalSpeedMode : SDR50
15:03:53: globalPowerUp : powerCycle
15:03:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2751 ] 
15:03:54: [ GetCardStatus() , Command count = 2752 ] 
15:03:54: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:54: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:54: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:54: SendFirstOCR : 1358921728
15:03:54: SendOCR : 1358921728
15:03:54: SendOCR : 1358921728
15:03:54: ExpectOCR : 16744448
15:03:54: globalSpeedMode : SDR50
15:03:54: globalPowerUp : powerCycle
15:03:54: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2753 ] 
15:03:55: [ GetCardStatus() , Command count = 2754 ] 
15:03:55: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:55: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:55: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:55: SendFirstOCR : 16744448
15:03:55: SendOCR : 16744448
15:03:55: SendOCR : 16744448
15:03:55: ExpectOCR : 16744448
15:03:55: globalSpeedMode : SDR50
15:03:55: globalPowerUp : powerCycle
15:03:55: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:03:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2755 ] 
15:03:55: [ GetCardStatus() , Command count = 2756 ] 
15:03:55: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:55: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:55: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:55: SendFirstOCR : 33521664
15:03:55: SendOCR : 33521664
15:03:55: SendOCR : 33521664
15:03:55: ExpectOCR : 16744448
15:03:55: globalSpeedMode : SDR50
15:03:55: globalPowerUp : powerCycle
15:03:55: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:03:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2757 ] 
15:03:56: [ GetCardStatus() , Command count = 2758 ] 
15:03:56: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:56: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:56: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:56: SendFirstOCR : 285179904
15:03:56: SendOCR : 285179904
15:03:56: SendOCR : 285179904
15:03:56: ExpectOCR : 16744448
15:03:56: globalSpeedMode : SDR50
15:03:56: globalPowerUp : powerCycle
15:03:56: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:03:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2759 ] 
15:03:56: [ GetCardStatus() , Command count = 2760 ] 
15:03:56: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:56: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:56: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:56: SendFirstOCR : 301957120
15:03:56: SendOCR : 301957120
15:03:56: SendOCR : 301957120
15:03:56: ExpectOCR : 16744448
15:03:56: globalSpeedMode : SDR50
15:03:56: globalPowerUp : powerCycle
15:03:56: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:03:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2761 ] 
15:03:57: [ GetCardStatus() , Command count = 2762 ] 
15:03:57: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:57: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:57: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:57: SendFirstOCR : 1090486272
15:03:57: SendOCR : 1090486272
15:03:57: SendOCR : 1090486272
15:03:57: ExpectOCR : 16744448
15:03:57: globalSpeedMode : SDR50
15:03:57: globalPowerUp : powerCycle
15:03:57: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:03:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2763 ] 
15:03:58: [ GetCardStatus() , Command count = 2764 ] 
15:03:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:58: SendFirstOCR : 1107263488
15:03:58: SendOCR : 1107263488
15:03:58: SendOCR : 1107263488
15:03:58: ExpectOCR : 16744448
15:03:58: globalSpeedMode : SDR50
15:03:58: globalPowerUp : powerCycle
15:03:58: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:03:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2765 ] 
15:03:58: [ GetCardStatus() , Command count = 2766 ] 
15:03:58: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:58: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:58: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:58: SendFirstOCR : 1358921728
15:03:58: SendOCR : 1358921728
15:03:58: SendOCR : 1358921728
15:03:58: ExpectOCR : 16744448
15:03:58: globalSpeedMode : SDR50
15:03:58: globalPowerUp : powerCycle
15:03:58: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:03:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2767 ] 
15:03:59: [ GetCardStatus() , Command count = 2768 ] 
15:03:59: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:03:59: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:03:59: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:03:59: SendFirstOCR : 16744448
15:03:59: SendOCR : 16744448
15:03:59: SendOCR : 16744448
15:03:59: ExpectOCR : 16744448
15:03:59: globalSpeedMode : SDR50
15:03:59: globalPowerUp : powerCycle
15:03:59: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2769 ] 
15:04:00: [ GetCardStatus() , Command count = 2770 ] 
15:04:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:00: SendFirstOCR : 33521664
15:04:00: SendOCR : 33521664
15:04:00: SendOCR : 33521664
15:04:00: ExpectOCR : 16744448
15:04:00: globalSpeedMode : SDR50
15:04:00: globalPowerUp : powerCycle
15:04:00: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2771 ] 
15:04:00: [ GetCardStatus() , Command count = 2772 ] 
15:04:00: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:00: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:00: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:00: SendFirstOCR : 285179904
15:04:00: SendOCR : 285179904
15:04:00: SendOCR : 285179904
15:04:00: ExpectOCR : 16744448
15:04:00: globalSpeedMode : SDR50
15:04:00: globalPowerUp : powerCycle
15:04:00: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2773 ] 
15:04:01: [ GetCardStatus() , Command count = 2774 ] 
15:04:01: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:01: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:01: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:01: SendFirstOCR : 301957120
15:04:01: SendOCR : 301957120
15:04:01: SendOCR : 301957120
15:04:01: ExpectOCR : 16744448
15:04:01: globalSpeedMode : SDR50
15:04:01: globalPowerUp : powerCycle
15:04:01: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2775 ] 
15:04:01: [ GetCardStatus() , Command count = 2776 ] 
15:04:01: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:01: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:01: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:01: SendFirstOCR : 1090486272
15:04:01: SendOCR : 1090486272
15:04:01: SendOCR : 1090486272
15:04:01: ExpectOCR : 16744448
15:04:01: globalSpeedMode : SDR50
15:04:01: globalPowerUp : powerCycle
15:04:01: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2777 ] 
15:04:02: [ GetCardStatus() , Command count = 2778 ] 
15:04:02: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:02: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:02: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:02: SendFirstOCR : 1107263488
15:04:02: SendOCR : 1107263488
15:04:02: SendOCR : 1107263488
15:04:02: ExpectOCR : 16744448
15:04:02: globalSpeedMode : SDR50
15:04:02: globalPowerUp : powerCycle
15:04:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2779 ] 
15:04:03: [ GetCardStatus() , Command count = 2780 ] 
15:04:03: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:03: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:03: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:03: SendFirstOCR : 1358921728
15:04:03: SendOCR : 1358921728
15:04:03: SendOCR : 1358921728
15:04:03: ExpectOCR : 16744448
15:04:03: globalSpeedMode : SDR50
15:04:03: globalPowerUp : powerCycle
15:04:03: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2781 ] 
15:04:03: [ GetCardStatus() , Command count = 2782 ] 
15:04:03: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:03: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:03: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:03: SendFirstOCR : 16744448
15:04:03: SendOCR : 16744448
15:04:03: SendOCR : 16744448
15:04:03: ExpectOCR : 16744448
15:04:03: globalSpeedMode : SDR50
15:04:03: globalPowerUp : powerCycle
15:04:03: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2783 ] 
15:04:04: [ GetCardStatus() , Command count = 2784 ] 
15:04:04: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:04: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:04: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:04: SendFirstOCR : 33521664
15:04:04: SendOCR : 33521664
15:04:04: SendOCR : 33521664
15:04:04: ExpectOCR : 16744448
15:04:04: globalSpeedMode : SDR50
15:04:04: globalPowerUp : powerCycle
15:04:04: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2785 ] 
15:04:05: [ GetCardStatus() , Command count = 2786 ] 
15:04:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:05: SendFirstOCR : 285179904
15:04:05: SendOCR : 285179904
15:04:05: SendOCR : 285179904
15:04:05: ExpectOCR : 16744448
15:04:05: globalSpeedMode : SDR50
15:04:05: globalPowerUp : powerCycle
15:04:05: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2787 ] 
15:04:05: [ GetCardStatus() , Command count = 2788 ] 
15:04:05: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:05: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:05: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:05: SendFirstOCR : 301957120
15:04:05: SendOCR : 301957120
15:04:05: SendOCR : 301957120
15:04:05: ExpectOCR : 16744448
15:04:05: globalSpeedMode : SDR50
15:04:05: globalPowerUp : powerCycle
15:04:05: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:06: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2789 ] 
15:04:06: [ GetCardStatus() , Command count = 2790 ] 
15:04:06: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:06: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:06: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:06: SendFirstOCR : 1090486272
15:04:06: SendOCR : 1090486272
15:04:06: SendOCR : 1090486272
15:04:06: ExpectOCR : 16744448
15:04:06: globalSpeedMode : SDR50
15:04:06: globalPowerUp : powerCycle
15:04:06: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2791 ] 
15:04:07: [ GetCardStatus() , Command count = 2792 ] 
15:04:07: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:07: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:07: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:07: SendFirstOCR : 1107263488
15:04:07: SendOCR : 1107263488
15:04:07: SendOCR : 1107263488
15:04:07: ExpectOCR : 16744448
15:04:07: globalSpeedMode : SDR50
15:04:07: globalPowerUp : powerCycle
15:04:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2793 ] 
15:04:07: [ GetCardStatus() , Command count = 2794 ] 
15:04:07: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:07: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:07: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:07: SendFirstOCR : 1358921728
15:04:07: SendOCR : 1358921728
15:04:07: SendOCR : 1358921728
15:04:07: ExpectOCR : 16744448
15:04:07: globalSpeedMode : SDR50
15:04:07: globalPowerUp : powerCycle
15:04:07: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2795 ] 
15:04:08: [ GetCardStatus() , Command count = 2796 ] 
15:04:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:08: SendFirstOCR : 16744448
15:04:08: SendOCR : 16744448
15:04:08: SendOCR : 16744448
15:04:08: ExpectOCR : 16744448
15:04:08: globalSpeedMode : SDR50
15:04:08: globalPowerUp : powerCycle
15:04:08: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2797 ] 
15:04:08: [ GetCardStatus() , Command count = 2798 ] 
15:04:08: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:08: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:08: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:08: SendFirstOCR : 33521664
15:04:08: SendOCR : 33521664
15:04:08: SendOCR : 33521664
15:04:08: ExpectOCR : 16744448
15:04:08: globalSpeedMode : SDR50
15:04:08: globalPowerUp : powerCycle
15:04:08: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2799 ] 
15:04:09: [ GetCardStatus() , Command count = 2800 ] 
15:04:09: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:09: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:09: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:09: SendFirstOCR : 285179904
15:04:09: SendOCR : 285179904
15:04:09: SendOCR : 285179904
15:04:09: ExpectOCR : 16744448
15:04:09: globalSpeedMode : SDR50
15:04:09: globalPowerUp : powerCycle
15:04:09: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2801 ] 
15:04:10: [ GetCardStatus() , Command count = 2802 ] 
15:04:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:10: SendFirstOCR : 301957120
15:04:10: SendOCR : 301957120
15:04:10: SendOCR : 301957120
15:04:10: ExpectOCR : 16744448
15:04:10: globalSpeedMode : SDR50
15:04:10: globalPowerUp : powerCycle
15:04:10: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:10: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2803 ] 
15:04:10: [ GetCardStatus() , Command count = 2804 ] 
15:04:10: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:10: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:10: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:10: SendFirstOCR : 1090486272
15:04:10: SendOCR : 1090486272
15:04:10: SendOCR : 1090486272
15:04:10: ExpectOCR : 16744448
15:04:10: globalSpeedMode : SDR50
15:04:10: globalPowerUp : powerCycle
15:04:10: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2805 ] 
15:04:11: [ GetCardStatus() , Command count = 2806 ] 
15:04:11: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:11: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:11: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:11: SendFirstOCR : 1107263488
15:04:11: SendOCR : 1107263488
15:04:11: SendOCR : 1107263488
15:04:11: ExpectOCR : 16744448
15:04:11: globalSpeedMode : SDR50
15:04:11: globalPowerUp : powerCycle
15:04:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2807 ] 
15:04:12: [ GetCardStatus() , Command count = 2808 ] 
15:04:12: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:12: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:12: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:12: SendFirstOCR : 1358921728
15:04:12: SendOCR : 1358921728
15:04:12: SendOCR : 1358921728
15:04:12: ExpectOCR : 16744448
15:04:12: globalSpeedMode : SDR50
15:04:12: globalPowerUp : powerCycle
15:04:12: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2809 ] 
15:04:12: [ GetCardStatus() , Command count = 2810 ] 
15:04:12: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:12: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:12: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:12: SendFirstOCR : 16744448
15:04:12: SendOCR : 16744448
15:04:12: SendOCR : 16744448
15:04:12: ExpectOCR : 16744448
15:04:12: globalSpeedMode : SDR50
15:04:12: globalPowerUp : powerCycle
15:04:12: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2811 ] 
15:04:13: [ GetCardStatus() , Command count = 2812 ] 
15:04:13: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:13: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:13: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:13: SendFirstOCR : 33521664
15:04:13: SendOCR : 33521664
15:04:13: SendOCR : 33521664
15:04:13: ExpectOCR : 16744448
15:04:13: globalSpeedMode : SDR50
15:04:13: globalPowerUp : powerCycle
15:04:13: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2813 ] 
15:04:14: [ GetCardStatus() , Command count = 2814 ] 
15:04:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:14: SendFirstOCR : 285179904
15:04:14: SendOCR : 285179904
15:04:14: SendOCR : 285179904
15:04:14: ExpectOCR : 16744448
15:04:14: globalSpeedMode : SDR50
15:04:14: globalPowerUp : powerCycle
15:04:14: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2815 ] 
15:04:14: [ GetCardStatus() , Command count = 2816 ] 
15:04:14: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:14: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:14: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:14: SendFirstOCR : 301957120
15:04:14: SendOCR : 301957120
15:04:14: SendOCR : 301957120
15:04:14: ExpectOCR : 16744448
15:04:14: globalSpeedMode : SDR50
15:04:14: globalPowerUp : powerCycle
15:04:14: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2817 ] 
15:04:15: [ GetCardStatus() , Command count = 2818 ] 
15:04:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:15: SendFirstOCR : 1090486272
15:04:15: SendOCR : 1090486272
15:04:15: SendOCR : 1090486272
15:04:15: ExpectOCR : 16744448
15:04:15: globalSpeedMode : SDR50
15:04:15: globalPowerUp : powerCycle
15:04:15: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2819 ] 
15:04:15: [ GetCardStatus() , Command count = 2820 ] 
15:04:15: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:15: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:15: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:15: SendFirstOCR : 1107263488
15:04:15: SendOCR : 1107263488
15:04:15: SendOCR : 1107263488
15:04:15: ExpectOCR : 16744448
15:04:15: globalSpeedMode : SDR50
15:04:15: globalPowerUp : powerCycle
15:04:15: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2821 ] 
15:04:16: [ GetCardStatus() , Command count = 2822 ] 
15:04:16: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:16: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:16: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:16: SendFirstOCR : 1358921728
15:04:16: SendOCR : 1358921728
15:04:16: SendOCR : 1358921728
15:04:16: ExpectOCR : 16744448
15:04:16: globalSpeedMode : SDR50
15:04:16: globalPowerUp : powerCycle
15:04:16: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2823 ] 
15:04:17: [ GetCardStatus() , Command count = 2824 ] 
15:04:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:17: SendFirstOCR : 16744448
15:04:17: SendOCR : 16744448
15:04:17: SendOCR : 16744448
15:04:17: ExpectOCR : 16744448
15:04:17: globalSpeedMode : SDR50
15:04:17: globalPowerUp : powerCycle
15:04:17: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:17: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2825 ] 
15:04:17: [ GetCardStatus() , Command count = 2826 ] 
15:04:17: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:17: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:17: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:17: SendFirstOCR : 33521664
15:04:17: SendOCR : 33521664
15:04:17: SendOCR : 33521664
15:04:17: ExpectOCR : 16744448
15:04:17: globalSpeedMode : SDR50
15:04:17: globalPowerUp : powerCycle
15:04:17: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2827 ] 
15:04:18: [ GetCardStatus() , Command count = 2828 ] 
15:04:18: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:18: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:18: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:18: SendFirstOCR : 285179904
15:04:18: SendOCR : 285179904
15:04:18: SendOCR : 285179904
15:04:18: ExpectOCR : 16744448
15:04:18: globalSpeedMode : SDR50
15:04:18: globalPowerUp : powerCycle
15:04:18: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2829 ] 
15:04:19: [ GetCardStatus() , Command count = 2830 ] 
15:04:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:19: SendFirstOCR : 301957120
15:04:19: SendOCR : 301957120
15:04:19: SendOCR : 301957120
15:04:19: ExpectOCR : 16744448
15:04:19: globalSpeedMode : SDR50
15:04:19: globalPowerUp : powerCycle
15:04:19: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2831 ] 
15:04:19: [ GetCardStatus() , Command count = 2832 ] 
15:04:19: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:19: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:19: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:19: SendFirstOCR : 1090486272
15:04:19: SendOCR : 1090486272
15:04:19: SendOCR : 1090486272
15:04:19: ExpectOCR : 16744448
15:04:19: globalSpeedMode : SDR50
15:04:19: globalPowerUp : powerCycle
15:04:19: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2833 ] 
15:04:20: [ GetCardStatus() , Command count = 2834 ] 
15:04:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:20: SendFirstOCR : 1107263488
15:04:20: SendOCR : 1107263488
15:04:20: SendOCR : 1107263488
15:04:20: ExpectOCR : 16744448
15:04:20: globalSpeedMode : SDR50
15:04:20: globalPowerUp : powerCycle
15:04:20: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:20: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2835 ] 
15:04:20: [ GetCardStatus() , Command count = 2836 ] 
15:04:20: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:20: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:20: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:20: SendFirstOCR : 1358921728
15:04:20: SendOCR : 1358921728
15:04:20: SendOCR : 1358921728
15:04:20: ExpectOCR : 16744448
15:04:20: globalSpeedMode : SDR50
15:04:20: globalPowerUp : powerCycle
15:04:20: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2837 ] 
15:04:21: [ GetCardStatus() , Command count = 2838 ] 
15:04:21: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:21: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:21: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:21: SendFirstOCR : 16744448
15:04:21: SendOCR : 16744448
15:04:21: SendOCR : 16744448
15:04:21: ExpectOCR : 16744448
15:04:21: globalSpeedMode : SDR50
15:04:21: globalPowerUp : powerCycle
15:04:21: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2839 ] 
15:04:22: [ GetCardStatus() , Command count = 2840 ] 
15:04:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:22: SendFirstOCR : 33521664
15:04:22: SendOCR : 33521664
15:04:22: SendOCR : 33521664
15:04:22: ExpectOCR : 16744448
15:04:22: globalSpeedMode : SDR50
15:04:22: globalPowerUp : powerCycle
15:04:22: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2841 ] 
15:04:22: [ GetCardStatus() , Command count = 2842 ] 
15:04:22: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:22: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:22: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:22: SendFirstOCR : 285179904
15:04:22: SendOCR : 285179904
15:04:22: SendOCR : 285179904
15:04:22: ExpectOCR : 16744448
15:04:22: globalSpeedMode : SDR50
15:04:22: globalPowerUp : powerCycle
15:04:22: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2843 ] 
15:04:23: [ GetCardStatus() , Command count = 2844 ] 
15:04:23: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:23: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:23: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:23: SendFirstOCR : 301957120
15:04:23: SendOCR : 301957120
15:04:23: SendOCR : 301957120
15:04:23: ExpectOCR : 16744448
15:04:23: globalSpeedMode : SDR50
15:04:23: globalPowerUp : powerCycle
15:04:23: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2845 ] 
15:04:24: [ GetCardStatus() , Command count = 2846 ] 
15:04:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:24: SendFirstOCR : 1090486272
15:04:24: SendOCR : 1090486272
15:04:24: SendOCR : 1090486272
15:04:24: ExpectOCR : 16744448
15:04:24: globalSpeedMode : SDR50
15:04:24: globalPowerUp : powerCycle
15:04:24: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2847 ] 
15:04:24: [ GetCardStatus() , Command count = 2848 ] 
15:04:24: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:24: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:24: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:24: SendFirstOCR : 1107263488
15:04:24: SendOCR : 1107263488
15:04:24: SendOCR : 1107263488
15:04:24: ExpectOCR : 16744448
15:04:24: globalSpeedMode : SDR50
15:04:24: globalPowerUp : powerCycle
15:04:24: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2849 ] 
15:04:25: [ GetCardStatus() , Command count = 2850 ] 
15:04:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:25: SendFirstOCR : 1358921728
15:04:25: SendOCR : 1358921728
15:04:25: SendOCR : 1358921728
15:04:25: ExpectOCR : 16744448
15:04:25: globalSpeedMode : SDR50
15:04:25: globalPowerUp : powerCycle
15:04:25: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2851 ] 
15:04:25: [ GetCardStatus() , Command count = 2852 ] 
15:04:25: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:25: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:25: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:25: SendFirstOCR : 16744448
15:04:25: SendOCR : 16744448
15:04:25: SendOCR : 16744448
15:04:25: ExpectOCR : 16744448
15:04:25: globalSpeedMode : SDR50
15:04:25: globalPowerUp : powerCycle
15:04:25: [DVTCommonLib]### Reset the card with OCR value : 0xFF8000
15:04:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2853 ] 
15:04:26: [ GetCardStatus() , Command count = 2854 ] 
15:04:26: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:26: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:26: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:26: SendFirstOCR : 33521664
15:04:26: SendOCR : 33521664
15:04:26: SendOCR : 33521664
15:04:26: ExpectOCR : 16744448
15:04:26: globalSpeedMode : SDR50
15:04:26: globalPowerUp : powerCycle
15:04:26: [DVTCommonLib]### Reset the card with OCR value : 0x1FF8000
15:04:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2855 ] 
15:04:27: [ GetCardStatus() , Command count = 2856 ] 
15:04:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:27: SendFirstOCR : 285179904
15:04:27: SendOCR : 285179904
15:04:27: SendOCR : 285179904
15:04:27: ExpectOCR : 16744448
15:04:27: globalSpeedMode : SDR50
15:04:27: globalPowerUp : powerCycle
15:04:27: [DVTCommonLib]### Reset the card with OCR value : 0x10FF8000
15:04:27: [ CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2857 ] 
15:04:27: [ GetCardStatus() , Command count = 2858 ] 
15:04:27: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:27: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:27: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:27: SendFirstOCR : 301957120
15:04:27: SendOCR : 301957120
15:04:27: SendOCR : 301957120
15:04:27: ExpectOCR : 16744448
15:04:27: globalSpeedMode : SDR50
15:04:27: globalPowerUp : powerCycle
15:04:27: [DVTCommonLib]### Reset the card with OCR value : 0x11FF8000
15:04:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2859 ] 
15:04:28: [ GetCardStatus() , Command count = 2860 ] 
15:04:28: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:28: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x11FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:28: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:28: SendFirstOCR : 1090486272
15:04:28: SendOCR : 1090486272
15:04:28: SendOCR : 1090486272
15:04:28: ExpectOCR : 16744448
15:04:28: globalSpeedMode : SDR50
15:04:28: globalPowerUp : powerCycle
15:04:28: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:04:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2861 ] 
15:04:29: [ GetCardStatus() , Command count = 2862 ] 
15:04:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:29: SendFirstOCR : 1107263488
15:04:29: SendOCR : 1107263488
15:04:29: SendOCR : 1107263488
15:04:29: ExpectOCR : 16744448
15:04:29: globalSpeedMode : SDR50
15:04:29: globalPowerUp : powerCycle
15:04:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2863 ] 
15:04:29: [ GetCardStatus() , Command count = 2864 ] 
15:04:29: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:29: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:29: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:29: SendFirstOCR : 1358921728
15:04:29: SendOCR : 1358921728
15:04:29: SendOCR : 1358921728
15:04:29: ExpectOCR : 16744448
15:04:29: globalSpeedMode : SDR50
15:04:29: globalPowerUp : powerCycle
15:04:29: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:04:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2865 ] 
15:04:30: [ GetCardStatus() , Command count = 2866 ] 
15:04:30: [DVTCommonLib]### Reset[INFO]:Failed to Reset card 
15:04:30: [DVTCommonLib]### Exception_Details :Exception raised!!!, Error Number is 6 and Error Message is 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0x6L (6) executing command 'CardReset'
   Description : Card did not complete its initialization
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, 0x0, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, False, False, 0x0, 0x1, 0xAA, 0x0)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>

15:04:30: [ACMD4118_Utility_Failure_Verify]###[INFO] Expected to fail,Card did not complete its initialization

15:04:30: ########################################
15:04:30: Finished Running script SD3UHS105_DVT_SD3_00_3_4_1_1_4_CMD8_MANDATORY 
15:04:30: ########################################
15:04:30: ########################################
15:04:30: Stated Running script SD3UHS106_DVT_SD3_00_UHS_CMD11_STATE_TEST 
15:04:30: ########################################
15:04:30: ###### Running DVT_SD3.00_UHS_CMD11_STATE_TEST.st3
15:04:30: [GO4_globalInitCard]### Switch to Specify Card Type
15:04:32: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:04:32: Host Frequency set to 25000 KHz
15:04:32: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:04:32: [GO18_globalSetVolt]### Set Host Voltage value.
15:04:32: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:04:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119480>, 0x0, True) , Command count = 2867 ] 
15:04:32: [GO18_globalSetVolt]### Host voltage value is set.
15:04:32: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:04:32: [ SetVolt(<py_sfcl.SDVoltage object at 0x05177EA0>, 0x0, False) , Command count = 2868 ] 
15:04:32: [GO18_globalSetVolt]### Host voltage value is set.
15:04:32: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2869 ] 
15:04:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2870 ] 
15:04:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2871 ] 
15:04:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:04:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x06119A80>) , Command count = 2872 ] 
15:04:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:04:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x06119F30>) , Command count = 2873 ] 
15:04:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:04:32: [ SetCardRCA(0x1, 0xD555) , Command count = 2874 ] 
15:04:32: [DVTCommonLib]### Identification :Idenfication of card completed 

15:04:32: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:04:32: Host Frequency set to 25000 KHz
15:04:32: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:04:32: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:04:32: ####CSD Registe 2.0 Values####
15:04:32: CSD_STRUCTURE                                 :0x1
15:04:32: Reserv1                                       :0x0
15:04:32: Time Access 1 TAAC                            :0xe
15:04:32: Time Access 2 NSAC*100                        :0x0
15:04:32: Data Transfer Rate TRAN_SPEED                 :0x32
15:04:32: Card Command Classess CCC                     :0x5b5
15:04:32: Max Read Data Block Length  READ_BL_LEN       :0x9
15:04:32: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:04:32: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:04:32: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:04:32: DSR(driver stage register)  DSR_IMP           :0x0
15:04:32: Reserv2                                       :0x0
15:04:32: Device Size C_SIZE                            :0xedc8
15:04:32: Reserv3                                       :0x0
15:04:32: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:04:32: Erase Sector Size SECTOR_SIZE                 :0x7f
15:04:32: Write Protect Group Size WP_GRP_SIZE          :0x0
15:04:32: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:04:32: Reserv4                                       :0x0
15:04:32: Write Speed Factor R2W_FACTOR                 :0x2
15:04:32: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:04:32: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:04:32: FILE_FORMAT_GRP                               :0x0
15:04:32: COPY flag                                     :0x1
15:04:32: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:04:32: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:04:32: File_Format                                   :0x0
15:04:32: CRC                                           :0x0
15:04:32: ####CSD Registe Values####  

15:04:32: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:04:32: [GetSCRRegisterEntry] Passed
15:04:32: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:04:32: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:04:32: Data_Status_After Erases          : 0
15:04:32: CPRM Security Support             : No Security
15:04:32: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:04:32: Spec. Version                     : Version 3.0X
15:04:32: Extended Security Support         : Extended_Security_Not_Supported
15:04:32: Command Support                   : COMMAND_SUPPORT
15:04:32: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:04:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F90>, <py_sfcl.CommandDataDefinition object at 0x061235A0>) , Command count = 2875 ] 
15:04:32: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:04:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117B0>, <py_sfcl.CommandDataDefinition object at 0x06123BA0>) , Command count = 2876 ] 
15:04:32: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:04:32: [ SetBusWidth(0x4) , Command count = 2877 ] 
15:04:32: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:04:32: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123A20>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2878 ] 
15:04:32: Protected Area Size 0x28000
15:04:32: Bus Width           2
15:04:32: Secure Mode         0
15:04:32: Speed  Class        4
15:04:32: Perf Move           0
15:04:32: Au Size             9
15:04:32: Erase Size          15
15:04:32: Erase Timeout       1
15:04:32: Erase offset        1
15:04:32: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:04:32: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:04:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:04:32: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2879 ] 
15:04:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:04:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:04:32: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:04:33: Host Frequency set to 100000 KHz
15:04:33: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:04:33: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:04:33: ####CSD Registe 2.0 Values####
15:04:33: CSD_STRUCTURE                                 :0x1
15:04:33: Reserv1                                       :0x0
15:04:33: Time Access 1 TAAC                            :0xe
15:04:33: Time Access 2 NSAC*100                        :0x0
15:04:33: Data Transfer Rate TRAN_SPEED                 :0xb
15:04:33: Card Command Classess CCC                     :0x5b5
15:04:33: Max Read Data Block Length  READ_BL_LEN       :0x9
15:04:33: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:04:33: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:04:33: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:04:33: DSR(driver stage register)  DSR_IMP           :0x0
15:04:33: Reserv2                                       :0x0
15:04:33: Device Size C_SIZE                            :0xedc8
15:04:33: Reserv3                                       :0x0
15:04:33: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:04:33: Erase Sector Size SECTOR_SIZE                 :0x7f
15:04:33: Write Protect Group Size WP_GRP_SIZE          :0x0
15:04:33: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:04:33: Reserv4                                       :0x0
15:04:33: Write Speed Factor R2W_FACTOR                 :0x2
15:04:33: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:04:33: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:04:33: FILE_FORMAT_GRP                               :0x0
15:04:33: COPY flag                                     :0x1
15:04:33: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:04:33: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:04:33: File_Format                                   :0x0
15:04:33: CRC                                           :0x0
15:04:33: ####CSD Registe Values####  

15:04:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1B70>, <py_sfcl.CommandDataDefinition object at 0x06111060>) , Command count = 2880 ] 
15:04:33: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:04:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x06123300>) , Command count = 2881 ] 
15:04:33: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:04:33: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:04:35: [ HostReset(False) , Command count = 2882 ] 
15:04:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C90>, <py_sfcl.CommandDataDefinition object at 0x06123690>) , Command count = 2883 ] 
15:04:35: CMD0[ GO_IDLE_STATE ] Passed with R0 type response
15:04:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111ED0>, <py_sfcl.CommandDataDefinition object at 0x06123D20>) , Command count = 2884 ] 
15:04:35: [ GetCardStatus() , Command count = 2885 ] 
15:04:35: CMD11[ VOLTAGE_SWITCH ] Failed with a time out error as expected, continuing the test..
15:04:37: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:38: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 2886 ] 
15:04:38: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:38: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:04:38: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:38: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:38: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:38: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:38: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2887 ] 
15:04:38: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2888 ] 
15:04:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:40: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2889 ] 
15:04:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111030>, <py_sfcl.CommandDataDefinition object at 0x061111B0>) , Command count = 2890 ] 
15:04:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:04:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x06123E10>) , Command count = 2891 ] 
15:04:40: [ GetCardStatus() , Command count = 2892 ] 
15:04:40: CMD11[ VOLTAGE_SWITCH ] Failed with a time out error as expected, continuing the test..
15:04:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:42: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2893 ] 
15:04:42: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:42: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:42: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:42: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:42: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2894 ] 
15:04:42: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:42: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:04:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112A0>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 2895 ] 
15:04:42: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:04:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x061233F0>) , Command count = 2896 ] 
15:04:42: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:04:42: [ SetCardRCA(0x1, 0xD555) , Command count = 2897 ] 
15:04:42: [DVTCommonLib]### Identification :Idenfication of card completed 

15:04:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A690>, <py_sfcl.CommandDataDefinition object at 0x06123DE0>) , Command count = 2898 ] 
15:04:42: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:04:42: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111BD0>, <py_sfcl.CommandDataDefinition object at 0x06123360>) , Command count = 2899 ] 
15:04:42: [ GetCardStatus() , Command count = 2900 ] 
15:04:42: CMD11[ VOLTAGE_SWITCH ] Failed with a time out error as expected, continuing the test..
15:04:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:45: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2901 ] 
15:04:45: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:45: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:45: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:45: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:45: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:45: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2902 ] 
15:04:45: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:45: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:04:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111630>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 2903 ] 
15:04:45: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:04:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111720>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 2904 ] 
15:04:45: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:04:45: [ SetCardRCA(0x1, 0xD555) , Command count = 2905 ] 
15:04:45: [DVTCommonLib]### Identification :Idenfication of card completed 

15:04:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002D0>, <py_sfcl.CommandDataDefinition object at 0x06123E40>) , Command count = 2906 ] 
15:04:45: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:04:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100600>, <py_sfcl.CommandDataDefinition object at 0x061233C0>) , Command count = 2907 ] 
15:04:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:04:45: [GO4_globalInitCard]### Switch to Specify Card Type
15:04:47: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:04:47: Host Frequency set to 25000 KHz
15:04:47: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:04:47: [GO18_globalSetVolt]### Set Host Voltage value.
15:04:47: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:04:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111660>, 0x0, True) , Command count = 2908 ] 
15:04:47: [GO18_globalSetVolt]### Host voltage value is set.
15:04:47: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:04:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111B70>, 0x0, False) , Command count = 2909 ] 
15:04:47: [GO18_globalSetVolt]### Host voltage value is set.
15:04:47: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2910 ] 
15:04:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:04:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2911 ] 
15:04:47: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:04:47: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:04:47: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:04:47: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:04:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:04:47: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2912 ] 
15:04:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:04:47: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:04:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06123780>) , Command count = 2913 ] 
15:04:47: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:04:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111270>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 2914 ] 
15:04:47: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:04:47: [ SetCardRCA(0x1, 0xD555) , Command count = 2915 ] 
15:04:47: [DVTCommonLib]### Identification :Idenfication of card completed 

15:04:47: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:04:47: Host Frequency set to 25000 KHz
15:04:47: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:04:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:04:47: ####CSD Registe 2.0 Values####
15:04:47: CSD_STRUCTURE                                 :0x1
15:04:47: Reserv1                                       :0x0
15:04:47: Time Access 1 TAAC                            :0xe
15:04:47: Time Access 2 NSAC*100                        :0x0
15:04:47: Data Transfer Rate TRAN_SPEED                 :0x32
15:04:47: Card Command Classess CCC                     :0x5b5
15:04:47: Max Read Data Block Length  READ_BL_LEN       :0x9
15:04:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:04:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:04:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:04:47: DSR(driver stage register)  DSR_IMP           :0x0
15:04:47: Reserv2                                       :0x0
15:04:47: Device Size C_SIZE                            :0xedc8
15:04:47: Reserv3                                       :0x0
15:04:47: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:04:47: Erase Sector Size SECTOR_SIZE                 :0x7f
15:04:47: Write Protect Group Size WP_GRP_SIZE          :0x0
15:04:47: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:04:47: Reserv4                                       :0x0
15:04:47: Write Speed Factor R2W_FACTOR                 :0x2
15:04:47: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:04:47: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:04:47: FILE_FORMAT_GRP                               :0x0
15:04:47: COPY flag                                     :0x1
15:04:47: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:04:47: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:04:47: File_Format                                   :0x0
15:04:47: CRC                                           :0x0
15:04:47: ####CSD Registe Values####  

15:04:47: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:04:47: [GetSCRRegisterEntry] Passed
15:04:47: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:04:47: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:04:47: Data_Status_After Erases          : 0
15:04:47: CPRM Security Support             : No Security
15:04:47: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:04:47: Spec. Version                     : Version 3.0X
15:04:47: Extended Security Support         : Extended_Security_Not_Supported
15:04:47: Command Support                   : COMMAND_SUPPORT
15:04:47: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:04:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113F0>, <py_sfcl.CommandDataDefinition object at 0x06123C60>) , Command count = 2916 ] 
15:04:47: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:04:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1690>, <py_sfcl.CommandDataDefinition object at 0x06123B40>) , Command count = 2917 ] 
15:04:47: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:04:47: [ SetBusWidth(0x4) , Command count = 2918 ] 
15:04:47: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:04:47: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061238A0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2919 ] 
15:04:47: Protected Area Size 0x28000
15:04:47: Bus Width           2
15:04:47: Secure Mode         0
15:04:47: Speed  Class        4
15:04:47: Perf Move           0
15:04:47: Au Size             9
15:04:47: Erase Size          15
15:04:47: Erase Timeout       1
15:04:47: Erase offset        1
15:04:47: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:04:47: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:04:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:04:47: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2920 ] 
15:04:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:04:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:04:47: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:04:47: Host Frequency set to 100000 KHz
15:04:47: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:04:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:04:47: ####CSD Registe 2.0 Values####
15:04:47: CSD_STRUCTURE                                 :0x1
15:04:48: Reserv1                                       :0x0
15:04:48: Time Access 1 TAAC                            :0xe
15:04:48: Time Access 2 NSAC*100                        :0x0
15:04:48: Data Transfer Rate TRAN_SPEED                 :0xb
15:04:48: Card Command Classess CCC                     :0x5b5
15:04:48: Max Read Data Block Length  READ_BL_LEN       :0x9
15:04:48: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:04:48: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:04:48: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:04:48: DSR(driver stage register)  DSR_IMP           :0x0
15:04:48: Reserv2                                       :0x0
15:04:48: Device Size C_SIZE                            :0xedc8
15:04:48: Reserv3                                       :0x0
15:04:48: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:04:48: Erase Sector Size SECTOR_SIZE                 :0x7f
15:04:48: Write Protect Group Size WP_GRP_SIZE          :0x0
15:04:48: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:04:48: Reserv4                                       :0x0
15:04:48: Write Speed Factor R2W_FACTOR                 :0x2
15:04:48: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:04:48: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:04:48: FILE_FORMAT_GRP                               :0x0
15:04:48: COPY flag                                     :0x1
15:04:48: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:04:48: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:04:48: File_Format                                   :0x0
15:04:48: CRC                                           :0x0
15:04:48: ####CSD Registe Values####  

15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B10>, <py_sfcl.CommandDataDefinition object at 0x06123D80>) , Command count = 2921 ] 
15:04:48: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x06123AE0>) , Command count = 2922 ] 
15:04:48: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:04:48: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111810>, <py_sfcl.CommandDataDefinition object at 0x061236F0>) , Command count = 2923 ] 
15:04:48: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x06123090>) , Command count = 2924 ] 
15:04:48: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x06123600>) , Command count = 2925 ] 
15:04:48: CMD32[ ERASE_WR_BLOCK_START_ADDRESS ] Passed with R1 type response:[32, 0, 0, 9, 0, 29]
15:04:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111330>, <py_sfcl.CommandDataDefinition object at 0x06123E70>) , Command count = 2926 ] 
15:04:48: CMD33[ ERASE_BLOCK_END_ADDRESS ] Passed with R1 type response:[33, 0, 0, 9, 0, 16]
15:04:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1780>, <py_sfcl.CommandDataDefinition object at 0x061274B0>) , Command count = 2927 ] 
15:04:59: [ GetCardStatus() , Command count = 2928 ] 
15:04:59: CMD38[ ERASE_COMMAND ] Erasing the Card......
15:04:59: CMD38[ ERASE_COMMAND ] Card is Busy programming,Continuing to Test..
15:04:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1990>, <py_sfcl.CommandDataDefinition object at 0x061004B0>) , Command count = 2929 ] 
15:04:59: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:04:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1780>, <py_sfcl.CommandDataDefinition object at 0x061004E0>) , Command count = 2930 ] 
15:04:59: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:04:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E120>, <py_sfcl.CommandDataDefinition object at 0x06127AE0>) , Command count = 2931 ] 
15:04:59: [ GetCardStatus() , Command count = 2932 ] 
15:04:59: CMD11[ VOLTAGE_SWITCH ] Failed with a time out error as expected, continuing the test..
15:04:59: [GO4_globalInitCard]### Switch to Specify Card Type
15:05:01: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:05:01: Host Frequency set to 25000 KHz
15:05:01: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:05:01: [GO18_globalSetVolt]### Set Host Voltage value.
15:05:01: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:05:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E420>, 0x0, True) , Command count = 2933 ] 
15:05:01: [GO18_globalSetVolt]### Host voltage value is set.
15:05:01: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:05:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119BD0>, 0x0, False) , Command count = 2934 ] 
15:05:01: [GO18_globalSetVolt]### Host voltage value is set.
15:05:01: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2935 ] 
15:05:01: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:05:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2936 ] 
15:05:01: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:05:01: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:05:01: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:05:01: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:05:01: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:05:01: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2937 ] 
15:05:01: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:05:01: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:05:01: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F00>, <py_sfcl.CommandDataDefinition object at 0x06127E10>) , Command count = 2938 ] 
15:05:01: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:05:01: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 2939 ] 
15:05:01: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:05:01: [ SetCardRCA(0x1, 0xD555) , Command count = 2940 ] 
15:05:01: [DVTCommonLib]### Identification :Idenfication of card completed 

15:05:01: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:05:01: Host Frequency set to 25000 KHz
15:05:01: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:05:01: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:05:01: ####CSD Registe 2.0 Values####
15:05:01: CSD_STRUCTURE                                 :0x1
15:05:01: Reserv1                                       :0x0
15:05:01: Time Access 1 TAAC                            :0xe
15:05:01: Time Access 2 NSAC*100                        :0x0
15:05:01: Data Transfer Rate TRAN_SPEED                 :0x32
15:05:01: Card Command Classess CCC                     :0x5b5
15:05:01: Max Read Data Block Length  READ_BL_LEN       :0x9
15:05:01: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:05:01: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:05:01: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:05:01: DSR(driver stage register)  DSR_IMP           :0x0
15:05:01: Reserv2                                       :0x0
15:05:01: Device Size C_SIZE                            :0xedc8
15:05:01: Reserv3                                       :0x0
15:05:01: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:05:01: Erase Sector Size SECTOR_SIZE                 :0x7f
15:05:01: Write Protect Group Size WP_GRP_SIZE          :0x0
15:05:01: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:05:01: Reserv4                                       :0x0
15:05:01: Write Speed Factor R2W_FACTOR                 :0x2
15:05:01: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:05:01: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:05:01: FILE_FORMAT_GRP                               :0x0
15:05:01: COPY flag                                     :0x1
15:05:01: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:05:01: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:05:01: File_Format                                   :0x0
15:05:01: CRC                                           :0x0
15:05:01: ####CSD Registe Values####  

15:05:01: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:05:01: [GetSCRRegisterEntry] Passed
15:05:01: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:05:01: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:05:01: Data_Status_After Erases          : 0
15:05:01: CPRM Security Support             : No Security
15:05:01: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:05:01: Spec. Version                     : Version 3.0X
15:05:01: Extended Security Support         : Extended_Security_Not_Supported
15:05:01: Command Support                   : COMMAND_SUPPORT
15:05:01: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:05:01: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119330>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 2941 ] 
15:05:01: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:05:01: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1750>, <py_sfcl.CommandDataDefinition object at 0x061271B0>) , Command count = 2942 ] 
15:05:01: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:05:01: [ SetBusWidth(0x4) , Command count = 2943 ] 
15:05:01: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:05:01: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127ED0>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2944 ] 
15:05:01: Protected Area Size 0x28000
15:05:01: Bus Width           2
15:05:01: Secure Mode         0
15:05:01: Speed  Class        4
15:05:01: Perf Move           0
15:05:01: Au Size             9
15:05:01: Erase Size          15
15:05:01: Erase Timeout       1
15:05:01: Erase offset        1
15:05:01: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:05:01: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:05:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:05:01: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2945 ] 
15:05:01: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:05:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:05:01: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:05:02: Host Frequency set to 100000 KHz
15:05:02: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:05:02: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:05:02: ####CSD Registe 2.0 Values####
15:05:02: CSD_STRUCTURE                                 :0x1
15:05:02: Reserv1                                       :0x0
15:05:02: Time Access 1 TAAC                            :0xe
15:05:02: Time Access 2 NSAC*100                        :0x0
15:05:02: Data Transfer Rate TRAN_SPEED                 :0xb
15:05:02: Card Command Classess CCC                     :0x5b5
15:05:02: Max Read Data Block Length  READ_BL_LEN       :0x9
15:05:02: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:05:02: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:05:02: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:05:02: DSR(driver stage register)  DSR_IMP           :0x0
15:05:02: Reserv2                                       :0x0
15:05:02: Device Size C_SIZE                            :0xedc8
15:05:02: Reserv3                                       :0x0
15:05:02: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:05:02: Erase Sector Size SECTOR_SIZE                 :0x7f
15:05:02: Write Protect Group Size WP_GRP_SIZE          :0x0
15:05:02: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:05:02: Reserv4                                       :0x0
15:05:02: Write Speed Factor R2W_FACTOR                 :0x2
15:05:02: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:05:02: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:05:02: FILE_FORMAT_GRP                               :0x0
15:05:02: COPY flag                                     :0x1
15:05:02: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:05:02: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:05:02: File_Format                                   :0x0
15:05:02: CRC                                           :0x0
15:05:02: ####CSD Registe Values####  

15:05:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C210>, <py_sfcl.CommandDataDefinition object at 0x0611EED0>) , Command count = 2946 ] 
15:05:02: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:05:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C450>, <py_sfcl.CommandDataDefinition object at 0x061278A0>) , Command count = 2947 ] 
15:05:02: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:05:02: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:05:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111510>, <py_sfcl.CommandDataDefinition object at 0x06127420>) , Command count = 2948 ] 
15:05:02: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:05:02: [ SetBusWidth(0x4) , Command count = 2949 ] 
15:05:02: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:05:02: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127B40>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2950 ] 
15:05:02: Protected Area Size 0x28000
15:05:02: Bus Width           2
15:05:02: Secure Mode         0
15:05:02: Speed  Class        4
15:05:02: Perf Move           0
15:05:02: Au Size             9
15:05:02: Erase Size          15
15:05:02: Erase Timeout       1
15:05:02: Erase offset        1
15:05:02: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:05:02: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:05:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x0611E1B0>) , Command count = 2951 ] 
15:05:03: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:05:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111600>, <py_sfcl.CommandDataDefinition object at 0x06127390>) , Command count = 2952 ] 
15:05:03: CMD32[ ERASE_WR_BLOCK_START_ADDRESS ] Passed with R1 type response:[32, 0, 0, 9, 0, 29]
15:05:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111DB0>, <py_sfcl.CommandDataDefinition object at 0x06127990>) , Command count = 2953 ] 
15:05:03: CMD33[ ERASE_BLOCK_END_ADDRESS ] Passed with R1 type response:[33, 0, 0, 9, 0, 16]
15:05:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x06127A80>) , Command count = 2954 ] 
15:05:13: [ GetCardStatus() , Command count = 2955 ] 
15:05:13: CMD38[ ERASE_COMMAND ] Erasing the Card......
15:05:13: CMD38[ ERASE_COMMAND ] Card is Busy programming,Continuing to Test..
15:05:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119630>, <py_sfcl.CommandDataDefinition object at 0x061116C0>) , Command count = 2956 ] 
15:05:13: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:05:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x0611E060>) , Command count = 2957 ] 
15:05:13: [ GetCardStatus() , Command count = 2958 ] 
15:05:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194E0>, <py_sfcl.CommandDataDefinition object at 0x061277E0>) , Command count = 2959 ] 
15:05:13: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:05:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x06111090>) , Command count = 2960 ] 
15:05:13: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x061275D0>) , Command count = 2961 ] 
15:06:03: [ GetCardStatus() , Command count = 2962 ] 
15:06:03: CMD11[ VOLTAGE_SWITCH ] Failed with a time out error as expected, continuing the test..
15:06:03: ########################################
15:06:03: Finished Running script SD3UHS106_DVT_SD3_00_UHS_CMD11_STATE_TEST 
15:06:03: ########################################
15:06:03: ########################################
15:06:03: Stated Running script SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST 
15:06:03: ########################################
15:06:03: ###### Running SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py
15:06:03: [GO4_globalInitCard]### Switch to Specify Card Type
15:06:05: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:05: Host Frequency set to 25000 KHz
15:06:05: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:05: [GO18_globalSetVolt]### Set Host Voltage value.
15:06:05: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:06:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127CC0>, 0x0, True) , Command count = 2963 ] 
15:06:05: [GO18_globalSetVolt]### Host voltage value is set.
15:06:05: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:06:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x061118D0>, 0x0, False) , Command count = 2964 ] 
15:06:05: [GO18_globalSetVolt]### Host voltage value is set.
15:06:05: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 2965 ] 
15:06:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2966 ] 
15:06:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:05: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2967 ] 
15:06:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:05: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C00>, <py_sfcl.CommandDataDefinition object at 0x06127270>) , Command count = 2968 ] 
15:06:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E2D0>, <py_sfcl.CommandDataDefinition object at 0x061277B0>) , Command count = 2969 ] 
15:06:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:05: [ SetCardRCA(0x1, 0xD555) , Command count = 2970 ] 
15:06:06: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:06: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:06: Host Frequency set to 25000 KHz
15:06:06: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:06: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:06: ####CSD Registe 2.0 Values####
15:06:06: CSD_STRUCTURE                                 :0x1
15:06:06: Reserv1                                       :0x0
15:06:06: Time Access 1 TAAC                            :0xe
15:06:06: Time Access 2 NSAC*100                        :0x0
15:06:06: Data Transfer Rate TRAN_SPEED                 :0x32
15:06:06: Card Command Classess CCC                     :0x5b5
15:06:06: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:06: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:06: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:06: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:06: DSR(driver stage register)  DSR_IMP           :0x0
15:06:06: Reserv2                                       :0x0
15:06:06: Device Size C_SIZE                            :0xedc8
15:06:06: Reserv3                                       :0x0
15:06:06: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:06: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:06: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:06: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:06: Reserv4                                       :0x0
15:06:06: Write Speed Factor R2W_FACTOR                 :0x2
15:06:06: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:06: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:06: FILE_FORMAT_GRP                               :0x0
15:06:06: COPY flag                                     :0x1
15:06:06: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:06: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:06: File_Format                                   :0x0
15:06:06: CRC                                           :0x0
15:06:06: ####CSD Registe Values####  

15:06:06: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:06:06: [GetSCRRegisterEntry] Passed
15:06:06: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:06:06: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:06:06: Data_Status_After Erases          : 0
15:06:06: CPRM Security Support             : No Security
15:06:06: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:06:06: Spec. Version                     : Version 3.0X
15:06:06: Extended Security Support         : Extended_Security_Not_Supported
15:06:06: Command Support                   : COMMAND_SUPPORT
15:06:06: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:06:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C30>, <py_sfcl.CommandDataDefinition object at 0x061279F0>) , Command count = 2971 ] 
15:06:06: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:06:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E10>, <py_sfcl.CommandDataDefinition object at 0x06127A50>) , Command count = 2972 ] 
15:06:06: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:06:06: [ SetBusWidth(0x4) , Command count = 2973 ] 
15:06:06: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:06:06: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06127570>, <0x200/0x200, Spc, pat:0x0>) , Command count = 2974 ] 
15:06:06: Protected Area Size 0x28000
15:06:06: Bus Width           2
15:06:06: Secure Mode         0
15:06:06: Speed  Class        4
15:06:06: Perf Move           0
15:06:06: Au Size             9
15:06:06: Erase Size          15
15:06:06: Erase Timeout       1
15:06:06: Erase offset        1
15:06:06: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:06:06: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:06:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:06: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 2975 ] 
15:06:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:06: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:06:06: Host Frequency set to 100000 KHz
15:06:06: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:06:06: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:06: ####CSD Registe 2.0 Values####
15:06:06: CSD_STRUCTURE                                 :0x1
15:06:06: Reserv1                                       :0x0
15:06:06: Time Access 1 TAAC                            :0xe
15:06:06: Time Access 2 NSAC*100                        :0x0
15:06:06: Data Transfer Rate TRAN_SPEED                 :0xb
15:06:06: Card Command Classess CCC                     :0x5b5
15:06:06: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:06: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:06: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:06: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:06: DSR(driver stage register)  DSR_IMP           :0x0
15:06:06: Reserv2                                       :0x0
15:06:06: Device Size C_SIZE                            :0xedc8
15:06:06: Reserv3                                       :0x0
15:06:06: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:06: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:06: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:06: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:06: Reserv4                                       :0x0
15:06:06: Write Speed Factor R2W_FACTOR                 :0x2
15:06:06: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:06: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:06: FILE_FORMAT_GRP                               :0x0
15:06:06: COPY flag                                     :0x1
15:06:06: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:06: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:06: File_Format                                   :0x0
15:06:06: CRC                                           :0x0
15:06:06: ####CSD Registe Values####  

15:06:06: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x06127DE0>) , Command count = 2976 ] 
15:06:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119CC0>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 2977 ] 
15:06:07: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:07: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:06:09: [ HostReset(False) , Command count = 2978 ] 
15:06:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x06127F30>) , Command count = 2979 ] 
15:06:09: CMD0[ GO_IDLE_STATE ] Passed with R0 type response
15:06:09: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127840>, <py_sfcl.CommandDataDefinition object at 0x06127D20>) , Command count = 2980 ] 
15:06:09: [ GetCardStatus() , Command count = 2981 ] 
15:06:09: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:06:09: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Expected to fail,it is time out on card response

15:06:11: [ HostReset(False) , Command count = 2982 ] 
15:06:11: [ SetSpecialModes(0x5, True) , Command count = 2983 ] 
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D80>, <py_sfcl.CommandDataDefinition object at 0x06127B10>) , Command count = 2984 ] 
15:06:11: CMD0[ GO_IDLE_STATE ] Passed with R0 type response
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E450>, <py_sfcl.CommandDataDefinition object at 0x0611E510>) , Command count = 2985 ] 
15:06:11: [DVTCommonLib]### CMD55[APP_CMD] :Passed with R1 type response:[55]
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 2986 ] 
15:06:11: CMD41[ SD_SEND_OP_COND ] Passed with R3 type response:[63, 0, 255, 128, 0, 255]
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E570>, <py_sfcl.CommandDataDefinition object at 0x0610EAE0>) , Command count = 2987 ] 
15:06:11: [DVTCommonLib]### CMD55[APP_CMD] :Passed with R1 type response:[55]
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EB10>, <py_sfcl.CommandDataDefinition object at 0x0610EB70>) , Command count = 2988 ] 
15:06:11: CMD41[ SD_SEND_OP_COND ] Passed with R3 type response:[63, 0, 255, 128, 0, 255]
15:06:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E70>, <py_sfcl.CommandDataDefinition object at 0x0610EED0>) , Command count = 2989 ] 
15:06:11: [ GetCardStatus() , Command count = 2990 ] 
15:06:11: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:06:11: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Expected to fail,it is time out on card response

15:06:13: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:13: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2991 ] 
15:06:13: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:13: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:13: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:13: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:13: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2992 ] 
15:06:13: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:13: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127840>, <py_sfcl.CommandDataDefinition object at 0x06127D20>) , Command count = 2993 ] 
15:06:13: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E0C0>, <py_sfcl.CommandDataDefinition object at 0x0610EF30>) , Command count = 2994 ] 
15:06:14: [ GetCardStatus() , Command count = 2995 ] 
15:06:14: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:06:14: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Expected to fail,it is time out on card response

15:06:16: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 2996 ] 
15:06:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:16: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 2997 ] 
15:06:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:16: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF90>, <py_sfcl.CommandDataDefinition object at 0x06111360>) , Command count = 2998 ] 
15:06:16: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E5D0>, <py_sfcl.CommandDataDefinition object at 0x0610EDB0>) , Command count = 2999 ] 
15:06:16: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:16: [ SetCardRCA(0x1, 0xD555) , Command count = 3000 ] 
15:06:16: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0610E660>) , Command count = 3001 ] 
15:06:16: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:16: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Card is in Stby as Expected 

15:06:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F60>, <py_sfcl.CommandDataDefinition object at 0x0610E930>) , Command count = 3002 ] 
15:06:16: [ GetCardStatus() , Command count = 3003 ] 
15:06:16: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:06:16: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Expected to fail,it is time out on card response

15:06:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3004 ] 
15:06:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3005 ] 
15:06:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E9C0>, <py_sfcl.CommandDataDefinition object at 0x0611ECC0>) , Command count = 3006 ] 
15:06:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E10>, <py_sfcl.CommandDataDefinition object at 0x0610E7B0>) , Command count = 3007 ] 
15:06:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:18: [ SetCardRCA(0x1, 0xD555) , Command count = 3008 ] 
15:06:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191B0>, <py_sfcl.CommandDataDefinition object at 0x0610ED50>) , Command count = 3009 ] 
15:06:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:18: [ SetBusWidth(0x4) , Command count = 3010 ] 
15:06:18: [GO4_globalInitCard]### Switch to Specify Card Type
15:06:21: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:21: Host Frequency set to 25000 KHz
15:06:21: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:21: [GO18_globalSetVolt]### Set Host Voltage value.
15:06:21: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:06:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119450>, 0x0, True) , Command count = 3011 ] 
15:06:21: [GO18_globalSetVolt]### Host voltage value is set.
15:06:21: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:06:21: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E930>, 0x0, False) , Command count = 3012 ] 
15:06:21: [GO18_globalSetVolt]### Host voltage value is set.
15:06:21: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 3013 ] 
15:06:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 3014 ] 
15:06:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3015 ] 
15:06:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC60>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 3016 ] 
15:06:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC90>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 3017 ] 
15:06:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:21: [ SetCardRCA(0x1, 0xD555) , Command count = 3018 ] 
15:06:21: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:21: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:21: Host Frequency set to 25000 KHz
15:06:21: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:21: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:21: ####CSD Registe 2.0 Values####
15:06:21: CSD_STRUCTURE                                 :0x1
15:06:21: Reserv1                                       :0x0
15:06:21: Time Access 1 TAAC                            :0xe
15:06:21: Time Access 2 NSAC*100                        :0x0
15:06:21: Data Transfer Rate TRAN_SPEED                 :0x32
15:06:21: Card Command Classess CCC                     :0x5b5
15:06:21: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:21: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:21: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:21: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:21: DSR(driver stage register)  DSR_IMP           :0x0
15:06:21: Reserv2                                       :0x0
15:06:21: Device Size C_SIZE                            :0xedc8
15:06:21: Reserv3                                       :0x0
15:06:21: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:21: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:21: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:21: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:21: Reserv4                                       :0x0
15:06:21: Write Speed Factor R2W_FACTOR                 :0x2
15:06:21: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:21: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:21: FILE_FORMAT_GRP                               :0x0
15:06:21: COPY flag                                     :0x1
15:06:21: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:21: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:21: File_Format                                   :0x0
15:06:21: CRC                                           :0x0
15:06:21: ####CSD Registe Values####  

15:06:21: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:06:21: [GetSCRRegisterEntry] Passed
15:06:21: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:06:21: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:06:21: Data_Status_After Erases          : 0
15:06:21: CPRM Security Support             : No Security
15:06:21: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:06:21: Spec. Version                     : Version 3.0X
15:06:21: Extended Security Support         : Extended_Security_Not_Supported
15:06:21: Command Support                   : COMMAND_SUPPORT
15:06:21: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:06:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192A0>, <py_sfcl.CommandDataDefinition object at 0x0610EE40>) , Command count = 3019 ] 
15:06:21: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:06:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119300>, <py_sfcl.CommandDataDefinition object at 0x0610EAB0>) , Command count = 3020 ] 
15:06:21: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:06:21: [ SetBusWidth(0x4) , Command count = 3021 ] 
15:06:21: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:06:21: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x0610EC60>, <0x200/0x200, Spc, pat:0x0>) , Command count = 3022 ] 
15:06:21: Protected Area Size 0x28000
15:06:21: Bus Width           2
15:06:21: Secure Mode         0
15:06:21: Speed  Class        4
15:06:21: Perf Move           0
15:06:21: Au Size             9
15:06:21: Erase Size          15
15:06:21: Erase Timeout       1
15:06:21: Erase offset        1
15:06:21: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:06:21: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:06:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:21: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3023 ] 
15:06:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:21: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:06:21: Host Frequency set to 100000 KHz
15:06:21: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:06:21: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:21: ####CSD Registe 2.0 Values####
15:06:21: CSD_STRUCTURE                                 :0x1
15:06:21: Reserv1                                       :0x0
15:06:21: Time Access 1 TAAC                            :0xe
15:06:21: Time Access 2 NSAC*100                        :0x0
15:06:21: Data Transfer Rate TRAN_SPEED                 :0xb
15:06:21: Card Command Classess CCC                     :0x5b5
15:06:21: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:21: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:21: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:21: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:21: DSR(driver stage register)  DSR_IMP           :0x0
15:06:21: Reserv2                                       :0x0
15:06:21: Device Size C_SIZE                            :0xedc8
15:06:21: Reserv3                                       :0x0
15:06:21: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:21: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:21: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:22: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:22: Reserv4                                       :0x0
15:06:22: Write Speed Factor R2W_FACTOR                 :0x2
15:06:22: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:22: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:22: FILE_FORMAT_GRP                               :0x0
15:06:22: COPY flag                                     :0x1
15:06:22: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:22: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:22: File_Format                                   :0x0
15:06:22: CRC                                           :0x0
15:06:22: ####CSD Registe Values####  

15:06:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E960>, <py_sfcl.CommandDataDefinition object at 0x06119810>) , Command count = 3024 ] 
15:06:22: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119750>, <py_sfcl.CommandDataDefinition object at 0x0610E9C0>) , Command count = 3025 ] 
15:06:22: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:22: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:06:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:06:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF00>, 0x0, False) , Command count = 3026 ] 
15:06:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:24: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:06:24: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611EF00>, 0x0, True) , Command count = 3027 ] 
15:06:24: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:24: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:24: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3028 ] 
15:06:24: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:24: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:24: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:24: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:24: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:24: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:24: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3029 ] 
15:06:24: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:24: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E750>, <py_sfcl.CommandDataDefinition object at 0x0610EA50>) , Command count = 3030 ] 
15:06:24: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:24: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 3031 ] 
15:06:24: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:24: [ SetCardRCA(0x1, 0xD555) , Command count = 3032 ] 
15:06:24: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:24: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:24: [ SetBusWidth(0x4) , Command count = 3033 ] 
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:24: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3034 ] 
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:24: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:24: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3035 ] 
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:24: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:24: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3036 ] 
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:24: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:25: Host Frequency set to 25000 KHz

15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:25: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:25: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3037 ] 
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:25: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:06:25: [ SetVolt(<py_sfcl.SDVoltage object at 0x05276F00>, 0x0, False) , Command count = 3038 ] 
15:06:25: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:25: SendOCR: 1107263488
15:06:25: ExcpectOCR: 3254747136
15:06:25: SendFirstOCR: 1107263488
15:06:25: SendNextOCR: 1107263488
15:06:25: SingleCommand: 0
15:06:25: SingleCommandTestType: 1
15:06:25: Identification: 1
15:06:25: ProtocolMode: 1
15:06:25: VerifyType: 0
15:06:25: SendCMD0: 1
15:06:25: SendCMD8: 1
15:06:25: SendCMD58: 1
15:06:25: SetPower: 1
15:06:25: HcsXpcS18r000: 16744448
15:06:25: HcsXpcS18r001: 33521664
15:06:25: HcsXpcS18r010: 285179904
15:06:25: HcsXpcS18r011: 301957120
15:06:25: HcsXpcS18r100: 1090486272
15:06:25: HcsXpcS18r101: 1107263488
15:06:25: HcsXpcS18r110: 1358921728
15:06:25: HcsXpcS18r111: 1375698944
15:06:25: ReadyCcs18a000: 16744448
15:06:25: ReadyCcs18a001: 33521664
15:06:25: ReadyCcs18a010: 1090486272
15:06:25: ReadyCcs18a011: 1107263488
15:06:25: ReadyCcs18a100: 2164228096
15:06:25: ReadyCcs18a101: 2181005312
15:06:25: ReadyCcs18a110: 3237969920
15:06:25: ReadyCcs18a111: 3254747136
15:06:25: Card Capacity is : 32.000000 GB
15:06:25: VS_Flag========================1
15:06:25: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:25: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3039 ] 
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR50 SWITCHED', '200mA SWITCHED']
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:26: Host Frequency set to 100000 KHz

15:06:26: [DVTCommonLib]###  SEND_TUNING_PATTERN called
15:06:26: [ SendTuningPattern_CMD19(0xA, 0x96, <0x200/0x200, Spc, pat:0x0>) , Command count = 3040 ] 
15:06:26: [DVTCommonLib]###  SEND_TUNING_PATTERN Completed 

15:06:26: [GO4_globalInitCard]### Switch to Specify Card Type
15:06:28: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:28: Host Frequency set to 25000 KHz
15:06:28: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:28: [GO18_globalSetVolt]### Set Host Voltage value.
15:06:28: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:06:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119900>, 0x0, True) , Command count = 3041 ] 
15:06:28: [GO18_globalSetVolt]### Host voltage value is set.
15:06:28: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:06:28: [ SetVolt(<py_sfcl.SDVoltage object at 0x061198A0>, 0x0, False) , Command count = 3042 ] 
15:06:28: [GO18_globalSetVolt]### Host voltage value is set.
15:06:28: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 3043 ] 
15:06:28: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 3044 ] 
15:06:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:28: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3045 ] 
15:06:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED80>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 3046 ] 
15:06:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E70>, <py_sfcl.CommandDataDefinition object at 0x061B8150>) , Command count = 3047 ] 
15:06:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:28: [ SetCardRCA(0x1, 0xD555) , Command count = 3048 ] 
15:06:29: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:29: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:29: Host Frequency set to 25000 KHz
15:06:29: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:29: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:29: ####CSD Registe 2.0 Values####
15:06:29: CSD_STRUCTURE                                 :0x1
15:06:29: Reserv1                                       :0x0
15:06:29: Time Access 1 TAAC                            :0xe
15:06:29: Time Access 2 NSAC*100                        :0x0
15:06:29: Data Transfer Rate TRAN_SPEED                 :0x32
15:06:29: Card Command Classess CCC                     :0x5b5
15:06:29: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:29: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:29: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:29: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:29: DSR(driver stage register)  DSR_IMP           :0x0
15:06:29: Reserv2                                       :0x0
15:06:29: Device Size C_SIZE                            :0xedc8
15:06:29: Reserv3                                       :0x0
15:06:29: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:29: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:29: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:29: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:29: Reserv4                                       :0x0
15:06:29: Write Speed Factor R2W_FACTOR                 :0x2
15:06:29: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:29: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:29: FILE_FORMAT_GRP                               :0x0
15:06:29: COPY flag                                     :0x1
15:06:29: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:29: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:29: File_Format                                   :0x0
15:06:29: CRC                                           :0x0
15:06:29: ####CSD Registe Values####  

15:06:29: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:06:29: [GetSCRRegisterEntry] Passed
15:06:29: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:06:29: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:06:29: Data_Status_After Erases          : 0
15:06:29: CPRM Security Support             : No Security
15:06:29: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:06:29: Spec. Version                     : Version 3.0X
15:06:29: Extended Security Support         : Extended_Security_Not_Supported
15:06:29: Command Support                   : COMMAND_SUPPORT
15:06:29: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119240>, <py_sfcl.CommandDataDefinition object at 0x061B83C0>) , Command count = 3049 ] 
15:06:29: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B70>, <py_sfcl.CommandDataDefinition object at 0x061B8210>) , Command count = 3050 ] 
15:06:29: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:06:29: [ SetBusWidth(0x4) , Command count = 3051 ] 
15:06:29: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:06:29: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061B8270>, <0x200/0x200, Spc, pat:0x0>) , Command count = 3052 ] 
15:06:29: Protected Area Size 0x28000
15:06:29: Bus Width           2
15:06:29: Secure Mode         0
15:06:29: Speed  Class        4
15:06:29: Perf Move           0
15:06:29: Au Size             9
15:06:29: Erase Size          15
15:06:29: Erase Timeout       1
15:06:29: Erase offset        1
15:06:29: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:06:29: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:06:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:29: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3053 ] 
15:06:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:29: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:06:29: Host Frequency set to 100000 KHz
15:06:29: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:06:29: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:29: ####CSD Registe 2.0 Values####
15:06:29: CSD_STRUCTURE                                 :0x1
15:06:29: Reserv1                                       :0x0
15:06:29: Time Access 1 TAAC                            :0xe
15:06:29: Time Access 2 NSAC*100                        :0x0
15:06:29: Data Transfer Rate TRAN_SPEED                 :0xb
15:06:29: Card Command Classess CCC                     :0x5b5
15:06:29: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:29: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:29: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:29: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:29: DSR(driver stage register)  DSR_IMP           :0x0
15:06:29: Reserv2                                       :0x0
15:06:29: Device Size C_SIZE                            :0xedc8
15:06:29: Reserv3                                       :0x0
15:06:29: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:29: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:29: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:29: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:29: Reserv4                                       :0x0
15:06:29: Write Speed Factor R2W_FACTOR                 :0x2
15:06:29: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:29: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:29: FILE_FORMAT_GRP                               :0x0
15:06:29: COPY flag                                     :0x1
15:06:29: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:29: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:29: File_Format                                   :0x0
15:06:29: CRC                                           :0x0
15:06:29: ####CSD Registe Values####  

15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119AE0>, <py_sfcl.CommandDataDefinition object at 0x061195A0>) , Command count = 3054 ] 
15:06:29: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py_sfcl.CommandDataDefinition object at 0x061B8300>) , Command count = 3055 ] 
15:06:29: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:29: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE70>, <py_sfcl.CommandDataDefinition object at 0x061B8360>) , Command count = 3056 ] 
15:06:29: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:06:29: [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[INFO] Card is in Tran as Expected 

15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x061B83F0>) , Command count = 3057 ] 
15:06:29: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x061B8450>) , Command count = 3058 ] 
15:06:29: CMD32[ ERASE_WR_BLOCK_START_ADDRESS ] Passed with R1 type response:[32, 0, 0, 9, 0, 29]
15:06:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC60>, <py_sfcl.CommandDataDefinition object at 0x061B84E0>) , Command count = 3059 ] 
15:06:30: CMD33[ ERASE_BLOCK_END_ADDRESS ] Passed with R1 type response:[33, 0, 0, 9, 0, 16]
15:06:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x061B8540>) , Command count = 3060 ] 
15:06:40: [ GetCardStatus() , Command count = 3061 ] 
15:06:40: CMD38[ ERASE_COMMAND ] Erasing the Card......
15:06:40: CMD38[ ERASE_COMMAND ] Card is Busy programming,Continuing to Test..
15:06:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193C0>, <py_sfcl.CommandDataDefinition object at 0x0611E240>) , Command count = 3062 ] 
15:06:40: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:06:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x0611E540>) , Command count = 3063 ] 
15:06:40: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:06:40: Failed Running script <module 'SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST' from 'C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.pyc'> with error 
TestFailedError:                                   
   [SD3UHS107_DVT_SD3_00_UHS_CMD19_STATE_TEST.py]###[ERROR] :Card not in Prg State ,Not Expected
 
15:06:40: ########################################
15:06:40: ########################################
15:06:40: Stated Running script SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST 
15:06:40: ########################################
15:06:40: ###### Running SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST
15:06:40: [GO4_globalInitCard]### Switch to Specify Card Type
15:06:42: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:42: Host Frequency set to 25000 KHz
15:06:42: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:42: [GO18_globalSetVolt]### Set Host Voltage value.
15:06:42: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:06:42: [ SetVolt(<py_sfcl.SDVoltage object at 0x061B8DE0>, 0x0, True) , Command count = 3064 ] 
15:06:42: [GO18_globalSetVolt]### Host voltage value is set.
15:06:42: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:06:43: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119BA0>, 0x0, False) , Command count = 3065 ] 
15:06:43: [GO18_globalSetVolt]### Host voltage value is set.
15:06:43: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 3066 ] 
15:06:43: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 3067 ] 
15:06:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3068 ] 
15:06:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3F0>, <py_sfcl.CommandDataDefinition object at 0x061B8DB0>) , Command count = 3069 ] 
15:06:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF60>, <py_sfcl.CommandDataDefinition object at 0x061B8780>) , Command count = 3070 ] 
15:06:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:43: [ SetCardRCA(0x1, 0xD555) , Command count = 3071 ] 
15:06:43: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:43: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:43: Host Frequency set to 25000 KHz
15:06:43: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:43: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:43: ####CSD Registe 2.0 Values####
15:06:43: CSD_STRUCTURE                                 :0x1
15:06:43: Reserv1                                       :0x0
15:06:43: Time Access 1 TAAC                            :0xe
15:06:43: Time Access 2 NSAC*100                        :0x0
15:06:43: Data Transfer Rate TRAN_SPEED                 :0x32
15:06:43: Card Command Classess CCC                     :0x5b5
15:06:43: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:43: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:43: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:43: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:43: DSR(driver stage register)  DSR_IMP           :0x0
15:06:43: Reserv2                                       :0x0
15:06:43: Device Size C_SIZE                            :0xedc8
15:06:43: Reserv3                                       :0x0
15:06:43: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:43: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:43: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:43: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:43: Reserv4                                       :0x0
15:06:43: Write Speed Factor R2W_FACTOR                 :0x2
15:06:43: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:43: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:43: FILE_FORMAT_GRP                               :0x0
15:06:43: COPY flag                                     :0x1
15:06:43: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:43: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:43: File_Format                                   :0x0
15:06:43: CRC                                           :0x0
15:06:43: ####CSD Registe Values####  

15:06:43: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:06:43: [GetSCRRegisterEntry] Passed
15:06:43: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:06:43: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:06:43: Data_Status_After Erases          : 0
15:06:43: CPRM Security Support             : No Security
15:06:43: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:06:43: Spec. Version                     : Version 3.0X
15:06:43: Extended Security Support         : Extended_Security_Not_Supported
15:06:43: Command Support                   : COMMAND_SUPPORT
15:06:43: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1510>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 3072 ] 
15:06:43: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1BD0>, <py_sfcl.CommandDataDefinition object at 0x061B8810>) , Command count = 3073 ] 
15:06:43: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:06:43: [ SetBusWidth(0x4) , Command count = 3074 ] 
15:06:43: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:06:43: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061B8D50>, <0x200/0x200, Spc, pat:0x0>) , Command count = 3075 ] 
15:06:43: Protected Area Size 0x28000
15:06:43: Bus Width           2
15:06:43: Secure Mode         0
15:06:43: Speed  Class        4
15:06:43: Perf Move           0
15:06:43: Au Size             9
15:06:43: Erase Size          15
15:06:43: Erase Timeout       1
15:06:43: Erase offset        1
15:06:43: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:06:43: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:06:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:43: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3076 ] 
15:06:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:43: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:06:43: Host Frequency set to 100000 KHz
15:06:43: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:06:43: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:43: ####CSD Registe 2.0 Values####
15:06:43: CSD_STRUCTURE                                 :0x1
15:06:43: Reserv1                                       :0x0
15:06:43: Time Access 1 TAAC                            :0xe
15:06:43: Time Access 2 NSAC*100                        :0x0
15:06:43: Data Transfer Rate TRAN_SPEED                 :0xb
15:06:43: Card Command Classess CCC                     :0x5b5
15:06:43: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:43: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:43: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:43: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:43: DSR(driver stage register)  DSR_IMP           :0x0
15:06:43: Reserv2                                       :0x0
15:06:43: Device Size C_SIZE                            :0xedc8
15:06:43: Reserv3                                       :0x0
15:06:43: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:43: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:43: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:43: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:43: Reserv4                                       :0x0
15:06:43: Write Speed Factor R2W_FACTOR                 :0x2
15:06:43: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:43: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:43: FILE_FORMAT_GRP                               :0x0
15:06:43: COPY flag                                     :0x1
15:06:43: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:43: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:43: File_Format                                   :0x0
15:06:43: CRC                                           :0x0
15:06:43: ####CSD Registe Values####  

15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x061B8C90>) , Command count = 3077 ] 
15:06:43: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E330>, <py_sfcl.CommandDataDefinition object at 0x061B8AE0>) , Command count = 3078 ] 
15:06:44: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:44: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:06:44: [GO4_globalInitCard]### Switch to Specify Card Type
15:06:46: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:46: Host Frequency set to 25000 KHz
15:06:46: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:46: [GO18_globalSetVolt]### Set Host Voltage value.
15:06:46: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:06:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E210>, 0x0, True) , Command count = 3079 ] 
15:06:46: [GO18_globalSetVolt]### Host voltage value is set.
15:06:46: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:06:46: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8A0>, 0x0, False) , Command count = 3080 ] 
15:06:46: [GO18_globalSetVolt]### Host voltage value is set.
15:06:46: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 3081 ] 
15:06:46: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 3082 ] 
15:06:46: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:46: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:46: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:46: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:46: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3083 ] 
15:06:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:46: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x061B8A80>) , Command count = 3084 ] 
15:06:46: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 3085 ] 
15:06:46: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:46: [ SetCardRCA(0x1, 0xD555) , Command count = 3086 ] 
15:06:46: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:46: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:06:46: Host Frequency set to 25000 KHz
15:06:46: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:06:46: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:46: ####CSD Registe 2.0 Values####
15:06:46: CSD_STRUCTURE                                 :0x1
15:06:46: Reserv1                                       :0x0
15:06:46: Time Access 1 TAAC                            :0xe
15:06:46: Time Access 2 NSAC*100                        :0x0
15:06:46: Data Transfer Rate TRAN_SPEED                 :0x32
15:06:46: Card Command Classess CCC                     :0x5b5
15:06:46: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:46: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:46: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:46: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:46: DSR(driver stage register)  DSR_IMP           :0x0
15:06:46: Reserv2                                       :0x0
15:06:46: Device Size C_SIZE                            :0xedc8
15:06:46: Reserv3                                       :0x0
15:06:46: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:46: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:46: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:46: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:46: Reserv4                                       :0x0
15:06:46: Write Speed Factor R2W_FACTOR                 :0x2
15:06:46: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:46: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:46: FILE_FORMAT_GRP                               :0x0
15:06:46: COPY flag                                     :0x1
15:06:46: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:46: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:46: File_Format                                   :0x0
15:06:46: CRC                                           :0x0
15:06:46: ####CSD Registe Values####  

15:06:46: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:06:46: [GetSCRRegisterEntry] Passed
15:06:46: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:06:46: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:06:46: Data_Status_After Erases          : 0
15:06:46: CPRM Security Support             : No Security
15:06:46: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:06:46: Spec. Version                     : Version 3.0X
15:06:46: Extended Security Support         : Extended_Security_Not_Supported
15:06:46: Command Support                   : COMMAND_SUPPORT
15:06:46: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:06:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x061B8D80>) , Command count = 3087 ] 
15:06:46: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:06:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE10>, <py_sfcl.CommandDataDefinition object at 0x061B8EA0>) , Command count = 3088 ] 
15:06:46: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:06:46: [ SetBusWidth(0x4) , Command count = 3089 ] 
15:06:46: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:06:46: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x061B8C30>, <0x200/0x200, Spc, pat:0x0>) , Command count = 3090 ] 
15:06:46: Protected Area Size 0x28000
15:06:46: Bus Width           2
15:06:46: Secure Mode         0
15:06:46: Speed  Class        4
15:06:46: Perf Move           0
15:06:46: Au Size             9
15:06:46: Erase Size          15
15:06:46: Erase Timeout       1
15:06:46: Erase offset        1
15:06:46: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:06:46: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:06:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:46: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3091 ] 
15:06:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:46: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:06:46: Host Frequency set to 100000 KHz
15:06:46: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:06:46: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:06:46: ####CSD Registe 2.0 Values####
15:06:46: CSD_STRUCTURE                                 :0x1
15:06:47: Reserv1                                       :0x0
15:06:47: Time Access 1 TAAC                            :0xe
15:06:47: Time Access 2 NSAC*100                        :0x0
15:06:47: Data Transfer Rate TRAN_SPEED                 :0xb
15:06:47: Card Command Classess CCC                     :0x5b5
15:06:47: Max Read Data Block Length  READ_BL_LEN       :0x9
15:06:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:06:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:06:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:06:47: DSR(driver stage register)  DSR_IMP           :0x0
15:06:47: Reserv2                                       :0x0
15:06:47: Device Size C_SIZE                            :0xedc8
15:06:47: Reserv3                                       :0x0
15:06:47: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:06:47: Erase Sector Size SECTOR_SIZE                 :0x7f
15:06:47: Write Protect Group Size WP_GRP_SIZE          :0x0
15:06:47: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:06:47: Reserv4                                       :0x0
15:06:47: Write Speed Factor R2W_FACTOR                 :0x2
15:06:47: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:06:47: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:06:47: FILE_FORMAT_GRP                               :0x0
15:06:47: COPY flag                                     :0x1
15:06:47: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:06:47: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:06:47: File_Format                                   :0x0
15:06:47: CRC                                           :0x0
15:06:47: ####CSD Registe Values####  

15:06:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x061B8930>) , Command count = 3092 ] 
15:06:47: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:06:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119090>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 3093 ] 
15:06:47: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:47: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:06:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:06:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100210>, 0x0, False) , Command count = 3094 ] 
15:06:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:49: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:06:49: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100210>, 0x0, True) , Command count = 3095 ] 
15:06:49: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3096 ] 
15:06:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3097 ] 
15:06:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x061B8840>) , Command count = 3098 ] 
15:06:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197B0>, <py_sfcl.CommandDataDefinition object at 0x061B87B0>) , Command count = 3099 ] 
15:06:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:50: [ SetCardRCA(0x1, 0xD555) , Command count = 3100 ] 
15:06:50: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:50: [ SetBusWidth(0x4) , Command count = 3101 ] 
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3102 ] 
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:50: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:50: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3103 ] 
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:50: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:50: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3104 ] 
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:50: Host Frequency set to 25000 KHz

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:50: [32799, 49153, 32783, 32783, 32769, 32769]
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3105 ] 
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:06:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528ACC0>, 0x0, False) , Command count = 3106 ] 
15:06:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:51: SendOCR: 1107263488
15:06:51: ExcpectOCR: 3254747136
15:06:51: SendFirstOCR: 1107263488
15:06:51: SendNextOCR: 1107263488
15:06:51: SingleCommand: 0
15:06:51: SingleCommandTestType: 1
15:06:51: Identification: 1
15:06:51: ProtocolMode: 1
15:06:51: VerifyType: 0
15:06:51: SendCMD0: 1
15:06:51: SendCMD8: 1
15:06:51: SendCMD58: 1
15:06:51: SetPower: 1
15:06:51: HcsXpcS18r000: 16744448
15:06:51: HcsXpcS18r001: 33521664
15:06:51: HcsXpcS18r010: 285179904
15:06:51: HcsXpcS18r011: 301957120
15:06:51: HcsXpcS18r100: 1090486272
15:06:51: HcsXpcS18r101: 1107263488
15:06:51: HcsXpcS18r110: 1358921728
15:06:51: HcsXpcS18r111: 1375698944
15:06:51: ReadyCcs18a000: 16744448
15:06:51: ReadyCcs18a001: 33521664
15:06:51: ReadyCcs18a010: 1090486272
15:06:51: ReadyCcs18a011: 1107263488
15:06:51: ReadyCcs18a100: 2164228096
15:06:51: ReadyCcs18a101: 2181005312
15:06:51: ReadyCcs18a110: 3237969920
15:06:51: ReadyCcs18a111: 3254747136
15:06:51: Card Capacity is : 32.000000 GB
15:06:51: ## SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST [Info][RUN] : Loop for 10 times,Still to complete 10 times 

15:06:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3107 ] 
15:06:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:53: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3108 ] 
15:06:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F00>, <py_sfcl.CommandDataDefinition object at 0x06100180>) , Command count = 3109 ] 
15:06:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CF90>, <py_sfcl.CommandDataDefinition object at 0x061B8B10>) , Command count = 3110 ] 
15:06:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:53: [ SetCardRCA(0x1, 0xD555) , Command count = 3111 ] 
15:06:53: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x061B8C60>) , Command count = 3112 ] 
15:06:53: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:53: [ SetBusWidth(0x4) , Command count = 3113 ] 
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:53: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3114 ] 
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:53: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3115 ] 
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:54: Host Frequency set to 78163 KHz

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3116 ] 
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:06:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x061005D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3117 ] 
15:06:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:06:54: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:06:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3118 ] 
15:06:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:06:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:57: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:06:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x0, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3119 ] 
15:06:57: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:06:57: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:57: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:57: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:57: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:57: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3120 ] 
15:06:57: [ GetCardStatus() , Command count = 3121 ] 
15:06:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:06:57: [DVTCommonLib]### Exception_Details :Time out error on card response
15:06:57: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:06:57: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119990>, <py_sfcl.CommandDataDefinition object at 0x060C1840>) , Command count = 3122 ] 
15:06:57: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CC60>, <py_sfcl.CommandDataDefinition object at 0x06119D20>) , Command count = 3123 ] 
15:06:57: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:06:57: [ SetCardRCA(0x1, 0xD555) , Command count = 3124 ] 
15:06:57: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285FC0>, <py_sfcl.CommandDataDefinition object at 0x06119A80>) , Command count = 3125 ] 
15:06:57: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:57: [ SetBusWidth(0x4) , Command count = 3126 ] 
15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:57: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3127 ] 
15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:0 mA', '200mA SWITCHED']
15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:57: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3128 ] 
15:06:57: OperatingCurrent:0
15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'Current: 200mA SUPPORTED'] 

15:06:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x061110F0>) , Command count = 3129 ] 
15:06:57: [ GetCardStatus() , Command count = 3130 ] 
15:06:57: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:06:57: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] : Card is reporting illegal command,Expected
15:06:59: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:06:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3131 ] 
15:06:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:06:59: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:06:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:06:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:06:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:06:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:06:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3132 ] 
15:06:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:06:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:06:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06123180>) , Command count = 3133 ] 
15:06:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:06:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x06123300>) , Command count = 3134 ] 
15:06:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:06:59: [ SetCardRCA(0x1, 0xD555) , Command count = 3135 ] 
15:06:59: [DVTCommonLib]### Identification :Idenfication of card completed 

15:06:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123B10>, <py_sfcl.CommandDataDefinition object at 0x06123690>) , Command count = 3136 ] 
15:06:59: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:06:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:06:59: [ SetBusWidth(0x4) , Command count = 3137 ] 
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:59: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3138 ] 
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:06:59: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3139 ] 
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:06:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:00: Host Frequency set to 77759 KHz

15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:00: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3140 ] 
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111ED0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3141 ] 
15:07:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3142 ] 
15:07:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:02: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x061231E0>) , Command count = 3143 ] 
15:07:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111150>, <py_sfcl.CommandDataDefinition object at 0x06123120>) , Command count = 3144 ] 
15:07:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:07:02: [ SetCardRCA(0x1, 0xD555) , Command count = 3145 ] 
15:07:02: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x06123E10>) , Command count = 3146 ] 
15:07:02: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:02: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:02: [ SetBusWidth(0x4) , Command count = 3147 ] 
15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:02: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3148 ] 
15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:0 mA', '200mA SWITCHED']
15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:02: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3149 ] 
15:07:02: OperatingCurrent:0
15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO]:['SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'Current: 200mA SUPPORTED'] 

15:07:02: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111690>, <py_sfcl.CommandDataDefinition object at 0x0601A810>) , Command count = 3150 ] 
15:07:03: [ GetCardStatus() , Command count = 3151 ] 
15:07:03: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:07:03: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] : Card is reporting illegal command,Expected
15:07:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3152 ] 
15:07:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:05: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:05: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3153 ] 
15:07:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:05: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111BD0>, <py_sfcl.CommandDataDefinition object at 0x06123360>) , Command count = 3154 ] 
15:07:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111630>, <py_sfcl.CommandDataDefinition object at 0x061237B0>) , Command count = 3155 ] 
15:07:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:05: [ SetCardRCA(0x1, 0xD555) , Command count = 3156 ] 
15:07:05: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111720>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 3157 ] 
15:07:05: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:05: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:05: [ SetBusWidth(0x4) , Command count = 3158 ] 
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:05: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3159 ] 
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:05: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3160 ] 
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:06: Host Frequency set to 94547 KHz

15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:06: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3161 ] 
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x061112D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3162 ] 
15:07:06: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:08: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3163 ] 
15:07:08: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:08: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:08: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:08: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:08: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3164 ] 
15:07:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3165 ] 
15:07:08: [ GetCardStatus() , Command count = 3166 ] 
15:07:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:08: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:08: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:08: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A810>, <py_sfcl.CommandDataDefinition object at 0x0611E270>) , Command count = 3167 ] 
15:07:08: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113F0>, <py_sfcl.CommandDataDefinition object at 0x06111270>) , Command count = 3168 ] 
15:07:08: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 0, 23]
15:07:08: [ SetCardRCA(0x1, 0xD555) , Command count = 3169 ] 
15:07:08: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x061232D0>) , Command count = 3170 ] 
15:07:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:08: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:08: [ SetBusWidth(0x4) , Command count = 3171 ] 
15:07:08: VS_Flag========================1
15:07:08: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:08: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3172 ] 
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR50 SWITCHED', '200mA SWITCHED']
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:08: Host Frequency set to 76167 KHz

15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:08: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3173 ] 
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:09: [DVTCommonLib]###  SEND_TUNING_PATTERN called
15:07:09: [ SendTuningPattern_CMD19(0x12, 0x96, <0x200/0x200, Spc, pat:0x0>) , Command count = 3174 ] 
15:07:09: [DVTCommonLib]###  SEND_TUNING_PATTERN Completed 

15:07:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3175 ] 
15:07:11: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:11: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:11: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:11: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:11: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:11: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3176 ] 
15:07:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:11: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x06127BA0>) , Command count = 3177 ] 
15:07:11: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123090>, <py_sfcl.CommandDataDefinition object at 0x06123F60>) , Command count = 3178 ] 
15:07:11: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:11: [ SetCardRCA(0x1, 0xD555) , Command count = 3179 ] 
15:07:11: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127900>, <py_sfcl.CommandDataDefinition object at 0x06127F00>) , Command count = 3180 ] 
15:07:11: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3181 ] 
15:07:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:12: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1780>, <py_sfcl.CommandDataDefinition object at 0x061004E0>) , Command count = 3182 ] 
15:07:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061270C0>, <py_sfcl.CommandDataDefinition object at 0x06127AB0>) , Command count = 3183 ] 
15:07:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:07:12: [ SetCardRCA(0x1, 0xD555) , Command count = 3184 ] 
15:07:12: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x06127960>) , Command count = 3185 ] 
15:07:12: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:12: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:12: [ SetBusWidth(0x4) , Command count = 3186 ] 
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:12: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3187 ] 
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR50 SWITCHED', '200mA SWITCHED']
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:12: Host Frequency set to 75394 KHz

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:12: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3188 ] 
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:12: [DVTCommonLib]###  SEND_TUNING_PATTERN called
15:07:12: [ SendTuningPattern_CMD19(0x21, 0x96, <0x200/0x200, Spc, pat:0x0>) , Command count = 3189 ] 
15:07:12: [DVTCommonLib]###  SEND_TUNING_PATTERN Completed 

15:07:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3190 ] 
15:07:14: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:14: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:14: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:14: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:14: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:14: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3191 ] 
15:07:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:14: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 3192 ] 
15:07:14: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119330>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 3193 ] 
15:07:14: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:14: [ SetCardRCA(0x1, 0xD555) , Command count = 3194 ] 
15:07:14: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x06127F60>) , Command count = 3195 ] 
15:07:14: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:14: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:14: [ SetBusWidth(0x4) , Command count = 3196 ] 
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:14: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3197 ] 
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:14: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3198 ] 
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:15: Host Frequency set to 22256 KHz

15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:15: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3199 ] 
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x061199C0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3200 ] 
15:07:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:15: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3201 ] 
15:07:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:15: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:17: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3202 ] 
15:07:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3203 ] 
15:07:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111600>, <py_sfcl.CommandDataDefinition object at 0x0611E1B0>) , Command count = 3204 ] 
15:07:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061275A0>, <py_sfcl.CommandDataDefinition object at 0x061276F0>) , Command count = 3205 ] 
15:07:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:18: [ SetCardRCA(0x1, 0xD555) , Command count = 3206 ] 
15:07:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127780>, <py_sfcl.CommandDataDefinition object at 0x06127630>) , Command count = 3207 ] 
15:07:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:18: [ SetBusWidth(0x4) , Command count = 3208 ] 
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3209 ] 
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3210 ] 
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:18: Host Frequency set to 17484 KHz

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3211 ] 
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E060>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3212 ] 
15:07:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:19: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3213 ] 
15:07:19: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:19: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:19: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:19: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:19: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3214 ] 
15:07:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:21: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3215 ] 
15:07:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C90>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 3216 ] 
15:07:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1A80>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 3217 ] 
15:07:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:21: [ SetCardRCA(0x1, 0xD555) , Command count = 3218 ] 
15:07:21: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x061275D0>) , Command count = 3219 ] 
15:07:21: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:21: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:21: [ SetBusWidth(0x4) , Command count = 3220 ] 
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:21: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3221 ] 
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:21: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3222 ] 
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:22: Host Frequency set to 20533 KHz

15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:22: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3223 ] 
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E2A0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3224 ] 
15:07:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:22: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3225 ] 
15:07:22: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:22: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:22: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:22: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:22: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:22: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:22: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3226 ] 
15:07:22: [ GetCardStatus() , Command count = 3227 ] 
15:07:22: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:22: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:22: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:22: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E10>, <py_sfcl.CommandDataDefinition object at 0x0611E360>) , Command count = 3228 ] 
15:07:22: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127690>, <py_sfcl.CommandDataDefinition object at 0x06127DE0>) , Command count = 3229 ] 
15:07:22: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:22: [ SetCardRCA(0x1, 0xD555) , Command count = 3230 ] 
15:07:23: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x06127F30>) , Command count = 3231 ] 
15:07:23: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:23: [ SetBusWidth(0x4) , Command count = 3232 ] 
15:07:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3233 ] 
15:07:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:25: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3234 ] 
15:07:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127D50>, <py_sfcl.CommandDataDefinition object at 0x061278D0>) , Command count = 3235 ] 
15:07:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D80>, <py_sfcl.CommandDataDefinition object at 0x0611E4B0>) , Command count = 3236 ] 
15:07:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:25: [ SetCardRCA(0x1, 0xD555) , Command count = 3237 ] 
15:07:25: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 3238 ] 
15:07:25: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:25: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:25: [ SetBusWidth(0x4) , Command count = 3239 ] 
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:25: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3240 ] 
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:25: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3241 ] 
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:25: Host Frequency set to 20719 KHz

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:25: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3242 ] 
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111F30>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3243 ] 
15:07:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:26: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3244 ] 
15:07:26: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:26: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:26: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:26: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:26: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:26: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3245 ] 
15:07:26: [ GetCardStatus() , Command count = 3246 ] 
15:07:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:26: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:26: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:26: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAE0>, <py_sfcl.CommandDataDefinition object at 0x0610E750>) , Command count = 3247 ] 
15:07:26: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x06127840>) , Command count = 3248 ] 
15:07:26: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:26: [ SetCardRCA(0x1, 0xD555) , Command count = 3249 ] 
15:07:26: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF90>, <py_sfcl.CommandDataDefinition object at 0x06111360>) , Command count = 3250 ] 
15:07:26: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:28: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3251 ] 
15:07:29: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:29: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:29: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:29: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:29: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:29: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3252 ] 
15:07:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:29: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE40>, <py_sfcl.CommandDataDefinition object at 0x0610E660>) , Command count = 3253 ] 
15:07:29: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E600>, <py_sfcl.CommandDataDefinition object at 0x0610EDB0>) , Command count = 3254 ] 
15:07:29: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:29: [ SetCardRCA(0x1, 0xD555) , Command count = 3255 ] 
15:07:29: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E870>, <py_sfcl.CommandDataDefinition object at 0x0610EDE0>) , Command count = 3256 ] 
15:07:29: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:29: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:29: [ SetBusWidth(0x4) , Command count = 3257 ] 
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:29: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3258 ] 
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:29: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3259 ] 
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:29: Host Frequency set to 24887 KHz

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:29: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3260 ] 
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111DE0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3261 ] 
15:07:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3262 ] 
15:07:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3263 ] 
15:07:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:32: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3264 ] 
15:07:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E0C0>, <py_sfcl.CommandDataDefinition object at 0x0610ED20>) , Command count = 3265 ] 
15:07:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061196C0>, <py_sfcl.CommandDataDefinition object at 0x0610E6F0>) , Command count = 3266 ] 
15:07:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:32: [ SetCardRCA(0x1, 0xD555) , Command count = 3267 ] 
15:07:32: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC60>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 3268 ] 
15:07:32: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:32: [ SetBusWidth(0x4) , Command count = 3269 ] 
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:32: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3270 ] 
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:32: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3271 ] 
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:33: Host Frequency set to 22294 KHz

15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:33: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3272 ] 
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E390>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3273 ] 
15:07:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:33: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3274 ] 
15:07:33: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:33: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:33: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:33: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:33: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:35: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:35: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3275 ] 
15:07:35: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:35: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:35: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:35: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:35: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:35: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:35: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3276 ] 
15:07:35: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:35: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E930>, <py_sfcl.CommandDataDefinition object at 0x06119810>) , Command count = 3277 ] 
15:07:35: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:35: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F90>, <py_sfcl.CommandDataDefinition object at 0x0610E840>) , Command count = 3278 ] 
15:07:35: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:35: [ SetCardRCA(0x1, 0xD555) , Command count = 3279 ] 
15:07:36: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119060>, <py_sfcl.CommandDataDefinition object at 0x0610EAB0>) , Command count = 3280 ] 
15:07:36: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:36: [ SetBusWidth(0x4) , Command count = 3281 ] 
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3282 ] 
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3283 ] 
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:36: Host Frequency set to 22083 KHz

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3284 ] 
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610E9C0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3285 ] 
15:07:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3286 ] 
15:07:37: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:37: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:37: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:37: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:37: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:37: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3287 ] 
15:07:37: [ GetCardStatus() , Command count = 3288 ] 
15:07:37: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:37: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:37: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:37: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8060>, <py_sfcl.CommandDataDefinition object at 0x0611EF00>) , Command count = 3289 ] 
15:07:37: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x0610EE40>) , Command count = 3290 ] 
15:07:37: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:37: [ SetCardRCA(0x1, 0xD555) , Command count = 3291 ] 
15:07:37: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:37: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x061B82A0>) , Command count = 3292 ] 
15:07:37: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:37: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:37: [ SetBusWidth(0x4) , Command count = 3293 ] 
15:07:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3294 ] 
15:07:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3295 ] 
15:07:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C60>, <py_sfcl.CommandDataDefinition object at 0x061B80F0>) , Command count = 3296 ] 
15:07:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 3297 ] 
15:07:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:39: [ SetCardRCA(0x1, 0xD555) , Command count = 3298 ] 
15:07:39: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E810>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 3299 ] 
15:07:39: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:39: [ SetBusWidth(0x4) , Command count = 3300 ] 
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3301 ] 
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:39: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3302 ] 
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:40: Host Frequency set to 19183 KHz

15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3303 ] 
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AA80>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3304 ] 
15:07:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3305 ] 
15:07:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:40: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:40: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3306 ] 
15:07:40: [ GetCardStatus() , Command count = 3307 ] 
15:07:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:40: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:40: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:40: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py_sfcl.CommandDataDefinition object at 0x0611EE70>) , Command count = 3308 ] 
15:07:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x061B83F0>) , Command count = 3309 ] 
15:07:40: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:40: [ SetCardRCA(0x1, 0xD555) , Command count = 3310 ] 
15:07:40: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8450>, <py_sfcl.CommandDataDefinition object at 0x061B8510>) , Command count = 3311 ] 
15:07:40: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3312 ] 
15:07:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:43: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3313 ] 
15:07:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193C0>, <py_sfcl.CommandDataDefinition object at 0x0611E240>) , Command count = 3314 ] 
15:07:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061198A0>, <py_sfcl.CommandDataDefinition object at 0x061B8900>) , Command count = 3315 ] 
15:07:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:43: [ SetCardRCA(0x1, 0xD555) , Command count = 3316 ] 
15:07:43: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA20>, <py_sfcl.CommandDataDefinition object at 0x061B8BA0>) , Command count = 3317 ] 
15:07:43: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:43: [ SetBusWidth(0x4) , Command count = 3318 ] 
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3319 ] 
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:43: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3320 ] 
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:43: Host Frequency set to 22386 KHz

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:43: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3321 ] 
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119870>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3322 ] 
15:07:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:46: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3323 ] 
15:07:46: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:46: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:46: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:46: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:46: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:46: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3324 ] 
15:07:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:46: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF30>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 3325 ] 
15:07:46: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBA0>, <py_sfcl.CommandDataDefinition object at 0x061B8E40>) , Command count = 3326 ] 
15:07:46: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:46: [ SetCardRCA(0x1, 0xD555) , Command count = 3327 ] 
15:07:46: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1BD0>, <py_sfcl.CommandDataDefinition object at 0x061B8810>) , Command count = 3328 ] 
15:07:46: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:46: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:46: [ SetBusWidth(0x4) , Command count = 3329 ] 
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:46: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3330 ] 
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:46: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3331 ] 
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:47: Host Frequency set to 20059 KHz

15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3332 ] 
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x05172060>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3333 ] 
15:07:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:47: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3334 ] 
15:07:47: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:47: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:47: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:47: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:47: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3335 ] 
15:07:49: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:49: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:49: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:49: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:49: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:49: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3336 ] 
15:07:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:49: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100090>, <py_sfcl.CommandDataDefinition object at 0x061B8A80>) , Command count = 3337 ] 
15:07:49: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 3338 ] 
15:07:49: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:49: [ SetCardRCA(0x1, 0xD555) , Command count = 3339 ] 
15:07:49: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061190C0>, <py_sfcl.CommandDataDefinition object at 0x061B8D80>) , Command count = 3340 ] 
15:07:49: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:49: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:49: [ SetBusWidth(0x4) , Command count = 3341 ] 
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:49: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3342 ] 
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:49: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3343 ] 
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:50: Host Frequency set to 13199 KHz

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3344 ] 
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:50: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:50: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E8A0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3345 ] 
15:07:50: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:50: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3346 ] 
15:07:51: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:51: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:51: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:51: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:51: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3347 ] 
15:07:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:53: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3348 ] 
15:07:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119090>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 3349 ] 
15:07:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x061B8840>) , Command count = 3350 ] 
15:07:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:53: [ SetCardRCA(0x1, 0xD555) , Command count = 3351 ] 
15:07:53: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119390>, <py_sfcl.CommandDataDefinition object at 0x061B8E10>) , Command count = 3352 ] 
15:07:53: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:53: [ SetBusWidth(0x4) , Command count = 3353 ] 
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:53: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3354 ] 
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:53: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3355 ] 
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:53: Host Frequency set to 20403 KHz

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:53: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3356 ] 
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x06100210>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3357 ] 
15:07:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:54: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3358 ] 
15:07:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:54: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3359 ] 
15:07:54: [ GetCardStatus() , Command count = 3360 ] 
15:07:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:54: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:54: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:54: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100180>, <py_sfcl.CommandDataDefinition object at 0x06111F00>) , Command count = 3361 ] 
15:07:54: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100540>, <py_sfcl.CommandDataDefinition object at 0x061B8AB0>) , Command count = 3362 ] 
15:07:54: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:54: [ SetCardRCA(0x1, 0xD555) , Command count = 3363 ] 
15:07:54: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B40>, <py_sfcl.CommandDataDefinition object at 0x061B8B10>) , Command count = 3364 ] 
15:07:54: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:54: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:54: [ SetBusWidth(0x4) , Command count = 3365 ] 
15:07:56: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:07:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3366 ] 
15:07:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:07:56: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:56: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3367 ] 
15:07:56: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:07:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528ACC0>, <py_sfcl.CommandDataDefinition object at 0x061B8BD0>) , Command count = 3368 ] 
15:07:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1540>, <py_sfcl.CommandDataDefinition object at 0x061B8AE0>) , Command count = 3369 ] 
15:07:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:07:56: [ SetCardRCA(0x1, 0xD555) , Command count = 3370 ] 
15:07:57: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x061B8B40>) , Command count = 3371 ] 
15:07:57: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:07:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:07:57: [ SetBusWidth(0x4) , Command count = 3372 ] 
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:57: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3373 ] 
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:57: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3374 ] 
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:57: Host Frequency set to 17129 KHz

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:07:57: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3375 ] 
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:07:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:07:57: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:07:57: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CC60>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3376 ] 
15:07:57: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:07:57: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:07:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3377 ] 
15:07:58: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:07:58: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:07:58: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:07:58: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:07:58: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:07:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:07:58: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3378 ] 
15:07:58: [ GetCardStatus() , Command count = 3379 ] 
15:07:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:07:58: [DVTCommonLib]### Exception_Details :Time out error on card response
15:07:58: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:07:58: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:07:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119A80>, <py_sfcl.CommandDataDefinition object at 0x06119990>) , Command count = 3380 ] 
15:07:58: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:07:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005A0>, <py_sfcl.CommandDataDefinition object at 0x061B8EA0>) , Command count = 3381 ] 
15:07:58: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:07:58: [ SetCardRCA(0x1, 0xD555) , Command count = 3382 ] 
15:07:58: [DVTCommonLib]### Identification :Idenfication of card completed 

15:07:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1B70>, <py_sfcl.CommandDataDefinition object at 0x061B8DB0>) , Command count = 3383 ] 
15:07:58: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:00: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3384 ] 
15:08:00: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:00: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:00: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:00: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:00: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:00: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:00: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3385 ] 
15:08:00: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:00: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C90>, <py_sfcl.CommandDataDefinition object at 0x061B8210>) , Command count = 3386 ] 
15:08:00: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x061B8390>) , Command count = 3387 ] 
15:08:00: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:00: [ SetCardRCA(0x1, 0xD555) , Command count = 3388 ] 
15:08:00: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x061B84B0>) , Command count = 3389 ] 
15:08:00: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:00: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:00: [ SetBusWidth(0x4) , Command count = 3390 ] 
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:00: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3391 ] 
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:00: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3392 ] 
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:01: Host Frequency set to 12832 KHz

15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:01: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3393 ] 
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x061B83C0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3394 ] 
15:08:01: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:01: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:01: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3395 ] 
15:08:01: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:01: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:01: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:01: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:01: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:03: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3396 ] 
15:08:03: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:03: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:03: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:03: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:03: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:03: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3397 ] 
15:08:03: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:03: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112A0>, <py_sfcl.CommandDataDefinition object at 0x061B82D0>) , Command count = 3398 ] 
15:08:03: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x06127810>) , Command count = 3399 ] 
15:08:03: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:03: [ SetCardRCA(0x1, 0xD555) , Command count = 3400 ] 
15:08:04: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x0601A690>) , Command count = 3401 ] 
15:08:04: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:04: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:04: [ SetBusWidth(0x4) , Command count = 3402 ] 
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:04: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3403 ] 
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:04: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3404 ] 
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:04: Host Frequency set to 19943 KHz

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:04: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3405 ] 
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:04: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:04: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111BD0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3406 ] 
15:08:04: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:04: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3407 ] 
15:08:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:05: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3408 ] 
15:08:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:07: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3409 ] 
15:08:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061110F0>, <py_sfcl.CommandDataDefinition object at 0x06127270>) , Command count = 3410 ] 
15:08:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05177EA0>, <py_sfcl.CommandDataDefinition object at 0x06127A20>) , Command count = 3411 ] 
15:08:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:07: [ SetCardRCA(0x1, 0xD555) , Command count = 3412 ] 
15:08:07: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111ED0>, <py_sfcl.CommandDataDefinition object at 0x06127450>) , Command count = 3413 ] 
15:08:07: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:07: [ SetBusWidth(0x4) , Command count = 3414 ] 
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:07: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3415 ] 
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:07: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3416 ] 
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:08: Host Frequency set to 22185 KHz

15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:08: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3417 ] 
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:08: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:08: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111720>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3418 ] 
15:08:08: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:08: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3419 ] 
15:08:08: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:08: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:08: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:08: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:08: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3420 ] 
15:08:08: [ GetCardStatus() , Command count = 3421 ] 
15:08:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:08: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:08: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:08: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x061194B0>) , Command count = 3422 ] 
15:08:08: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CD20>, <py_sfcl.CommandDataDefinition object at 0x061276C0>) , Command count = 3423 ] 
15:08:08: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:08: [ SetCardRCA(0x1, 0xD555) , Command count = 3424 ] 
15:08:08: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061270F0>, <py_sfcl.CommandDataDefinition object at 0x061278A0>) , Command count = 3425 ] 
15:08:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:08: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:08: [ SetBusWidth(0x4) , Command count = 3426 ] 
15:08:10: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3427 ] 
15:08:11: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:11: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:11: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:11: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:11: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:11: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3428 ] 
15:08:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:11: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x06127BA0>) , Command count = 3429 ] 
15:08:11: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF60>, <py_sfcl.CommandDataDefinition object at 0x06127930>) , Command count = 3430 ] 
15:08:11: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:11: [ SetCardRCA(0x1, 0xD555) , Command count = 3431 ] 
15:08:11: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111810>, <py_sfcl.CommandDataDefinition object at 0x06127AE0>) , Command count = 3432 ] 
15:08:11: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:11: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:11: [ SetBusWidth(0x4) , Command count = 3433 ] 
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:11: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3434 ] 
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:11: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3435 ] 
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:11: Host Frequency set to 14556 KHz

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:11: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3436 ] 
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119EA0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3437 ] 
15:08:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:12: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3438 ] 
15:08:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:12: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:12: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3439 ] 
15:08:12: [ GetCardStatus() , Command count = 3440 ] 
15:08:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:12: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:12: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x060C1990>) , Command count = 3441 ] 
15:08:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119660>, <py_sfcl.CommandDataDefinition object at 0x061274B0>) , Command count = 3442 ] 
15:08:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:12: [ SetCardRCA(0x1, 0xD555) , Command count = 3443 ] 
15:08:12: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 3444 ] 
15:08:12: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:14: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3445 ] 
15:08:14: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:14: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:14: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:14: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:14: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:14: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3446 ] 
15:08:14: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:14: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E40>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 3447 ] 
15:08:14: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119510>, <py_sfcl.CommandDataDefinition object at 0x06127960>) , Command count = 3448 ] 
15:08:14: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:14: [ SetCardRCA(0x1, 0xD555) , Command count = 3449 ] 
15:08:14: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:14: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C210>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 3450 ] 
15:08:14: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:14: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:14: [ SetBusWidth(0x4) , Command count = 3451 ] 
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:14: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3452 ] 
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:14: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3453 ] 
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:14: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:15: Host Frequency set to 11146 KHz

15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:15: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3454 ] 
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:15: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:15: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111EA0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3455 ] 
15:08:15: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:17: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3456 ] 
15:08:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3457 ] 
15:08:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x061275A0>) , Command count = 3458 ] 
15:08:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119630>, <py_sfcl.CommandDataDefinition object at 0x06127BD0>) , Command count = 3459 ] 
15:08:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:18: [ SetCardRCA(0x1, 0xD555) , Command count = 3460 ] 
15:08:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A50>, <py_sfcl.CommandDataDefinition object at 0x061271B0>) , Command count = 3461 ] 
15:08:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:18: [ SetBusWidth(0x4) , Command count = 3462 ] 
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3463 ] 
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3464 ] 
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:18: Host Frequency set to 22606 KHz

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3465 ] 
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111090>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3466 ] 
15:08:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:19: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3467 ] 
15:08:19: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:19: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:19: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:19: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:19: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3468 ] 
15:08:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:21: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3469 ] 
15:08:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1A80>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 3470 ] 
15:08:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C00>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 3471 ] 
15:08:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:21: [ SetCardRCA(0x1, 0xD555) , Command count = 3472 ] 
15:08:21: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061277E0>, <py_sfcl.CommandDataDefinition object at 0x06127630>) , Command count = 3473 ] 
15:08:21: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:21: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:21: [ SetBusWidth(0x4) , Command count = 3474 ] 
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:21: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3475 ] 
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:21: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3476 ] 
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:21: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:22: Host Frequency set to 15459 KHz

15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:22: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3477 ] 
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127A50>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3478 ] 
15:08:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:22: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3479 ] 
15:08:22: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:22: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:22: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:22: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:22: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:24: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3480 ] 
15:08:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:25: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3481 ] 
15:08:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x06127690>) , Command count = 3482 ] 
15:08:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127150>, <py_sfcl.CommandDataDefinition object at 0x061274E0>) , Command count = 3483 ] 
15:08:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:25: [ SetCardRCA(0x1, 0xD555) , Command count = 3484 ] 
15:08:25: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C30>, <py_sfcl.CommandDataDefinition object at 0x061275D0>) , Command count = 3485 ] 
15:08:25: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:25: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:25: [ SetBusWidth(0x4) , Command count = 3486 ] 
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:25: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3487 ] 
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:25: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3488 ] 
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:25: Host Frequency set to 23609 KHz

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:25: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3489 ] 
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x061278D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3490 ] 
15:08:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:26: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3491 ] 
15:08:26: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:26: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:26: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:26: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:26: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:26: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3492 ] 
15:08:26: [ GetCardStatus() , Command count = 3493 ] 
15:08:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:26: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:26: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:26: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127240>, <py_sfcl.CommandDataDefinition object at 0x0610E8A0>) , Command count = 3494 ] 
15:08:26: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CC0>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 3495 ] 
15:08:26: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:26: [ SetCardRCA(0x1, 0xD555) , Command count = 3496 ] 
15:08:26: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EB70>, <py_sfcl.CommandDataDefinition object at 0x0611E510>) , Command count = 3497 ] 
15:08:26: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:26: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:26: [ SetBusWidth(0x4) , Command count = 3498 ] 
15:08:28: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3499 ] 
15:08:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:28: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:28: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3500 ] 
15:08:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E5A0>, <py_sfcl.CommandDataDefinition object at 0x0610EED0>) , Command count = 3501 ] 
15:08:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E090>, <py_sfcl.CommandDataDefinition object at 0x0611E840>) , Command count = 3502 ] 
15:08:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:28: [ SetCardRCA(0x1, 0xD555) , Command count = 3503 ] 
15:08:28: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF90>, <py_sfcl.CommandDataDefinition object at 0x0610E5D0>) , Command count = 3504 ] 
15:08:28: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:28: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:28: [ SetBusWidth(0x4) , Command count = 3505 ] 
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:28: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3506 ] 
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:28: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3507 ] 
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:29: Host Frequency set to 16772 KHz

15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:29: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3508 ] 
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EDB0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3509 ] 
15:08:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:29: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3510 ] 
15:08:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3511 ] 
15:08:30: [ GetCardStatus() , Command count = 3512 ] 
15:08:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:30: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:30: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ECC0>, <py_sfcl.CommandDataDefinition object at 0x0611ED50>) , Command count = 3513 ] 
15:08:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118D0>, <py_sfcl.CommandDataDefinition object at 0x06111F30>) , Command count = 3514 ] 
15:08:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:30: [ SetCardRCA(0x1, 0xD555) , Command count = 3515 ] 
15:08:30: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E870>, <py_sfcl.CommandDataDefinition object at 0x0610EDE0>) , Command count = 3516 ] 
15:08:30: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3517 ] 
15:08:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:32: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3518 ] 
15:08:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061196C0>, <py_sfcl.CommandDataDefinition object at 0x0610E6F0>) , Command count = 3519 ] 
15:08:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBD0>, <py_sfcl.CommandDataDefinition object at 0x0610ED20>) , Command count = 3520 ] 
15:08:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:32: [ SetCardRCA(0x1, 0xD555) , Command count = 3521 ] 
15:08:32: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E9F0>, <py_sfcl.CommandDataDefinition object at 0x061115D0>) , Command count = 3522 ] 
15:08:32: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:32: [ SetBusWidth(0x4) , Command count = 3523 ] 
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:32: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3524 ] 
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:32: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3525 ] 
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:33: Host Frequency set to 20613 KHz

15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:33: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3526 ] 
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E960>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3527 ] 
15:08:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:33: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3528 ] 
15:08:33: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:33: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:33: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:33: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:33: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:35: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3529 ] 
15:08:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:36: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3530 ] 
15:08:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F90>, <py_sfcl.CommandDataDefinition object at 0x06119810>) , Command count = 3531 ] 
15:08:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119750>, <py_sfcl.CommandDataDefinition object at 0x0610EEA0>) , Command count = 3532 ] 
15:08:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:36: [ SetCardRCA(0x1, 0xD555) , Command count = 3533 ] 
15:08:36: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E570>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 3534 ] 
15:08:36: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:36: [ SetBusWidth(0x4) , Command count = 3535 ] 
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3536 ] 
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3537 ] 
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:36: Host Frequency set to 19582 KHz

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3538 ] 
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:37: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:37: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EA50>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3539 ] 
15:08:37: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:37: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3540 ] 
15:08:37: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:37: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:37: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:37: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:37: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3541 ] 
15:08:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3542 ] 
15:08:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x06119060>) , Command count = 3543 ] 
15:08:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119900>, <py_sfcl.CommandDataDefinition object at 0x0610EE40>) , Command count = 3544 ] 
15:08:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:39: [ SetCardRCA(0x1, 0xD555) , Command count = 3545 ] 
15:08:39: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7B0>, <py_sfcl.CommandDataDefinition object at 0x0610E8D0>) , Command count = 3546 ] 
15:08:39: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:39: [ SetBusWidth(0x4) , Command count = 3547 ] 
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3548 ] 
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:39: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3549 ] 
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:40: Host Frequency set to 16981 KHz

15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3550 ] 
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E70>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3551 ] 
15:08:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3552 ] 
15:08:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:40: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:40: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3553 ] 
15:08:40: [ GetCardStatus() , Command count = 3554 ] 
15:08:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:40: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:40: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:40: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119210>, <py_sfcl.CommandDataDefinition object at 0x061B82A0>) , Command count = 3555 ] 
15:08:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x0610E9C0>) , Command count = 3556 ] 
15:08:40: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:40: [ SetCardRCA(0x1, 0xD555) , Command count = 3557 ] 
15:08:40: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195A0>, <py_sfcl.CommandDataDefinition object at 0x0610E900>) , Command count = 3558 ] 
15:08:40: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:40: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:40: [ SetBusWidth(0x4) , Command count = 3559 ] 
15:08:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3560 ] 
15:08:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:43: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3561 ] 
15:08:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x0611EE70>) , Command count = 3562 ] 
15:08:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B70>, <py_sfcl.CommandDataDefinition object at 0x061B8360>) , Command count = 3563 ] 
15:08:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:43: [ SetCardRCA(0x1, 0xD555) , Command count = 3564 ] 
15:08:43: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8450>, <py_sfcl.CommandDataDefinition object at 0x061B8510>) , Command count = 3565 ] 
15:08:43: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:43: [ SetBusWidth(0x4) , Command count = 3566 ] 
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3567 ] 
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:43: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3568 ] 
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:43: Host Frequency set to 16695 KHz

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:43: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3569 ] 
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x061191E0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3570 ] 
15:08:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3571 ] 
15:08:44: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:44: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:44: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:44: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:44: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:44: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3572 ] 
15:08:44: [ GetCardStatus() , Command count = 3573 ] 
15:08:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:44: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:44: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:44: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA80>, <py_sfcl.CommandDataDefinition object at 0x0611E8D0>) , Command count = 3574 ] 
15:08:44: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1510>, <py_sfcl.CommandDataDefinition object at 0x061B8600>) , Command count = 3575 ] 
15:08:44: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:44: [ SetCardRCA(0x1, 0xD555) , Command count = 3576 ] 
15:08:44: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF30>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 3577 ] 
15:08:44: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:46: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3578 ] 
15:08:46: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:46: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:46: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:46: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:46: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:46: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3579 ] 
15:08:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:46: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x061B8E40>) , Command count = 3580 ] 
15:08:46: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3F0>, <py_sfcl.CommandDataDefinition object at 0x061B8BA0>) , Command count = 3581 ] 
15:08:46: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:46: [ SetCardRCA(0x1, 0xD555) , Command count = 3582 ] 
15:08:46: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8B70>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 3583 ] 
15:08:46: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:46: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:46: [ SetBusWidth(0x4) , Command count = 3584 ] 
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:46: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3585 ] 
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:46: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3586 ] 
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:47: Host Frequency set to 22089 KHz

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3587 ] 
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1BD0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3588 ] 
15:08:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3589 ] 
15:08:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3590 ] 
15:08:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 3591 ] 
15:08:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DB0>, <py_sfcl.CommandDataDefinition object at 0x061B8A80>) , Command count = 3592 ] 
15:08:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:50: [ SetCardRCA(0x1, 0xD555) , Command count = 3593 ] 
15:08:50: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8FC0>, <py_sfcl.CommandDataDefinition object at 0x061B8870>) , Command count = 3594 ] 
15:08:50: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:50: [ SetBusWidth(0x4) , Command count = 3595 ] 
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:50: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3596 ] 
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:50: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3597 ] 
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:50: Host Frequency set to 21178 KHz

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3598 ] 
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1960>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3599 ] 
15:08:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:51: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:51: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3600 ] 
15:08:51: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:51: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:51: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:51: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:51: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3601 ] 
15:08:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:53: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3602 ] 
15:08:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x061B8840>) , Command count = 3603 ] 
15:08:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 3604 ] 
15:08:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:53: [ SetCardRCA(0x1, 0xD555) , Command count = 3605 ] 
15:08:53: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8F30>, <py_sfcl.CommandDataDefinition object at 0x061B8D80>) , Command count = 3606 ] 
15:08:53: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:53: [ SetBusWidth(0x4) , Command count = 3607 ] 
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:53: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3608 ] 
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:53: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3609 ] 
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:54: Host Frequency set to 11214 KHz

15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3610 ] 
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x061B87B0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3611 ] 
15:08:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:54: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3612 ] 
15:08:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:56: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:08:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3613 ] 
15:08:57: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:08:57: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:57: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:57: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:57: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:57: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3614 ] 
15:08:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:08:57: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100540>, <py_sfcl.CommandDataDefinition object at 0x06119390>) , Command count = 3615 ] 
15:08:57: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111FC0>, <py_sfcl.CommandDataDefinition object at 0x061B8AB0>) , Command count = 3616 ] 
15:08:57: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:08:57: [ SetCardRCA(0x1, 0xD555) , Command count = 3617 ] 
15:08:57: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061110C0>, <py_sfcl.CommandDataDefinition object at 0x061B8C00>) , Command count = 3618 ] 
15:08:57: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:57: [ SetBusWidth(0x4) , Command count = 3619 ] 
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:57: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3620 ] 
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:57: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3621 ] 
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:57: Host Frequency set to 24503 KHz

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:08:57: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3622 ] 
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:08:58: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:08:58: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:08:58: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119570>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3623 ] 
15:08:58: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:08:58: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:08:58: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3624 ] 
15:08:58: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:08:58: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:08:58: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:08:58: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:08:58: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:08:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:08:58: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3625 ] 
15:08:58: [ GetCardStatus() , Command count = 3626 ] 
15:08:58: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:08:58: [DVTCommonLib]### Exception_Details :Time out error on card response
15:08:58: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:08:58: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:08:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DE0>, <py_sfcl.CommandDataDefinition object at 0x06100210>) , Command count = 3627 ] 
15:08:58: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:08:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100510>, <py_sfcl.CommandDataDefinition object at 0x061B8960>) , Command count = 3628 ] 
15:08:58: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:08:58: [ SetCardRCA(0x1, 0xD555) , Command count = 3629 ] 
15:08:58: [DVTCommonLib]### Identification :Idenfication of card completed 

15:08:58: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EDB0>, <py_sfcl.CommandDataDefinition object at 0x061B8A50>) , Command count = 3630 ] 
15:08:58: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:08:58: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:08:58: [ SetBusWidth(0x4) , Command count = 3631 ] 
15:09:00: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:00: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3632 ] 
15:09:00: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:00: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:00: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:00: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:00: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:00: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:00: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3633 ] 
15:09:00: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:00: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005A0>, <py_sfcl.CommandDataDefinition object at 0x06119990>) , Command count = 3634 ] 
15:09:00: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x061B8EA0>) , Command count = 3635 ] 
15:09:00: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:00: [ SetCardRCA(0x1, 0xD555) , Command count = 3636 ] 
15:09:00: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:00: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1B70>, <py_sfcl.CommandDataDefinition object at 0x061B8DB0>) , Command count = 3637 ] 
15:09:00: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:00: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:00: [ SetBusWidth(0x4) , Command count = 3638 ] 
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:00: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3639 ] 
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:00: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3640 ] 
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:01: Host Frequency set to 17580 KHz

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:01: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3641 ] 
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:01: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:01: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:01: [ SetVolt(<py_sfcl.SDVoltage object at 0x0528AC90>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3642 ] 
15:09:01: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:01: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:02: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3643 ] 
15:09:02: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:02: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:02: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:02: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:02: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:02: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3644 ] 
15:09:02: [ GetCardStatus() , Command count = 3645 ] 
15:09:02: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:02: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:02: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:02: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CC60>, <py_sfcl.CommandDataDefinition object at 0x061B8C90>) , Command count = 3646 ] 
15:09:02: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x061B8150>) , Command count = 3647 ] 
15:09:02: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:02: [ SetCardRCA(0x1, 0xD555) , Command count = 3648 ] 
15:09:02: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:02: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 3649 ] 
15:09:02: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:04: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:04: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3650 ] 
15:09:04: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:04: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:04: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:04: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:04: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:04: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3651 ] 
15:09:04: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:04: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 3652 ] 
15:09:04: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100570>, <py_sfcl.CommandDataDefinition object at 0x061277B0>) , Command count = 3653 ] 
15:09:04: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:04: [ SetCardRCA(0x1, 0xD555) , Command count = 3654 ] 
15:09:04: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:04: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111030>, <py_sfcl.CommandDataDefinition object at 0x061B8C60>) , Command count = 3655 ] 
15:09:04: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:04: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:04: [ SetBusWidth(0x4) , Command count = 3656 ] 
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:04: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3657 ] 
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:04: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3658 ] 
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:04: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:05: Host Frequency set to 21550 KHz

15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:05: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3659 ] 
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:05: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:05: [ SetVolt(<py_sfcl.SDVoltage object at 0x061002D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3660 ] 
15:09:05: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3661 ] 
15:09:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:05: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:07: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3662 ] 
15:09:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:07: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:07: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3663 ] 
15:09:07: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05177EA0>, <py_sfcl.CommandDataDefinition object at 0x0601A690>) , Command count = 3664 ] 
15:09:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111480>, <py_sfcl.CommandDataDefinition object at 0x061273F0>) , Command count = 3665 ] 
15:09:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:07: [ SetCardRCA(0x1, 0xD555) , Command count = 3666 ] 
15:09:07: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100600>, <py_sfcl.CommandDataDefinition object at 0x06127E70>) , Command count = 3667 ] 
15:09:07: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:07: [ SetBusWidth(0x4) , Command count = 3668 ] 
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:07: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3669 ] 
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:08: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3670 ] 
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:08: Host Frequency set to 12685 KHz

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:08: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3671 ] 
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:08: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:08: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111270>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3672 ] 
15:09:08: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:08: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:09: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3673 ] 
15:09:09: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:09: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:09: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:09: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:09: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3674 ] 
15:09:11: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:11: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:11: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:11: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:11: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:11: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3675 ] 
15:09:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:11: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CD20>, <py_sfcl.CommandDataDefinition object at 0x06111ED0>) , Command count = 3676 ] 
15:09:11: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111210>, <py_sfcl.CommandDataDefinition object at 0x061276C0>) , Command count = 3677 ] 
15:09:11: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:11: [ SetCardRCA(0x1, 0xD555) , Command count = 3678 ] 
15:09:11: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x06127C60>) , Command count = 3679 ] 
15:09:11: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:11: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:11: [ SetBusWidth(0x4) , Command count = 3680 ] 
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:11: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3681 ] 
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:11: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3682 ] 
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:11: Host Frequency set to 13276 KHz

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:11: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3683 ] 
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:11: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:12: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:12: [ SetVolt(<py_sfcl.SDVoltage object at 0x061004B0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3684 ] 
15:09:12: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:12: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3685 ] 
15:09:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:12: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:12: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3686 ] 
15:09:12: [ GetCardStatus() , Command count = 3687 ] 
15:09:12: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:12: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:12: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D50>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 3688 ] 
15:09:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x06127210>) , Command count = 3689 ] 
15:09:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:12: [ SetCardRCA(0x1, 0xD555) , Command count = 3690 ] 
15:09:12: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127AB0>, <py_sfcl.CommandDataDefinition object at 0x06127930>) , Command count = 3691 ] 
15:09:12: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:12: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:12: [ SetBusWidth(0x4) , Command count = 3692 ] 
15:09:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3693 ] 
15:09:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:15: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:15: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3694 ] 
15:09:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:15: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119660>, <py_sfcl.CommandDataDefinition object at 0x060C1990>) , Command count = 3695 ] 
15:09:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B10>, <py_sfcl.CommandDataDefinition object at 0x06127C90>) , Command count = 3696 ] 
15:09:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:15: [ SetCardRCA(0x1, 0xD555) , Command count = 3697 ] 
15:09:15: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 3698 ] 
15:09:15: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:15: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:15: [ SetBusWidth(0x4) , Command count = 3699 ] 
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:15: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3700 ] 
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:15: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3701 ] 
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:15: Host Frequency set to 17588 KHz

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:15: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3702 ] 
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:16: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x061198D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3703 ] 
15:09:16: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:16: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3704 ] 
15:09:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:16: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:16: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3705 ] 
15:09:16: [ GetCardStatus() , Command count = 3706 ] 
15:09:16: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:16: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:16: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:16: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119EA0>, <py_sfcl.CommandDataDefinition object at 0x0601A7E0>) , Command count = 3707 ] 
15:09:16: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E480>, <py_sfcl.CommandDataDefinition object at 0x06127AE0>) , Command count = 3708 ] 
15:09:16: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:16: [ SetCardRCA(0x1, 0xD555) , Command count = 3709 ] 
15:09:16: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:16: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x061275A0>) , Command count = 3710 ] 
15:09:16: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3711 ] 
15:09:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3712 ] 
15:09:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116C0>, <py_sfcl.CommandDataDefinition object at 0x06127BD0>) , Command count = 3713 ] 
15:09:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 3714 ] 
15:09:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:18: [ SetCardRCA(0x1, 0xD555) , Command count = 3715 ] 
15:09:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111510>, <py_sfcl.CommandDataDefinition object at 0x06127720>) , Command count = 3716 ] 
15:09:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:18: [ SetBusWidth(0x4) , Command count = 3717 ] 
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3718 ] 
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3719 ] 
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:19: Host Frequency set to 19555 KHz

15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:19: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3720 ] 
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111A50>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3721 ] 
15:09:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3722 ] 
15:09:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:21: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3723 ] 
15:09:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C00>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 3724 ] 
15:09:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061279F0>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 3725 ] 
15:09:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:21: [ SetCardRCA(0x1, 0xD555) , Command count = 3726 ] 
15:09:22: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x06127390>) , Command count = 3727 ] 
15:09:22: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:22: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:22: [ SetBusWidth(0x4) , Command count = 3728 ] 
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:22: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3729 ] 
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:22: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3730 ] 
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:22: Host Frequency set to 21168 KHz

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:22: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3731 ] 
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:22: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:22: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119CC0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3732 ] 
15:09:22: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:22: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3733 ] 
15:09:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:23: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3734 ] 
15:09:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:25: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3735 ] 
15:09:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127150>, <py_sfcl.CommandDataDefinition object at 0x061274E0>) , Command count = 3736 ] 
15:09:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x06127690>) , Command count = 3737 ] 
15:09:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:25: [ SetCardRCA(0x1, 0xD555) , Command count = 3738 ] 
15:09:25: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127D50>, <py_sfcl.CommandDataDefinition object at 0x06127630>) , Command count = 3739 ] 
15:09:25: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:25: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:25: [ SetBusWidth(0x4) , Command count = 3740 ] 
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:25: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3741 ] 
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:25: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3742 ] 
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:26: Host Frequency set to 20956 KHz

15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:26: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3743 ] 
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127F30>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3744 ] 
15:09:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:26: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3745 ] 
15:09:26: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:26: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:26: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:26: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:26: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:28: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:28: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3746 ] 
15:09:28: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:28: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:28: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:28: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:28: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:28: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3747 ] 
15:09:28: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:28: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CC0>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 3748 ] 
15:09:28: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x06127240>) , Command count = 3749 ] 
15:09:28: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:28: [ SetCardRCA(0x1, 0xD555) , Command count = 3750 ] 
15:09:28: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:28: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E750>, <py_sfcl.CommandDataDefinition object at 0x0610E8A0>) , Command count = 3751 ] 
15:09:28: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:28: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:28: [ SetBusWidth(0x4) , Command count = 3752 ] 
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:28: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3753 ] 
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:28: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3754 ] 
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:28: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:29: Host Frequency set to 10343 KHz

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:29: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3755 ] 
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:29: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:29: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127D20>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3756 ] 
15:09:29: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:29: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3757 ] 
15:09:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:30: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3758 ] 
15:09:30: [ GetCardStatus() , Command count = 3759 ] 
15:09:30: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:30: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:30: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:30: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061278D0>, <py_sfcl.CommandDataDefinition object at 0x06127B10>) , Command count = 3760 ] 
15:09:30: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAE0>, <py_sfcl.CommandDataDefinition object at 0x0611E600>) , Command count = 3761 ] 
15:09:30: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:30: [ SetCardRCA(0x1, 0xD555) , Command count = 3762 ] 
15:09:30: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:30: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E660>, <py_sfcl.CommandDataDefinition object at 0x0611E510>) , Command count = 3763 ] 
15:09:30: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:30: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:30: [ SetBusWidth(0x4) , Command count = 3764 ] 
15:09:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3765 ] 
15:09:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:32: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3766 ] 
15:09:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7E0>, <py_sfcl.CommandDataDefinition object at 0x0610EE70>) , Command count = 3767 ] 
15:09:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E600>, <py_sfcl.CommandDataDefinition object at 0x061118D0>) , Command count = 3768 ] 
15:09:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:32: [ SetCardRCA(0x1, 0xD555) , Command count = 3769 ] 
15:09:32: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E870>, <py_sfcl.CommandDataDefinition object at 0x0610EDE0>) , Command count = 3770 ] 
15:09:32: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:32: [ SetBusWidth(0x4) , Command count = 3771 ] 
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:32: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3772 ] 
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:32: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3773 ] 
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:33: Host Frequency set to 24799 KHz

15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:33: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3774 ] 
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610ED20>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3775 ] 
15:09:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:33: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:33: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3776 ] 
15:09:33: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:33: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:33: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:33: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:33: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:33: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3777 ] 
15:09:33: [ GetCardStatus() , Command count = 3778 ] 
15:09:33: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:33: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:33: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:33: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E720>, <py_sfcl.CommandDataDefinition object at 0x0610EDB0>) , Command count = 3779 ] 
15:09:33: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC60>, <py_sfcl.CommandDataDefinition object at 0x06111DE0>) , Command count = 3780 ] 
15:09:33: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:33: [ SetCardRCA(0x1, 0xD555) , Command count = 3781 ] 
15:09:33: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:33: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E9F0>, <py_sfcl.CommandDataDefinition object at 0x0610E840>) , Command count = 3782 ] 
15:09:33: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:35: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3783 ] 
15:09:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:36: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3784 ] 
15:09:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119750>, <py_sfcl.CommandDataDefinition object at 0x0610EEA0>) , Command count = 3785 ] 
15:09:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E690>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 3786 ] 
15:09:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:36: [ SetCardRCA(0x1, 0xD555) , Command count = 3787 ] 
15:09:36: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E390>, <py_sfcl.CommandDataDefinition object at 0x06111E70>) , Command count = 3788 ] 
15:09:36: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:36: [ SetBusWidth(0x4) , Command count = 3789 ] 
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3790 ] 
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3791 ] 
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:36: Host Frequency set to 18049 KHz

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3792 ] 
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:37: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:37: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:37: [ SetVolt(<py_sfcl.SDVoltage object at 0x061B80C0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3793 ] 
15:09:37: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:37: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:37: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3794 ] 
15:09:37: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:37: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:37: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:37: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:37: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3795 ] 
15:09:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3796 ] 
15:09:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119900>, <py_sfcl.CommandDataDefinition object at 0x06119060>) , Command count = 3797 ] 
15:09:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x0610EAB0>) , Command count = 3798 ] 
15:09:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:39: [ SetCardRCA(0x1, 0xD555) , Command count = 3799 ] 
15:09:39: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C60>, <py_sfcl.CommandDataDefinition object at 0x0610E570>) , Command count = 3800 ] 
15:09:39: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:39: [ SetBusWidth(0x4) , Command count = 3801 ] 
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3802 ] 
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:39: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3803 ] 
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:40: Host Frequency set to 24370 KHz

15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:40: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3804 ] 
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:40: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:40: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:40: [ SetVolt(<py_sfcl.SDVoltage object at 0x061B8180>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3805 ] 
15:09:40: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:40: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3806 ] 
15:09:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:40: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:42: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:43: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3807 ] 
15:09:43: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:43: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:43: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:43: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:43: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:43: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3808 ] 
15:09:43: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:43: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x061B82A0>) , Command count = 3809 ] 
15:09:43: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E810>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 3810 ] 
15:09:43: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:43: [ SetCardRCA(0x1, 0xD555) , Command count = 3811 ] 
15:09:43: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:43: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x0610E8D0>) , Command count = 3812 ] 
15:09:43: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:43: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:43: [ SetBusWidth(0x4) , Command count = 3813 ] 
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:43: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3814 ] 
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:43: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3815 ] 
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:43: Host Frequency set to 22614 KHz

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:43: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3816 ] 
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:43: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:44: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193C0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3817 ] 
15:09:44: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3818 ] 
15:09:44: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:44: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:44: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:44: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:44: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:44: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3819 ] 
15:09:44: [ GetCardStatus() , Command count = 3820 ] 
15:09:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:44: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:44: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:44: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127570>, <py_sfcl.CommandDataDefinition object at 0x06119E70>) , Command count = 3821 ] 
15:09:44: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py_sfcl.CommandDataDefinition object at 0x061B85A0>) , Command count = 3822 ] 
15:09:44: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:44: [ SetCardRCA(0x1, 0xD555) , Command count = 3823 ] 
15:09:44: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8240>, <py_sfcl.CommandDataDefinition object at 0x061B83F0>) , Command count = 3824 ] 
15:09:44: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:44: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:44: [ SetBusWidth(0x4) , Command count = 3825 ] 
15:09:46: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:46: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3826 ] 
15:09:46: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:46: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:46: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:46: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:46: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:46: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3827 ] 
15:09:46: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:46: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1510>, <py_sfcl.CommandDataDefinition object at 0x0611E8D0>) , Command count = 3828 ] 
15:09:46: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EEA0>, <py_sfcl.CommandDataDefinition object at 0x061B8780>) , Command count = 3829 ] 
15:09:46: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:46: [ SetCardRCA(0x1, 0xD555) , Command count = 3830 ] 
15:09:46: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:46: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF30>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 3831 ] 
15:09:46: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:46: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:46: [ SetBusWidth(0x4) , Command count = 3832 ] 
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:46: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3833 ] 
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:46: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3834 ] 
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:46: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:47: Host Frequency set to 10783 KHz

15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3835 ] 
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E660>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3836 ] 
15:09:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:48: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3837 ] 
15:09:48: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:48: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:48: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:48: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:48: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:48: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3838 ] 
15:09:48: [ GetCardStatus() , Command count = 3839 ] 
15:09:48: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:48: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:48: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:48: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191E0>, <py_sfcl.CommandDataDefinition object at 0x0610EC60>) , Command count = 3840 ] 
15:09:48: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x061B8420>) , Command count = 3841 ] 
15:09:48: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:48: [ SetCardRCA(0x1, 0xD555) , Command count = 3842 ] 
15:09:48: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:48: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 3843 ] 
15:09:48: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:50: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3844 ] 
15:09:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3845 ] 
15:09:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8930>, <py_sfcl.CommandDataDefinition object at 0x061B8A80>) , Command count = 3846 ] 
15:09:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 3847 ] 
15:09:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:50: [ SetCardRCA(0x1, 0xD555) , Command count = 3848 ] 
15:09:50: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E330>, <py_sfcl.CommandDataDefinition object at 0x061B8510>) , Command count = 3849 ] 
15:09:50: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:50: [ SetBusWidth(0x4) , Command count = 3850 ] 
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:50: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3851 ] 
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:50: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3852 ] 
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:51: Host Frequency set to 10976 KHz

15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:51: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3853 ] 
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:51: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:51: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:51: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E540>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3854 ] 
15:09:51: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:51: ## SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST [Info][RUN] : Loop for 10 times,Still to complete 9 times 

15:09:53: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:53: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3855 ] 
15:09:53: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:53: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:53: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:53: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:53: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:53: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3856 ] 
15:09:53: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:53: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 3857 ] 
15:09:53: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061119C0>, <py_sfcl.CommandDataDefinition object at 0x061B8840>) , Command count = 3858 ] 
15:09:53: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:53: [ SetCardRCA(0x1, 0xD555) , Command count = 3859 ] 
15:09:53: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:53: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E8A0>, <py_sfcl.CommandDataDefinition object at 0x061B8A20>) , Command count = 3860 ] 
15:09:53: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:53: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:53: [ SetBusWidth(0x4) , Command count = 3861 ] 
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:53: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3862 ] 
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:53: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3863 ] 
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:53: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:54: Host Frequency set to 77987 KHz

15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:54: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3864 ] 
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:54: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:54: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:09:54: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527CF90>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3865 ] 
15:09:54: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:09:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3866 ] 
15:09:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:57: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:09:57: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3867 ] 
15:09:57: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:09:57: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:57: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:57: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:57: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:57: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3868 ] 
15:09:57: [ GetCardStatus() , Command count = 3869 ] 
15:09:57: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:09:57: [DVTCommonLib]### Exception_Details :Time out error on card response
15:09:57: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:09:57: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06111FC0>) , Command count = 3870 ] 
15:09:57: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C16F0>, <py_sfcl.CommandDataDefinition object at 0x061B8E10>) , Command count = 3871 ] 
15:09:57: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:09:57: [ SetCardRCA(0x1, 0xD555) , Command count = 3872 ] 
15:09:57: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC30>, <py_sfcl.CommandDataDefinition object at 0x061B87E0>) , Command count = 3873 ] 
15:09:57: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:57: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:57: [ SetBusWidth(0x4) , Command count = 3874 ] 
15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:57: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3875 ] 
15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:0 mA', '200mA SWITCHED']
15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:57: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3876 ] 
15:09:57: OperatingCurrent:0
15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO]:['SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'Current: 200mA SUPPORTED'] 

15:09:57: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:57: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x061B8D50>) , Command count = 3877 ] 
15:09:57: [ GetCardStatus() , Command count = 3878 ] 
15:09:57: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:09:57: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] : Card is reporting illegal command,Expected
15:09:59: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:09:59: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3879 ] 
15:09:59: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:09:59: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:09:59: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:09:59: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:09:59: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:09:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:09:59: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3880 ] 
15:09:59: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:09:59: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:09:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100510>, <py_sfcl.CommandDataDefinition object at 0x06100540>) , Command count = 3881 ] 
15:09:59: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:09:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x061B8B10>) , Command count = 3882 ] 
15:09:59: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:09:59: [ SetCardRCA(0x1, 0xD555) , Command count = 3883 ] 
15:09:59: [DVTCommonLib]### Identification :Idenfication of card completed 

15:09:59: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119480>, <py_sfcl.CommandDataDefinition object at 0x06123F60>) , Command count = 3884 ] 
15:09:59: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:09:59: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:09:59: [ SetBusWidth(0x4) , Command count = 3885 ] 
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:59: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3886 ] 
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:09:59: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3887 ] 
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:09:59: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:00: Host Frequency set to 96997 KHz

15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:00: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3888 ] 
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:00: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:00: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:00: [ SetVolt(<py_sfcl.SDVoltage object at 0x06111C90>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3889 ] 
15:10:00: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:02: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:03: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3890 ] 
15:10:03: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:03: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:03: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:03: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:03: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:03: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A510>, <py_sfcl.CommandDataDefinition object at 0x061B8F60>) , Command count = 3891 ] 
15:10:03: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x061B8A50>) , Command count = 3892 ] 
15:10:03: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:10:03: [ SetCardRCA(0x1, 0xD555) , Command count = 3893 ] 
15:10:03: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119A80>, <py_sfcl.CommandDataDefinition object at 0x061B8BD0>) , Command count = 3894 ] 
15:10:03: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:03: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:03: [ SetBusWidth(0x4) , Command count = 3895 ] 
15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:03: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3896 ] 
15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:0 mA', '200mA SWITCHED']
15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:03: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3897 ] 
15:10:03: OperatingCurrent:0
15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO]:['SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'Current: 200mA SUPPORTED'] 

15:10:03: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:03: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D20>, <py_sfcl.CommandDataDefinition object at 0x0527CC60>) , Command count = 3898 ] 
15:10:03: [ GetCardStatus() , Command count = 3899 ] 
15:10:03: CMD19[ SEND_TUNING_PATTERN ] Failed with an exception
15:10:03: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] : Card is reporting illegal command,Expected
15:10:05: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:05: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3900 ] 
15:10:05: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:05: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:05: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:05: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:05: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:05: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3901 ] 
15:10:05: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:05: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F90>, <py_sfcl.CommandDataDefinition object at 0x061B8150>) , Command count = 3902 ] 
15:10:05: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x06127060>) , Command count = 3903 ] 
15:10:05: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:05: [ SetCardRCA(0x1, 0xD555) , Command count = 3904 ] 
15:10:05: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:05: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117B0>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 3905 ] 
15:10:05: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:05: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:05: [ SetBusWidth(0x4) , Command count = 3906 ] 
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:05: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3907 ] 
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:05: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3908 ] 
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:05: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:06: Host Frequency set to 72816 KHz

15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:06: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3909 ] 
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:06: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:06: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=250, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:06: [ SetVolt(<py_sfcl.SDVoltage object at 0x060C1570>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3910 ] 
15:10:06: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:08: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:08: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3911 ] 
15:10:08: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:08: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:08: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:08: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:08: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3912 ] 
15:10:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:08: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3913 ] 
15:10:08: [ GetCardStatus() , Command count = 3914 ] 
15:10:08: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:10:08: [DVTCommonLib]### Exception_Details :Time out error on card response
15:10:08: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:10:08: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CC60>, <py_sfcl.CommandDataDefinition object at 0x0527C270>) , Command count = 3915 ] 
15:10:08: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05177EA0>, <py_sfcl.CommandDataDefinition object at 0x0601A690>) , Command count = 3916 ] 
15:10:08: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 0, 23]
15:10:08: [ SetCardRCA(0x1, 0xD555) , Command count = 3917 ] 
15:10:08: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:08: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061273F0>, <py_sfcl.CommandDataDefinition object at 0x06127F90>) , Command count = 3918 ] 
15:10:08: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:08: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:08: [ SetBusWidth(0x4) , Command count = 3919 ] 
15:10:08: VS_Flag========================1
15:10:08: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:08: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3920 ] 
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR50 SWITCHED', '200mA SWITCHED']
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:08: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:09: Host Frequency set to 94442 KHz

15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:09: [ CardSwitchCmd(False, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3921 ] 
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:09: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:09: [DVTCommonLib]###  SEND_TUNING_PATTERN called
15:10:09: [ SendTuningPattern_CMD19(0xC, 0x96, <0x200/0x200, Spc, pat:0x0>) , Command count = 3922 ] 
15:10:09: [DVTCommonLib]###  SEND_TUNING_PATTERN Completed 

15:10:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:11: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3923 ] 
15:10:11: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:11: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:11: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:11: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:11: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:11: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3924 ] 
15:10:11: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:11: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194B0>, <py_sfcl.CommandDataDefinition object at 0x06111660>) , Command count = 3925 ] 
15:10:11: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1690>, <py_sfcl.CommandDataDefinition object at 0x061B81E0>) , Command count = 3926 ] 
15:10:11: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:11: [ SetCardRCA(0x1, 0xD555) , Command count = 3927 ] 
15:10:11: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:11: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527CD20>, <py_sfcl.CommandDataDefinition object at 0x06111ED0>) , Command count = 3928 ] 
15:10:11: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:11: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:12: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3929 ] 
15:10:12: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:12: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:12: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:12: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:12: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:12: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111210>, <py_sfcl.CommandDataDefinition object at 0x061276C0>) , Command count = 3930 ] 
15:10:12: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061270F0>, <py_sfcl.CommandDataDefinition object at 0x06127E70>) , Command count = 3931 ] 
15:10:12: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:10:12: [ SetCardRCA(0x1, 0xD555) , Command count = 3932 ] 
15:10:12: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:12: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x061B83C0>) , Command count = 3933 ] 
15:10:12: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:12: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:12: [ SetBusWidth(0x4) , Command count = 3934 ] 
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:12: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3935 ] 
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR50 SWITCHED', '200mA SWITCHED']
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:12: Host Frequency set to 71199 KHz

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:12: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3936 ] 
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:12: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:12: [DVTCommonLib]###  SEND_TUNING_PATTERN called
15:10:12: [ SendTuningPattern_CMD19(0x1, 0x96, <0x200/0x200, Spc, pat:0x0>) , Command count = 3937 ] 
15:10:12: [DVTCommonLib]###  SEND_TUNING_PATTERN Completed 

15:10:14: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:15: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3938 ] 
15:10:15: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:15: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:15: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:15: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:15: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:15: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3939 ] 
15:10:15: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:15: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127BA0>, <py_sfcl.CommandDataDefinition object at 0x06127C60>) , Command count = 3940 ] 
15:10:15: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D20>, <py_sfcl.CommandDataDefinition object at 0x06111D50>) , Command count = 3941 ] 
15:10:15: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:15: [ SetCardRCA(0x1, 0xD555) , Command count = 3942 ] 
15:10:15: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:15: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111810>, <py_sfcl.CommandDataDefinition object at 0x06111120>) , Command count = 3943 ] 
15:10:15: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:15: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:15: [ SetBusWidth(0x4) , Command count = 3944 ] 
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:15: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3945 ] 
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:15: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3946 ] 
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:15: Host Frequency set to 10665 KHz

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:15: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3947 ] 
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:15: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:16: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:16: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:16: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119330>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3948 ] 
15:10:16: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:16: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:10:16: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3949 ] 
15:10:16: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:16: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:16: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:16: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:16: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:18: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3950 ] 
15:10:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:18: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3951 ] 
15:10:18: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1750>, <py_sfcl.CommandDataDefinition object at 0x06127F00>) , Command count = 3952 ] 
15:10:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119510>, <py_sfcl.CommandDataDefinition object at 0x06111120>) , Command count = 3953 ] 
15:10:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:18: [ SetCardRCA(0x1, 0xD555) , Command count = 3954 ] 
15:10:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127DB0>, <py_sfcl.CommandDataDefinition object at 0x061118A0>) , Command count = 3955 ] 
15:10:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:18: [ SetBusWidth(0x4) , Command count = 3956 ] 
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:18: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3957 ] 
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:18: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3958 ] 
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:19: Host Frequency set to 22455 KHz

15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:19: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3959 ] 
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:19: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:19: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:19: [ SetVolt(<py_sfcl.SDVoltage object at 0x0527C210>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3960 ] 
15:10:19: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:19: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:10:19: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3961 ] 
15:10:19: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:19: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:19: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:19: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:19: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:21: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:22: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3962 ] 
15:10:22: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:22: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:22: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:22: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:22: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:22: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:22: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3963 ] 
15:10:22: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:22: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x061275A0>) , Command count = 3964 ] 
15:10:22: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116C0>, <py_sfcl.CommandDataDefinition object at 0x06127BD0>) , Command count = 3965 ] 
15:10:22: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:22: [ SetCardRCA(0x1, 0xD555) , Command count = 3966 ] 
15:10:22: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:22: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 3967 ] 
15:10:22: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:22: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:22: [ SetBusWidth(0x4) , Command count = 3968 ] 
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:22: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3969 ] 
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:22: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3970 ] 
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:22: Host Frequency set to 12799 KHz

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:22: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3971 ] 
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:22: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:23: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:23: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:23: [ SetVolt(<py_sfcl.SDVoltage object at 0x061198D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3972 ] 
15:10:23: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:23: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:10:23: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3973 ] 
15:10:23: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:23: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:23: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:23: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:23: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:23: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3974 ] 
15:10:23: [ GetCardStatus() , Command count = 3975 ] 
15:10:23: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:10:23: [DVTCommonLib]### Exception_Details :Time out error on card response
15:10:23: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:10:23: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111510>, <py_sfcl.CommandDataDefinition object at 0x06111C00>) , Command count = 3976 ] 
15:10:23: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111300>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 3977 ] 
15:10:23: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:10:23: [ SetCardRCA(0x1, 0xD555) , Command count = 3978 ] 
15:10:23: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:23: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119BD0>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 3979 ] 
15:10:23: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:23: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:23: [ SetBusWidth(0x4) , Command count = 3980 ] 
15:10:25: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:25: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3981 ] 
15:10:25: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:25: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:25: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:25: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:25: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:25: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3982 ] 
15:10:25: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:25: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A50>, <py_sfcl.CommandDataDefinition object at 0x06127360>) , Command count = 3983 ] 
15:10:25: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1A80>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 3984 ] 
15:10:25: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:25: [ SetCardRCA(0x1, 0xD555) , Command count = 3985 ] 
15:10:25: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:25: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111E0>, <py_sfcl.CommandDataDefinition object at 0x061273C0>) , Command count = 3986 ] 
15:10:25: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:25: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:25: [ SetBusWidth(0x4) , Command count = 3987 ] 
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:25: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3988 ] 
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:25: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3989 ] 
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:25: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:26: Host Frequency set to 21199 KHz

15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:26: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 3990 ] 
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:26: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:26: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:26: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611E450>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 3991 ] 
15:10:26: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:26: [DVTCommonLib]### Reset the card with OCR value : 0x40FF8000
15:10:26: [ CardReset(py_sfcl.CARD_MODE.SD, 0x40FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3992 ] 
15:10:26: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:26: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:26: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:26: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:26: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:26: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 3993 ] 
15:10:26: [ GetCardStatus() , Command count = 3994 ] 
15:10:26: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:10:26: [DVTCommonLib]### Exception_Details :Time out error on card response
15:10:26: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:10:26: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EED0>, <py_sfcl.CommandDataDefinition object at 0x06119CC0>) , Command count = 3995 ] 
15:10:26: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:26: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x06127ED0>) , Command count = 3996 ] 
15:10:27: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:10:27: [ SetCardRCA(0x1, 0xD555) , Command count = 3997 ] 
15:10:27: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:27: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E6F0>, <py_sfcl.CommandDataDefinition object at 0x061271E0>) , Command count = 3998 ] 
15:10:27: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:29: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:29: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 3999 ] 
15:10:29: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:29: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:29: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:29: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:29: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:29: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4000 ] 
15:10:29: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:29: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C30>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 4001 ] 
15:10:29: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0610EC30>) , Command count = 4002 ] 
15:10:29: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:29: [ SetCardRCA(0x1, 0xD555) , Command count = 4003 ] 
15:10:29: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:29: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EA80>, <py_sfcl.CommandDataDefinition object at 0x06127D50>) , Command count = 4004 ] 
15:10:29: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:29: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:29: [ SetBusWidth(0x4) , Command count = 4005 ] 
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:29: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4006 ] 
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:29: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4007 ] 
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:29: Host Frequency set to 20262 KHz

15:10:29: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:30: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4008 ] 
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:30: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:30: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:30: [ SetVolt(<py_sfcl.SDVoltage object at 0x06127840>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 4009 ] 
15:10:30: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:30: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:30: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4010 ] 
15:10:30: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:30: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:30: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:30: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:30: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:32: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:32: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4011 ] 
15:10:32: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:32: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:32: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:32: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:32: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:32: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4012 ] 
15:10:32: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:32: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7B0>, <py_sfcl.CommandDataDefinition object at 0x0611E840>) , Command count = 4013 ] 
15:10:32: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAE0>, <py_sfcl.CommandDataDefinition object at 0x0611E600>) , Command count = 4014 ] 
15:10:32: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:32: [ SetCardRCA(0x1, 0xD555) , Command count = 4015 ] 
15:10:32: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED50>, <py_sfcl.CommandDataDefinition object at 0x061278D0>) , Command count = 4016 ] 
15:10:32: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:32: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:32: [ SetBusWidth(0x4) , Command count = 4017 ] 
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:32: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4018 ] 
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:32: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4019 ] 
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:33: Host Frequency set to 22512 KHz

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:33: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4020 ] 
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:33: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:33: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:33: [ SetVolt(<py_sfcl.SDVoltage object at 0x061118D0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 4021 ] 
15:10:33: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:33: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4022 ] 
15:10:34: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:34: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:34: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:34: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:34: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4023 ] 
15:10:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:36: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4024 ] 
15:10:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBD0>, <py_sfcl.CommandDataDefinition object at 0x0610E5D0>) , Command count = 4025 ] 
15:10:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127D20>, <py_sfcl.CommandDataDefinition object at 0x0611EE40>) , Command count = 4026 ] 
15:10:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:36: [ SetCardRCA(0x1, 0xD555) , Command count = 4027 ] 
15:10:36: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119450>, <py_sfcl.CommandDataDefinition object at 0x0610EE70>) , Command count = 4028 ] 
15:10:36: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:36: [ SetBusWidth(0x4) , Command count = 4029 ] 
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:36: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4030 ] 
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:36: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4031 ] 
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:36: Host Frequency set to 19874 KHz

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:36: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4032 ] 
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:36: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:36: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:36: [ SetVolt(<py_sfcl.SDVoltage object at 0x0610EDE0>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 4033 ] 
15:10:36: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:36: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:36: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4034 ] 
15:10:36: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:36: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:36: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:36: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:36: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:36: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4035 ] 
15:10:36: [ GetCardStatus() , Command count = 4036 ] 
15:10:36: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:10:36: [DVTCommonLib]### Exception_Details :Time out error on card response
15:10:36: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:10:36: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119750>, <py_sfcl.CommandDataDefinition object at 0x0610E9F0>) , Command count = 4037 ] 
15:10:36: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F60>, <py_sfcl.CommandDataDefinition object at 0x0610EEA0>) , Command count = 4038 ] 
15:10:36: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:10:36: [ SetCardRCA(0x1, 0xD555) , Command count = 4039 ] 
15:10:36: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:36: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119300>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 4040 ] 
15:10:36: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:36: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:36: [ SetBusWidth(0x4) , Command count = 4041 ] 
15:10:38: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:39: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x69, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4042 ] 
15:10:39: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:39: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:39: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:39: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:39: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:39: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4043 ] 
15:10:39: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:39: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED20>, <py_sfcl.CommandDataDefinition object at 0x0610E810>) , Command count = 4044 ] 
15:10:39: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F90>, <py_sfcl.CommandDataDefinition object at 0x0611E960>) , Command count = 4045 ] 
15:10:39: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:39: [ SetCardRCA(0x1, 0xD555) , Command count = 4046 ] 
15:10:39: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:39: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8030>, <py_sfcl.CommandDataDefinition object at 0x0611EC60>) , Command count = 4047 ] 
15:10:39: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:39: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:39: [ SetBusWidth(0x4) , Command count = 4048 ] 
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:39: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4049 ] 
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:39: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4050 ] 
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:39: Host Frequency set to 14280 KHz

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:39: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4051 ] 
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 100
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:39: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:39: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:39: [ SetVolt(<py_sfcl.SDVoltage object at 0x0611ED80>, <0x8000/0x200, Spc, pat:0x0>, False) , Command count = 4052 ] 
15:10:39: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:39: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:40: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0xD, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4053 ] 
15:10:40: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:40: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:40: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:40: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:40: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:40: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4054 ] 
15:10:40: [ GetCardStatus() , Command count = 4055 ] 
15:10:40: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Command failed
15:10:40: [DVTCommonLib]### Exception_Details :Time out error on card response
15:10:40: [SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST]###[INFO] Expected to fail,Time out error on card response

15:10:40: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E9C0>, <py_sfcl.CommandDataDefinition object at 0x061B80C0>) , Command count = 4056 ] 
15:10:40: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x0610EE40>) , Command count = 4057 ] 
15:10:40: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 69, 32, 27]
15:10:40: [ SetCardRCA(0x1, 0xD555) , Command count = 4058 ] 
15:10:40: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:40: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119AE0>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 4059 ] 
15:10:40: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:42: Failed Running script <module 'SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST' from 'C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS108_DVT_SD3_00_UHS_INIT_ERRORS_TEST.pyc'> with error  
15:10:42: ########################################
15:10:42: ########################################
15:10:42: Stated Running script SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST 
15:10:42: ########################################
15:10:42: ###### Running DVT_SD3.00_UHS_LOCK_UNLOCK_TEST.st3
15:10:42: [GO4_globalInitCard]### Switch to Specify Card Type
15:10:44: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:10:44: Host Frequency set to 25000 KHz
15:10:44: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:10:44: [GO18_globalSetVolt]### Set Host Voltage value.
15:10:44: [GO18_globalSetVolt]### maxVoltage=3.8V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Flash (VDDF) 
15:10:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x061238A0>, 0x0, True) , Command count = 4060 ] 
15:10:44: [GO18_globalSetVolt]### Host voltage value is set.
15:10:44: [GO18_globalSetVolt]### maxVoltage=3300 V, maxCurrent=250mA, A2DRate=62.5 Hz, PowerSupplier=Host (VDDH) 
15:10:44: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119D50>, 0x0, False) , Command count = 4061 ] 
15:10:44: [GO18_globalSetVolt]### Host voltage value is set.
15:10:44: [ CardSetTimeOut(0x1F4, 0xFA, 0x64) , Command count = 4062 ] 
15:10:44: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:44: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x1, 0x0, 0x1, False, True, 0x1, 0x1, 0xAA, 0x0) , Command count = 4063 ] 
15:10:44: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:44: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:44: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:44: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:44: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4064 ] 
15:10:44: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:44: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119240>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 4065 ] 
15:10:44: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x06123360>) , Command count = 4066 ] 
15:10:44: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:44: [ SetCardRCA(0x1, 0xD555) , Command count = 4067 ] 
15:10:44: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:44: [GO12_globalSetLSHostFreq.py]### Set the Host Frequency in Low Speed mode.
15:10:44: Host Frequency set to 25000 KHz
15:10:44: [GO12_globalSetLSHostFreq.py]###  globalRandom value is NONE
15:10:44: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 50, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:10:44: ####CSD Registe 2.0 Values####
15:10:44: CSD_STRUCTURE                                 :0x1
15:10:44: Reserv1                                       :0x0
15:10:44: Time Access 1 TAAC                            :0xe
15:10:44: Time Access 2 NSAC*100                        :0x0
15:10:44: Data Transfer Rate TRAN_SPEED                 :0x32
15:10:44: Card Command Classess CCC                     :0x5b5
15:10:44: Max Read Data Block Length  READ_BL_LEN       :0x9
15:10:44: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:10:44: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:10:44: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:10:44: DSR(driver stage register)  DSR_IMP           :0x0
15:10:44: Reserv2                                       :0x0
15:10:44: Device Size C_SIZE                            :0xedc8
15:10:44: Reserv3                                       :0x0
15:10:44: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:10:44: Erase Sector Size SECTOR_SIZE                 :0x7f
15:10:44: Write Protect Group Size WP_GRP_SIZE          :0x0
15:10:44: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:10:44: Reserv4                                       :0x0
15:10:44: Write Speed Factor R2W_FACTOR                 :0x2
15:10:44: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:10:44: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:10:44: FILE_FORMAT_GRP                               :0x0
15:10:44: COPY flag                                     :0x1
15:10:44: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:10:44: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:10:44: File_Format                                   :0x0
15:10:44: CRC                                           :0x0
15:10:44: ####CSD Registe Values####  

15:10:44: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register#####
15:10:44: [GetSCRRegisterEntry] Passed
15:10:44: SCR_STRUCTURE Version             : SCR_VERSION_1.0
15:10:44: SD Memory Card - Spec. Version    : SPEC VERSION 2.00 or 3.0X
15:10:44: Data_Status_After Erases          : 0
15:10:44: CPRM Security Support             : No Security
15:10:44: DAT Bus widths supported          : 1 bit [DAT0] and 4 bit (DAT0-3)
15:10:44: Spec. Version                     : Version 3.0X
15:10:44: Extended Security Support         : Extended_Security_Not_Supported
15:10:44: Command Support                   : COMMAND_SUPPORT
15:10:44: [DVTCommonLib]### GET_SCR_Reg_Values :###SCR Register##### 

15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8180>, <py_sfcl.CommandDataDefinition object at 0x061B81B0>) , Command count = 4068 ] 
15:10:44: CMD55[ APP_CMD ] Passed with R1 type response:[55, 'CURRENT_STATE:Tran', 'READY_FOR_DATA', 'APP_CMD']
15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119210>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 4069 ] 
15:10:44: ACmd51[ SEND_SCR ] Passed with R1 type response:[51, 0, 0, 9, 32, 18]
15:10:44: [ SetBusWidth(0x4) , Command count = 4070 ] 
15:10:44: [DVTCommonLib]### GetSDStatus :######SD Status#######
15:10:44: [ CardGetStdStructure(<py_sfcl.STD_STRUCT object at 0x06123210>, <0x200/0x200, Spc, pat:0x0>) , Command count = 4071 ] 
15:10:44: Protected Area Size 0x28000
15:10:44: Bus Width           2
15:10:44: Secure Mode         0
15:10:44: Speed  Class        4
15:10:44: Perf Move           0
15:10:44: Au Size             9
15:10:44: Erase Size          15
15:10:44: Erase Timeout       1
15:10:44: Erase offset        1
15:10:44: [DVTCommonLib]### GetSDStatus :######SD Status#######

15:10:44: [G02_GlobalSetBusMode]### Bus width is set to Four and Verified
15:10:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:44: [ CardSwitchCmd(True, [0x2, 0xF, 0xF, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4072 ] 
15:10:44: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:44: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:44: [GO17_globalSetVeryHSHostFreq.py]### Set the Very High Host Frequency (e.g. lightning)
15:10:44: Host Frequency set to 100000 KHz
15:10:44: [GO17_globalSetVeryHSHostFreq.py]###  globalRandom value is NONE
15:10:44: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:10:44: ####CSD Registe 2.0 Values####
15:10:44: CSD_STRUCTURE                                 :0x1
15:10:44: Reserv1                                       :0x0
15:10:44: Time Access 1 TAAC                            :0xe
15:10:44: Time Access 2 NSAC*100                        :0x0
15:10:44: Data Transfer Rate TRAN_SPEED                 :0xb
15:10:44: Card Command Classess CCC                     :0x5b5
15:10:44: Max Read Data Block Length  READ_BL_LEN       :0x9
15:10:44: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:10:44: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:10:44: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:10:44: DSR(driver stage register)  DSR_IMP           :0x0
15:10:44: Reserv2                                       :0x0
15:10:44: Device Size C_SIZE                            :0xedc8
15:10:44: Reserv3                                       :0x0
15:10:44: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:10:44: Erase Sector Size SECTOR_SIZE                 :0x7f
15:10:44: Write Protect Group Size WP_GRP_SIZE          :0x0
15:10:44: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:10:44: Reserv4                                       :0x0
15:10:44: Write Speed Factor R2W_FACTOR                 :0x2
15:10:44: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:10:44: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:10:44: FILE_FORMAT_GRP                               :0x0
15:10:44: COPY flag                                     :0x1
15:10:44: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:10:44: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:10:44: File_Format                                   :0x0
15:10:44: CRC                                           :0x0
15:10:44: ####CSD Registe Values####  

15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127570>, <py_sfcl.CommandDataDefinition object at 0x061B8480>) , Command count = 4073 ] 
15:10:44: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Stby', 'READY_FOR_DATA']
15:10:44: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x06119E70>) , Command count = 4074 ] 
15:10:44: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:44: [GO4_globalInitCard]### Switch to Specify Card Type Completed 


15:10:46: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E40>, 0x0, False) , Command count = 4075 ] 
15:10:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=200, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=True
15:10:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x06119E40>, 0x0, True) , Command count = 4076 ] 
15:10:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4077 ] 
15:10:47: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:47: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:47: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:47: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:47: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:47: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4078 ] 
15:10:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:47: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8240>, <py_sfcl.CommandDataDefinition object at 0x061B83F0>) , Command count = 4079 ] 
15:10:47: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1510>, <py_sfcl.CommandDataDefinition object at 0x0611E8D0>) , Command count = 4080 ] 
15:10:47: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:47: [ SetCardRCA(0x1, 0xD555) , Command count = 4081 ] 
15:10:47: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:47: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:47: [ SetBusWidth(0x4) , Command count = 4082 ] 
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4083 ] 
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [32799, 49153, 32783, 32783, 32769, 32769]
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:47: [ CardSwitchCmd(False, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4084 ] 
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [32799, 49153, 32783, 32783, 32769, 32769]
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:47: [ CardSwitchCmd(True, [0x0, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4085 ] 
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100 mA', 'SDR12 SWITCHED', '200mA SWITCHED']
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:47: Host Frequency set to 25000 KHz

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [32799, 49153, 32783, 32783, 32769, 32769]
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4086 ] 
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:100', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NONE option] Power Consumption value Not checked and its value(in mA) is 100
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:47: [DVTCommonLib]### setVolt[INFO] :maxVoltage=3300 V, maxCurrent=100, A2DRate=A2D_62_5_HZ Hz, PowerSupplier=False
15:10:47: [ SetVolt(<py_sfcl.SDVoltage object at 0x061193C0>, 0x0, False) , Command count = 4087 ] 
15:10:47: [DVTCommonLib]### setVolt[INFO] :Voltage is set

15:10:47: SendOCR: 1107263488
15:10:47: ExcpectOCR: 3254747136
15:10:47: SendFirstOCR: 1107263488
15:10:47: SendNextOCR: 1107263488
15:10:47: SingleCommand: 0
15:10:47: SingleCommandTestType: 1
15:10:47: Identification: 1
15:10:47: ProtocolMode: 1
15:10:47: VerifyType: 0
15:10:47: SendCMD0: 1
15:10:47: SendCMD8: 1
15:10:47: SendCMD58: 1
15:10:47: SetPower: 1
15:10:47: HcsXpcS18r000: 16744448
15:10:47: HcsXpcS18r001: 33521664
15:10:47: HcsXpcS18r010: 285179904
15:10:47: HcsXpcS18r011: 301957120
15:10:47: HcsXpcS18r100: 1090486272
15:10:47: HcsXpcS18r101: 1107263488
15:10:47: HcsXpcS18r110: 1358921728
15:10:47: HcsXpcS18r111: 1375698944
15:10:47: ReadyCcs18a000: 16744448
15:10:47: ReadyCcs18a001: 33521664
15:10:47: ReadyCcs18a010: 1090486272
15:10:47: ReadyCcs18a011: 1107263488
15:10:47: ReadyCcs18a100: 2164228096
15:10:47: ReadyCcs18a101: 2181005312
15:10:47: ReadyCcs18a110: 3237969920
15:10:47: ReadyCcs18a111: 3254747136
15:10:47: Card Capacity is : 32.000000 GB
15:10:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:49: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4088 ] 
15:10:49: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:49: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:49: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:49: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:49: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:49: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4089 ] 
15:10:49: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:49: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8900>, <py_sfcl.CommandDataDefinition object at 0x0528AA80>) , Command count = 4090 ] 
15:10:49: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF30>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 4091 ] 
15:10:49: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:49: [ SetCardRCA(0x1, 0xD555) , Command count = 4092 ] 
15:10:49: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC60>, <py_sfcl.CommandDataDefinition object at 0x061B8B70>) , Command count = 4093 ] 
15:10:49: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:49: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:49: [ SetBusWidth(0x4) , Command count = 4094 ] 
15:10:49: VS_Flag========================1
15:10:49: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:49: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4095 ] 
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:49: Host Frequency set to 75447 KHz

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:49: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4096 ] 
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:49: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:49: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:10:49: ####CSD Registe 2.0 Values####
15:10:49: CSD_STRUCTURE                                 :0x1
15:10:49: Reserv1                                       :0x0
15:10:49: Time Access 1 TAAC                            :0xe
15:10:49: Time Access 2 NSAC*100                        :0x0
15:10:49: Data Transfer Rate TRAN_SPEED                 :0xb
15:10:49: Card Command Classess CCC                     :0x5b5
15:10:49: Max Read Data Block Length  READ_BL_LEN       :0x9
15:10:49: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:10:49: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:10:49: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:10:49: DSR(driver stage register)  DSR_IMP           :0x0
15:10:49: Reserv2                                       :0x0
15:10:49: Device Size C_SIZE                            :0xedc8
15:10:49: Reserv3                                       :0x0
15:10:49: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:10:49: Erase Sector Size SECTOR_SIZE                 :0x7f
15:10:49: Write Protect Group Size WP_GRP_SIZE          :0x0
15:10:49: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:10:49: Reserv4                                       :0x0
15:10:49: Write Speed Factor R2W_FACTOR                 :0x2
15:10:49: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:10:49: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:10:49: FILE_FORMAT_GRP                               :0x0
15:10:49: COPY flag                                     :0x1
15:10:49: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:10:49: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:10:49: File_Format                                   :0x0
15:10:49: CRC                                           :0x0
15:10:49: ####CSD Registe Values####  

15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8810>) , Command count = 4097 ] 
15:10:49: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8930>, <py_sfcl.CommandDataDefinition object at 0x061B8A80>) , Command count = 4098 ] 
15:10:49: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8990>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 4099 ] 
15:10:49: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 4100 ] 
15:10:49: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:49: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05172060>, <py_sfcl.CommandDataDefinition object at 0x060C1BD0>) , Command count = 4101 ] 
15:10:49: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:49: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:51: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4102 ] 
15:10:52: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:52: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:52: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:52: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:52: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:52: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:52: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4103 ] 
15:10:52: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:52: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061190C0>, <py_sfcl.CommandDataDefinition object at 0x061231B0>) , Command count = 4104 ] 
15:10:52: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E660>, <py_sfcl.CommandDataDefinition object at 0x061B8BA0>) , Command count = 4105 ] 
15:10:52: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:52: [ SetCardRCA(0x1, 0xD555) , Command count = 4106 ] 
15:10:52: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x061235A0>) , Command count = 4107 ] 
15:10:52: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:10:52: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:52: [ SetBusWidth(0x4) , Command count = 4108 ] 
15:10:52: [ GetCardStatus() , Command count = 4109 ] 
15:10:52: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:10:52: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:10:52: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119FC0>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 4110 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8840>, <py_sfcl.CommandDataDefinition object at 0x061B8870>) , Command count = 4111 ] 
15:10:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285960>, <py_sfcl.CommandDataDefinition object at 0x061235A0>) , Command count = 4112 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:52: [ SetBusWidth(0x4) , Command count = 4113 ] 
15:10:52: VS_Flag========================1
15:10:52: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:52: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4114 ] 
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:52: Host Frequency set to 72747 KHz

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:52: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4115 ] 
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E540>, <py_sfcl.CommandDataDefinition object at 0x060C1630>) , Command count = 4116 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123120>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 4117 ] 
15:10:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197B0>, <py_sfcl.CommandDataDefinition object at 0x061239C0>) , Command count = 4118 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x0601A300>) , Command count = 4119 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119390>, <py_sfcl.CommandDataDefinition object at 0x06123030>) , Command count = 4120 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B40>, <py_sfcl.CommandDataDefinition object at 0x061B8A20>) , Command count = 4121 ] 
15:10:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:10:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06111FC0>) , Command count = 4122 ] 
15:10:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:10:54: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4123 ] 
15:10:54: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:10:54: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:54: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:54: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:54: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:10:54: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4124 ] 
15:10:54: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:10:54: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B87B0>, <py_sfcl.CommandDataDefinition object at 0x061B8E10>) , Command count = 4125 ] 
15:10:54: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F00>, <py_sfcl.CommandDataDefinition object at 0x0528ACC0>) , Command count = 4126 ] 
15:10:54: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:10:54: [ SetCardRCA(0x1, 0xD555) , Command count = 4127 ] 
15:10:54: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC30>, <py_sfcl.CommandDataDefinition object at 0x061B87E0>) , Command count = 4128 ] 
15:10:54: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:10:54: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:54: [ SetBusWidth(0x4) , Command count = 4129 ] 
15:10:54: [ GetCardStatus() , Command count = 4130 ] 
15:10:54: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:10:54: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:10:54: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:10:54: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285510>, <py_sfcl.CommandDataDefinition object at 0x06123C90>) , Command count = 4131 ] 
15:10:54: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8960>, <py_sfcl.CommandDataDefinition object at 0x061B8AE0>) , Command count = 4132 ] 
15:10:55: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8C00>, <py_sfcl.CommandDataDefinition object at 0x06100540>) , Command count = 4133 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111750>, <py_sfcl.CommandDataDefinition object at 0x061233C0>) , Command count = 4134 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8B10>, <py_sfcl.CommandDataDefinition object at 0x06111240>) , Command count = 4135 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EDB0>, <py_sfcl.CommandDataDefinition object at 0x06123870>) , Command count = 4136 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119990>, <py_sfcl.CommandDataDefinition object at 0x061230F0>) , Command count = 4137 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005A0>, <py_sfcl.CommandDataDefinition object at 0x06123BD0>) , Command count = 4138 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06123B70>) , Command count = 4139 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B88A0>, <py_sfcl.CommandDataDefinition object at 0x0527CF90>) , Command count = 4140 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1840>, <py_sfcl.CommandDataDefinition object at 0x06123F30>) , Command count = 4141 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119480>, <py_sfcl.CommandDataDefinition object at 0x061B8D80>) , Command count = 4142 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A510>, <py_sfcl.CommandDataDefinition object at 0x061B8F60>) , Command count = 4143 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119570>, <py_sfcl.CommandDataDefinition object at 0x06123300>) , Command count = 4144 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8A50>, <py_sfcl.CommandDataDefinition object at 0x061115A0>) , Command count = 4145 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py_sfcl.CommandDataDefinition object at 0x06123DE0>) , Command count = 4146 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x06137030>) , Command count = 4147 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x06137090>) , Command count = 4148 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119A80>, <py_sfcl.CommandDataDefinition object at 0x061B8BD0>) , Command count = 4149 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111150>, <py_sfcl.CommandDataDefinition object at 0x061370F0>) , Command count = 4150 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1540>, <py_sfcl.CommandDataDefinition object at 0x06137150>) , Command count = 4151 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05257060>, <py_sfcl.CommandDataDefinition object at 0x061371B0>) , Command count = 4152 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8330>, <py_sfcl.CommandDataDefinition object at 0x061B84B0>) , Command count = 4153 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127810>, <py_sfcl.CommandDataDefinition object at 0x06111F90>) , Command count = 4154 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x06137210>) , Command count = 4155 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127060>, <py_sfcl.CommandDataDefinition object at 0x06119F30>) , Command count = 4156 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100570>, <py_sfcl.CommandDataDefinition object at 0x06137270>) , Command count = 4157 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100180>, <py_sfcl.CommandDataDefinition object at 0x061372D0>) , Command count = 4158 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116F0>, <py_sfcl.CommandDataDefinition object at 0x06137330>) , Command count = 4159 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x06137390>) , Command count = 4160 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285FC0>, <py_sfcl.CommandDataDefinition object at 0x06111C90>) , Command count = 4161 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x06137420>) , Command count = 4162 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112A0>, <py_sfcl.CommandDataDefinition object at 0x06137480>) , Command count = 4163 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x061374E0>) , Command count = 4164 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8390>, <py_sfcl.CommandDataDefinition object at 0x06137540>) , Command count = 4165 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D20>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 4166 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C270>, <py_sfcl.CommandDataDefinition object at 0x0527CC60>) , Command count = 4167 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127B70>, <py_sfcl.CommandDataDefinition object at 0x061375A0>) , Command count = 4168 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A690>, <py_sfcl.CommandDataDefinition object at 0x05177EA0>) , Command count = 4169 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127A80>, <py_sfcl.CommandDataDefinition object at 0x06137600>) , Command count = 4170 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061117B0>, <py_sfcl.CommandDataDefinition object at 0x06137660>) , Command count = 4171 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100690>, <py_sfcl.CommandDataDefinition object at 0x061376C0>) , Command count = 4172 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E120>, <py_sfcl.CommandDataDefinition object at 0x06137720>) , Command count = 4173 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x06137780>) , Command count = 4174 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061110F0>, <py_sfcl.CommandDataDefinition object at 0x061377E0>) , Command count = 4175 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F90>, <py_sfcl.CommandDataDefinition object at 0x061273F0>) , Command count = 4176 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111660>, <py_sfcl.CommandDataDefinition object at 0x061194B0>) , Command count = 4177 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100600>, <py_sfcl.CommandDataDefinition object at 0x06137840>) , Command count = 4178 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113F0>, <py_sfcl.CommandDataDefinition object at 0x060C1690>) , Command count = 4179 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002D0>, <py_sfcl.CommandDataDefinition object at 0x061378A0>) , Command count = 4180 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111ED0>, <py_sfcl.CommandDataDefinition object at 0x0527CD20>) , Command count = 4181 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061276C0>, <py_sfcl.CommandDataDefinition object at 0x06111210>) , Command count = 4182 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111180>, <py_sfcl.CommandDataDefinition object at 0x06137900>) , Command count = 4183 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127E70>, <py_sfcl.CommandDataDefinition object at 0x061270F0>) , Command count = 4184 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127030>, <py_sfcl.CommandDataDefinition object at 0x06137960>) , Command count = 4185 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111BD0>, <py_sfcl.CommandDataDefinition object at 0x061379C0>) , Command count = 4186 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111270>, <py_sfcl.CommandDataDefinition object at 0x06137A20>) , Command count = 4187 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8210>, <py_sfcl.CommandDataDefinition object at 0x06137A80>) , Command count = 4188 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A810>, <py_sfcl.CommandDataDefinition object at 0x06137AE0>) , Command count = 4189 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x06137B40>) , Command count = 4190 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x061B83C0>) , Command count = 4191 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C60>, <py_sfcl.CommandDataDefinition object at 0x06127BA0>) , Command count = 4192 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127210>, <py_sfcl.CommandDataDefinition object at 0x06137BA0>) , Command count = 4193 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D50>, <py_sfcl.CommandDataDefinition object at 0x06111D20>) , Command count = 4194 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061004E0>, <py_sfcl.CommandDataDefinition object at 0x06137C00>) , Command count = 4195 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E270>, <py_sfcl.CommandDataDefinition object at 0x06137C60>) , Command count = 4196 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x06137CC0>) , Command count = 4197 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1990>, <py_sfcl.CommandDataDefinition object at 0x06137D20>) , Command count = 4198 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061277B0>, <py_sfcl.CommandDataDefinition object at 0x060C1570>) , Command count = 4199 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061278A0>, <py_sfcl.CommandDataDefinition object at 0x06137DB0>) , Command count = 4200 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C90>, <py_sfcl.CommandDataDefinition object at 0x06137E10>) , Command count = 4201 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF60>, <py_sfcl.CommandDataDefinition object at 0x06137E70>) , Command count = 4202 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061274B0>, <py_sfcl.CommandDataDefinition object at 0x06127AB0>) , Command count = 4203 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F00>, <py_sfcl.CommandDataDefinition object at 0x060C1750>) , Command count = 4204 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061004B0>, <py_sfcl.CommandDataDefinition object at 0x06137ED0>) , Command count = 4205 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119510>, <py_sfcl.CommandDataDefinition object at 0x06111120>) , Command count = 4206 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EDE0>, <py_sfcl.CommandDataDefinition object at 0x06137F30>) , Command count = 4207 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119660>, <py_sfcl.CommandDataDefinition object at 0x06137F90>) , Command count = 4208 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111690>, <py_sfcl.CommandDataDefinition object at 0x061BC030>) , Command count = 4209 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x061BC090>) , Command count = 4210 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127930>, <py_sfcl.CommandDataDefinition object at 0x06119330>) , Command count = 4211 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127E10>, <py_sfcl.CommandDataDefinition object at 0x061BC120>) , Command count = 4212 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E480>, <py_sfcl.CommandDataDefinition object at 0x061BC180>) , Command count = 4213 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119630>, <py_sfcl.CommandDataDefinition object at 0x061BC1E0>) , Command count = 4214 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x06127DB0>) , Command count = 4215 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E1B0>, <py_sfcl.CommandDataDefinition object at 0x061275A0>) , Command count = 4216 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061199C0>, <py_sfcl.CommandDataDefinition object at 0x061BC240>) , Command count = 4217 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116C0>, <py_sfcl.CommandDataDefinition object at 0x06127BD0>) , Command count = 4218 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x061BC2A0>) , Command count = 4219 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119EA0>, <py_sfcl.CommandDataDefinition object at 0x061BC300>) , Command count = 4220 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112D0>, <py_sfcl.CommandDataDefinition object at 0x061BC360>) , Command count = 4221 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111600>, <py_sfcl.CommandDataDefinition object at 0x061BC3C0>) , Command count = 4222 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111630>, <py_sfcl.CommandDataDefinition object at 0x0527C210>) , Command count = 4223 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F00>, <py_sfcl.CommandDataDefinition object at 0x061BC450>) , Command count = 4224 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061194E0>, <py_sfcl.CommandDataDefinition object at 0x061BC4B0>) , Command count = 4225 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127720>, <py_sfcl.CommandDataDefinition object at 0x061BC510>) , Command count = 4226 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 4227 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C00>, <py_sfcl.CommandDataDefinition object at 0x06111510>) , Command count = 4228 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061279F0>, <py_sfcl.CommandDataDefinition object at 0x061BC570>) , Command count = 4229 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111300>, <py_sfcl.CommandDataDefinition object at 0x06127CC0>) , Command count = 4230 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF90>, <py_sfcl.CommandDataDefinition object at 0x061BC5D0>) , Command count = 4231 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C450>, <py_sfcl.CommandDataDefinition object at 0x061BC630>) , Command count = 4232 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C90>, <py_sfcl.CommandDataDefinition object at 0x061BC690>) , Command count = 4233 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119BD0>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 4234 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A50>, <py_sfcl.CommandDataDefinition object at 0x06127360>) , Command count = 4235 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061277E0>, <py_sfcl.CommandDataDefinition object at 0x061BC6F0>) , Command count = 4236 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1A80>, <py_sfcl.CommandDataDefinition object at 0x06127E40>) , Command count = 4237 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x061BC750>) , Command count = 4238 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A7E0>, <py_sfcl.CommandDataDefinition object at 0x061BC7B0>) , Command count = 4239 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127150>, <py_sfcl.CommandDataDefinition object at 0x061BC810>) , Command count = 4240 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127EA0>, <py_sfcl.CommandDataDefinition object at 0x061BC870>) , Command count = 4241 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127900>, <py_sfcl.CommandDataDefinition object at 0x061198D0>) , Command count = 4242 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x061BC900>) , Command count = 4243 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111AE0>, <py_sfcl.CommandDataDefinition object at 0x061BC960>) , Command count = 4244 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127DE0>, <py_sfcl.CommandDataDefinition object at 0x061BC9C0>) , Command count = 4245 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E10>, <py_sfcl.CommandDataDefinition object at 0x061111E0>) , Command count = 4246 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119CC0>, <py_sfcl.CommandDataDefinition object at 0x0611EED0>) , Command count = 4247 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C30>, <py_sfcl.CommandDataDefinition object at 0x061BCA20>) , Command count = 4248 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E360>, <py_sfcl.CommandDataDefinition object at 0x06127ED0>) , Command count = 4249 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x061BCA80>) , Command count = 4250 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CC0>, <py_sfcl.CommandDataDefinition object at 0x061BCAE0>) , Command count = 4251 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E6F0>, <py_sfcl.CommandDataDefinition object at 0x061271E0>) , Command count = 4252 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E2A0>, <py_sfcl.CommandDataDefinition object at 0x06119C30>) , Command count = 4253 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EB70>, <py_sfcl.CommandDataDefinition object at 0x061BCB40>) , Command count = 4254 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC30>, <py_sfcl.CommandDataDefinition object at 0x0611E990>) , Command count = 4255 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E5A0>, <py_sfcl.CommandDataDefinition object at 0x061BCBA0>) , Command count = 4256 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x061BCC00>) , Command count = 4257 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x061BCC60>) , Command count = 4258 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F30>, <py_sfcl.CommandDataDefinition object at 0x061BCCC0>) , Command count = 4259 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127420>, <py_sfcl.CommandDataDefinition object at 0x0611E450>) , Command count = 4260 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E4B0>, <py_sfcl.CommandDataDefinition object at 0x061BCD50>) , Command count = 4261 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E8A0>, <py_sfcl.CommandDataDefinition object at 0x061BCDB0>) , Command count = 4262 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EB70>, <py_sfcl.CommandDataDefinition object at 0x061BCE10>) , Command count = 4263 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E5D0>, <py_sfcl.CommandDataDefinition object at 0x0610EA80>) , Command count = 4264 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7B0>, <py_sfcl.CommandDataDefinition object at 0x0611E840>) , Command count = 4265 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF90>, <py_sfcl.CommandDataDefinition object at 0x061BCE70>) , Command count = 4266 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E600>, <py_sfcl.CommandDataDefinition object at 0x0610EAE0>) , Command count = 4267 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EA20>, <py_sfcl.CommandDataDefinition object at 0x061BCED0>) , Command count = 4268 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E570>, <py_sfcl.CommandDataDefinition object at 0x061BCF30>) , Command count = 4269 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E510>, <py_sfcl.CommandDataDefinition object at 0x061BCF90>) , Command count = 4270 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F30>, <py_sfcl.CommandDataDefinition object at 0x061BA030>) , Command count = 4271 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127A50>, <py_sfcl.CommandDataDefinition object at 0x06127840>) , Command count = 4272 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E750>, <py_sfcl.CommandDataDefinition object at 0x061BA0C0>) , Command count = 4273 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061196C0>, <py_sfcl.CommandDataDefinition object at 0x061BA120>) , Command count = 4274 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111AB0>, <py_sfcl.CommandDataDefinition object at 0x061BA180>) , Command count = 4275 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061278D0>, <py_sfcl.CommandDataDefinition object at 0x0611ED50>) , Command count = 4276 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Prg']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBD0>, <py_sfcl.CommandDataDefinition object at 0x0610E5D0>) , Command count = 4277 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ECC0>, <py_sfcl.CommandDataDefinition object at 0x061BA1E0>) , Command count = 4278 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8AE0>, <py_sfcl.CommandDataDefinition object at 0x061B8960>) , Command count = 4279 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:55: [ SetBusWidth(0x4) , Command count = 4280 ] 
15:10:55: VS_Flag========================1
15:10:55: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:55: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4281 ] 
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:55: Host Frequency set to 78515 KHz

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:55: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4282 ] 
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111780>, <py_sfcl.CommandDataDefinition object at 0x0610E660>) , Command count = 4283 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118D0>, <py_sfcl.CommandDataDefinition object at 0x061BA2A0>) , Command count = 4284 ] 
15:10:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E6F0>, <py_sfcl.CommandDataDefinition object at 0x061BA240>) , Command count = 4285 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061274E0>, <py_sfcl.CommandDataDefinition object at 0x06119960>) , Command count = 4286 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E840>, <py_sfcl.CommandDataDefinition object at 0x061BA300>) , Command count = 4287 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EE70>, <py_sfcl.CommandDataDefinition object at 0x0610EF00>) , Command count = 4288 ] 
15:10:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119750>, <py_sfcl.CommandDataDefinition object at 0x0610E9F0>) , Command count = 4289 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119450>, <py_sfcl.CommandDataDefinition object at 0x0610E690>) , Command count = 4290 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F60>, <py_sfcl.CommandDataDefinition object at 0x0610EEA0>) , Command count = 4291 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA3C0>, <py_sfcl.CommandDataDefinition object at 0x061BA3F0>) , Command count = 4292 ] 
15:10:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119810>, <py_sfcl.CommandDataDefinition object at 0x061BA450>) , Command count = 4293 ] 
15:10:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:55: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:10:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4294 ] 
15:10:55: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:55: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:55: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:55: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:55: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:55: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119300>, <py_sfcl.CommandDataDefinition object at 0x0610ED80>) , Command count = 4295 ] 
15:10:55: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED20>, <py_sfcl.CommandDataDefinition object at 0x0610E810>) , Command count = 4296 ] 
15:10:55: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:10:55: [ SetCardRCA(0x1, 0xD555) , Command count = 4297 ] 
15:10:56: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F90>, <py_sfcl.CommandDataDefinition object at 0x0611E960>) , Command count = 4298 ] 
15:10:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:56: [ SetBusWidth(0x4) , Command count = 4299 ] 
15:10:56: VS_Flag========================1
15:10:56: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:56: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4300 ] 
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:56: Host Frequency set to 94567 KHz

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:10:56: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4301 ] 
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:10:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:10:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:10:56: ####CSD Registe 2.0 Values####
15:10:56: CSD_STRUCTURE                                 :0x1
15:10:56: Reserv1                                       :0x0
15:10:56: Time Access 1 TAAC                            :0xe
15:10:56: Time Access 2 NSAC*100                        :0x0
15:10:56: Data Transfer Rate TRAN_SPEED                 :0xb
15:10:56: Card Command Classess CCC                     :0x5b5
15:10:56: Max Read Data Block Length  READ_BL_LEN       :0x9
15:10:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:10:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:10:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:10:56: DSR(driver stage register)  DSR_IMP           :0x0
15:10:56: Reserv2                                       :0x0
15:10:56: Device Size C_SIZE                            :0xedc8
15:10:56: Reserv3                                       :0x0
15:10:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:10:56: Erase Sector Size SECTOR_SIZE                 :0x7f
15:10:56: Write Protect Group Size WP_GRP_SIZE          :0x0
15:10:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:10:56: Reserv4                                       :0x0
15:10:56: Write Speed Factor R2W_FACTOR                 :0x2
15:10:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:10:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:10:56: FILE_FORMAT_GRP                               :0x0
15:10:56: COPY flag                                     :0x1
15:10:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:10:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:10:56: File_Format                                   :0x0
15:10:56: CRC                                           :0x0
15:10:56: ####CSD Registe Values####  

15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC00>, <py_sfcl.CommandDataDefinition object at 0x061BA570>) , Command count = 4302 ] 
15:10:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E390>, <py_sfcl.CommandDataDefinition object at 0x0610EDE0>) , Command count = 4303 ] 
15:10:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111DE0>, <py_sfcl.CommandDataDefinition object at 0x061BA510>) , Command count = 4304 ] 
15:10:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA450>, <py_sfcl.CommandDataDefinition object at 0x061BA5A0>) , Command count = 4305 ] 
15:10:56: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E7E0>, <py_sfcl.CommandDataDefinition object at 0x061BA600>) , Command count = 4306 ] 
15:10:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC60>, <py_sfcl.CommandDataDefinition object at 0x061B80F0>) , Command count = 4307 ] 
15:10:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:10:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:10:56: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:10:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4308 ] 
15:10:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:10:56: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:10:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:10:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:10:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:10:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7B0>, <py_sfcl.CommandDataDefinition object at 0x061B80C0>) , Command count = 4309 ] 
15:10:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197E0>, <py_sfcl.CommandDataDefinition object at 0x0610EE40>) , Command count = 4310 ] 
15:10:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:10:56: [ SetCardRCA(0x1, 0xD555) , Command count = 4311 ] 
15:10:56: [DVTCommonLib]### Identification :Idenfication of card completed 

15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B82A0>, <py_sfcl.CommandDataDefinition object at 0x0610EA50>) , Command count = 4312 ] 
15:10:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:10:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:10:56: [ SetBusWidth(0x4) , Command count = 4313 ] 
15:10:56: [ GetCardStatus() , Command count = 4314 ] 
15:10:56: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:10:56: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:10:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:10:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195A0>, <py_sfcl.CommandDataDefinition object at 0x061BA600>) , Command count = 4315 ] 
15:10:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ECC0>, <py_sfcl.CommandDataDefinition object at 0x0610ED50>) , Command count = 4316 ] 
15:11:07: [ GetCardStatus() , Command count = 4317 ] 
15:11:07: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF60>, <py_sfcl.CommandDataDefinition object at 0x0611EE70>) , Command count = 4318 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x06123360>) , Command count = 4319 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED50>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 4320 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:07: [ SetBusWidth(0x4) , Command count = 4321 ] 
15:11:07: VS_Flag========================1
15:11:07: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:07: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4322 ] 
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:07: Host Frequency set to 90806 KHz

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:07: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4323 ] 
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:07: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C2A0>, <py_sfcl.CommandDataDefinition object at 0x06119210>) , Command count = 4324 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8480>, <py_sfcl.CommandDataDefinition object at 0x061198A0>) , Command count = 4325 ] 
15:11:07: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x061B85A0>) , Command count = 4326 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127570>, <py_sfcl.CommandDataDefinition object at 0x061B8450>) , Command count = 4327 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E810>, <py_sfcl.CommandDataDefinition object at 0x0610ECC0>) , Command count = 4328 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA6F0>, <py_sfcl.CommandDataDefinition object at 0x061BA720>) , Command count = 4329 ] 
15:11:07: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AFC0>, <py_sfcl.CommandDataDefinition object at 0x06119E70>) , Command count = 4330 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:07: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:11:07: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4331 ] 
15:11:07: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:11:07: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:07: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:07: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:07: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:07: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBA0>, <py_sfcl.CommandDataDefinition object at 0x061B8240>) , Command count = 4332 ] 
15:11:07: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EEA0>, <py_sfcl.CommandDataDefinition object at 0x061B85D0>) , Command count = 4333 ] 
15:11:07: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:11:07: [ SetCardRCA(0x1, 0xD555) , Command count = 4334 ] 
15:11:07: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8270>, <py_sfcl.CommandDataDefinition object at 0x061BA7B0>) , Command count = 4335 ] 
15:11:07: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:07: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:07: [ SetBusWidth(0x4) , Command count = 4336 ] 
15:11:07: [ GetCardStatus() , Command count = 4337 ] 
15:11:07: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:07: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:07: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py_sfcl.CommandDataDefinition object at 0x061B8780>) , Command count = 4338 ] 
15:11:07: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA840>, <py_sfcl.CommandDataDefinition object at 0x061BA870>) , Command count = 4339 ] 
15:11:18: [ GetCardStatus() , Command count = 4340 ] 
15:11:18: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E900>, <py_sfcl.CommandDataDefinition object at 0x060C1510>) , Command count = 4341 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA80>, <py_sfcl.CommandDataDefinition object at 0x061B8900>) , Command count = 4342 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191E0>, <py_sfcl.CommandDataDefinition object at 0x061BA870>) , Command count = 4343 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:18: [ SetBusWidth(0x4) , Command count = 4344 ] 
15:11:18: VS_Flag========================1
15:11:18: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:18: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4345 ] 
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:18: Host Frequency set to 81531 KHz

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4346 ] 
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF60>, <py_sfcl.CommandDataDefinition object at 0x061B8D20>) , Command count = 4347 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8B70>, <py_sfcl.CommandDataDefinition object at 0x061B8420>) , Command count = 4348 ] 
15:11:18: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8810>) , Command count = 4349 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC60>, <py_sfcl.CommandDataDefinition object at 0x061B8930>) , Command count = 4350 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8990>, <py_sfcl.CommandDataDefinition object at 0x061B8ED0>) , Command count = 4351 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8120>, <py_sfcl.CommandDataDefinition object at 0x06123390>) , Command count = 4352 ] 
15:11:18: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x061BA960>) , Command count = 4353 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528A9F0>, <py_sfcl.CommandDataDefinition object at 0x06100090>) , Command count = 4354 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1BD0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 4355 ] 
15:11:18: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061190C0>, <py_sfcl.CommandDataDefinition object at 0x061231B0>) , Command count = 4356 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05172060>, <py_sfcl.CommandDataDefinition object at 0x060C1C30>) , Command count = 4357 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:18: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:11:18: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4358 ] 
15:11:18: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:11:18: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:18: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:18: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:18: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:18: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E330>, <py_sfcl.CommandDataDefinition object at 0x061B8BA0>) , Command count = 4359 ] 
15:11:18: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x061BA9F0>) , Command count = 4360 ] 
15:11:18: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:11:18: [ SetCardRCA(0x1, 0xD555) , Command count = 4361 ] 
15:11:18: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119FC0>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 4362 ] 
15:11:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:18: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:18: [ SetBusWidth(0x4) , Command count = 4363 ] 
15:11:18: VS_Flag========================1
15:11:18: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:18: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4364 ] 
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:18: Host Frequency set to 92847 KHz

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:18: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4365 ] 
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:18: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:18: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:11:18: ####CSD Registe 2.0 Values####
15:11:18: CSD_STRUCTURE                                 :0x1
15:11:18: Reserv1                                       :0x0
15:11:18: Time Access 1 TAAC                            :0xe
15:11:18: Time Access 2 NSAC*100                        :0x0
15:11:18: Data Transfer Rate TRAN_SPEED                 :0xb
15:11:18: Card Command Classess CCC                     :0x5b5
15:11:18: Max Read Data Block Length  READ_BL_LEN       :0x9
15:11:18: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:11:18: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:11:18: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:11:18: DSR(driver stage register)  DSR_IMP           :0x0
15:11:18: Reserv2                                       :0x0
15:11:18: Device Size C_SIZE                            :0xedc8
15:11:18: Reserv3                                       :0x0
15:11:18: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:11:18: Erase Sector Size SECTOR_SIZE                 :0x7f
15:11:18: Write Protect Group Size WP_GRP_SIZE          :0x0
15:11:18: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:11:18: Reserv4                                       :0x0
15:11:18: Write Speed Factor R2W_FACTOR                 :0x2
15:11:18: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:11:18: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:11:18: FILE_FORMAT_GRP                               :0x0
15:11:18: COPY flag                                     :0x1
15:11:18: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:11:18: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:11:18: File_Format                                   :0x0
15:11:18: CRC                                           :0x0
15:11:18: ####CSD Registe Values####  

15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1960>, <py_sfcl.CommandDataDefinition object at 0x061B8870>) , Command count = 4366 ] 
15:11:18: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:18: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285960>, <py_sfcl.CommandDataDefinition object at 0x061235A0>) , Command count = 4367 ] 
15:11:18: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:18: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:20: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:21: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4368 ] 
15:11:21: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:21: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:21: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:21: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:21: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:21: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4369 ] 
15:11:21: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:21: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197B0>, <py_sfcl.CommandDataDefinition object at 0x061239C0>) , Command count = 4370 ] 
15:11:21: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C60>, <py_sfcl.CommandDataDefinition object at 0x0601A300>) , Command count = 4371 ] 
15:11:21: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:21: [ SetCardRCA(0x1, 0xD555) , Command count = 4372 ] 
15:11:21: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111B40>, <py_sfcl.CommandDataDefinition object at 0x06123030>) , Command count = 4373 ] 
15:11:21: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:21: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:21: [ SetBusWidth(0x4) , Command count = 4374 ] 
15:11:21: [ GetCardStatus() , Command count = 4375 ] 
15:11:21: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:21: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:21: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:21: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py_sfcl.CommandDataDefinition object at 0x06111FC0>) , Command count = 4376 ] 
15:11:21: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123CC0>, <py_sfcl.CommandDataDefinition object at 0x06123B40>) , Command count = 4377 ] 
15:11:31: [ GetCardStatus() , Command count = 4378 ] 
15:11:31: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:11:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123270>, <py_sfcl.CommandDataDefinition object at 0x06111F00>) , Command count = 4379 ] 
15:11:31: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061110C0>, <py_sfcl.CommandDataDefinition object at 0x061B8E10>) , Command count = 4380 ] 
15:11:31: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:31: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:11:31: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123B40>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 4381 ] 
15:11:31: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:31: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:31: [ SetBusWidth(0x4) , Command count = 4382 ] 
15:11:31: VS_Flag========================1
15:11:31: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:31: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4383 ] 
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:31: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:32: Host Frequency set to 79569 KHz

15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:32: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4384 ] 
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:32: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100540>, <py_sfcl.CommandDataDefinition object at 0x06123150>) , Command count = 4385 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233C0>, <py_sfcl.CommandDataDefinition object at 0x06123600>) , Command count = 4386 ] 
15:11:32: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111240>, <py_sfcl.CommandDataDefinition object at 0x06123960>) , Command count = 4387 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111750>, <py_sfcl.CommandDataDefinition object at 0x0611EDB0>) , Command count = 4388 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119990>, <py_sfcl.CommandDataDefinition object at 0x061230F0>) , Command count = 4389 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123BD0>, <py_sfcl.CommandDataDefinition object at 0x06123E10>) , Command count = 4390 ] 
15:11:32: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06123B70>) , Command count = 4391 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005A0>, <py_sfcl.CommandDataDefinition object at 0x0527CF90>) , Command count = 4392 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123F30>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 4393 ] 
15:11:32: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:32: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119480>, <py_sfcl.CommandDataDefinition object at 0x06123240>) , Command count = 4394 ] 
15:11:32: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:34: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:34: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4395 ] 
15:11:34: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:34: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:34: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:34: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:34: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:34: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4396 ] 
15:11:34: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:34: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x0601A510>) , Command count = 4397 ] 
15:11:34: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py_sfcl.CommandDataDefinition object at 0x06137060>) , Command count = 4398 ] 
15:11:34: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:34: [ SetCardRCA(0x1, 0xD555) , Command count = 4399 ] 
15:11:34: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111A20>, <py_sfcl.CommandDataDefinition object at 0x06137090>) , Command count = 4400 ] 
15:11:34: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:34: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:34: [ SetBusWidth(0x4) , Command count = 4401 ] 
15:11:34: [ GetCardStatus() , Command count = 4402 ] 
15:11:34: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:34: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:34: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:34: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1540>, <py_sfcl.CommandDataDefinition object at 0x06137150>) , Command count = 4403 ] 
15:11:34: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061371B0>, <py_sfcl.CommandDataDefinition object at 0x061370F0>) , Command count = 4404 ] 
15:11:45: [ GetCardStatus() , Command count = 4405 ] 
15:11:45: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F90>, <py_sfcl.CommandDataDefinition object at 0x06127810>) , Command count = 4406 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x06137210>) , Command count = 4407 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127060>, <py_sfcl.CommandDataDefinition object at 0x06119F30>) , Command count = 4408 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:45: [ SetBusWidth(0x4) , Command count = 4409 ] 
15:11:45: VS_Flag========================1
15:11:45: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:45: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4410 ] 
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:45: Host Frequency set to 87458 KHz

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:45: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4411 ] 
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:45: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061113C0>, <py_sfcl.CommandDataDefinition object at 0x06100570>) , Command count = 4412 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111C90>, <py_sfcl.CommandDataDefinition object at 0x06137450>) , Command count = 4413 ] 
15:11:45: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111B0>, <py_sfcl.CommandDataDefinition object at 0x06137420>) , Command count = 4414 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285FC0>, <py_sfcl.CommandDataDefinition object at 0x061112A0>) , Command count = 4415 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100120>, <py_sfcl.CommandDataDefinition object at 0x061374E0>) , Command count = 4416 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06137540>, <py_sfcl.CommandDataDefinition object at 0x06137510>) , Command count = 4417 ] 
15:11:45: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D20>, <py_sfcl.CommandDataDefinition object at 0x0528AF30>) , Command count = 4418 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127A20>, <py_sfcl.CommandDataDefinition object at 0x0527C270>) , Command count = 4419 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111480>, <py_sfcl.CommandDataDefinition object at 0x061375A0>) , Command count = 4420 ] 
15:11:45: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A690>, <py_sfcl.CommandDataDefinition object at 0x05177EA0>) , Command count = 4421 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127B70>, <py_sfcl.CommandDataDefinition object at 0x06127A80>) , Command count = 4422 ] 
15:11:45: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:45: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:47: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:47: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4423 ] 
15:11:47: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:47: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:47: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:47: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:47: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:47: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4424 ] 
15:11:47: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:47: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E120>, <py_sfcl.CommandDataDefinition object at 0x06137720>) , Command count = 4425 ] 
15:11:47: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC90>, <py_sfcl.CommandDataDefinition object at 0x06137780>) , Command count = 4426 ] 
15:11:47: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:47: [ SetCardRCA(0x1, 0xD555) , Command count = 4427 ] 
15:11:47: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F90>, <py_sfcl.CommandDataDefinition object at 0x061273F0>) , Command count = 4428 ] 
15:11:47: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:47: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:47: [ SetBusWidth(0x4) , Command count = 4429 ] 
15:11:47: VS_Flag========================1
15:11:47: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:47: [ CardSwitchCmd(True, [0x2, 0xF, 0x0, 0x1, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4430 ] 
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250 mA', 'SDR50 SWITCHED', '400mA SWITCHED']
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:47: Host Frequency set to 82953 KHz

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:47: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4431 ] 
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:250', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 250
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x2 and Response Value : 0x2
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:47: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:47: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 11, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:11:47: ####CSD Registe 2.0 Values####
15:11:47: CSD_STRUCTURE                                 :0x1
15:11:47: Reserv1                                       :0x0
15:11:47: Time Access 1 TAAC                            :0xe
15:11:47: Time Access 2 NSAC*100                        :0x0
15:11:47: Data Transfer Rate TRAN_SPEED                 :0xb
15:11:47: Card Command Classess CCC                     :0x5b5
15:11:47: Max Read Data Block Length  READ_BL_LEN       :0x9
15:11:47: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:11:47: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:11:47: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:11:47: DSR(driver stage register)  DSR_IMP           :0x0
15:11:47: Reserv2                                       :0x0
15:11:47: Device Size C_SIZE                            :0xedc8
15:11:47: Reserv3                                       :0x0
15:11:47: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:11:47: Erase Sector Size SECTOR_SIZE                 :0x7f
15:11:47: Write Protect Group Size WP_GRP_SIZE          :0x0
15:11:47: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:11:47: Reserv4                                       :0x0
15:11:47: Write Speed Factor R2W_FACTOR                 :0x2
15:11:47: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:11:47: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:11:47: FILE_FORMAT_GRP                               :0x0
15:11:47: COPY flag                                     :0x1
15:11:47: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:11:47: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:11:47: File_Format                                   :0x0
15:11:47: CRC                                           :0x0
15:11:47: ####CSD Registe Values####  

15:11:47: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002D0>, <py_sfcl.CommandDataDefinition object at 0x06127450>) , Command count = 4432 ] 
15:11:47: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:49: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:50: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4433 ] 
15:11:50: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:50: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:50: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:50: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:50: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:50: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4434 ] 
15:11:50: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:50: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111180>, <py_sfcl.CommandDataDefinition object at 0x06111210>) , Command count = 4435 ] 
15:11:50: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127E70>, <py_sfcl.CommandDataDefinition object at 0x061270F0>) , Command count = 4436 ] 
15:11:50: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:50: [ SetCardRCA(0x1, 0xD555) , Command count = 4437 ] 
15:11:50: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111BD0>, <py_sfcl.CommandDataDefinition object at 0x060C1690>) , Command count = 4438 ] 
15:11:50: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:50: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:50: [ SetBusWidth(0x4) , Command count = 4439 ] 
15:11:50: VS_Flag========================1
15:11:50: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:50: [ CardSwitchCmd(True, [0x1, 0xF, 0x0, 0x0, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4440 ] 
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR25/HIGH SPEED SWITCHED', '200mA SWITCHED']
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:50: Host Frequency set to 27216 KHz

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:50: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4441 ] 
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:50: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:50: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 90, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:11:50: ####CSD Registe 2.0 Values####
15:11:50: CSD_STRUCTURE                                 :0x1
15:11:50: Reserv1                                       :0x0
15:11:50: Time Access 1 TAAC                            :0xe
15:11:50: Time Access 2 NSAC*100                        :0x0
15:11:50: Data Transfer Rate TRAN_SPEED                 :0x5a
15:11:50: Card Command Classess CCC                     :0x5b5
15:11:50: Max Read Data Block Length  READ_BL_LEN       :0x9
15:11:50: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:11:50: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:11:50: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:11:50: DSR(driver stage register)  DSR_IMP           :0x0
15:11:50: Reserv2                                       :0x0
15:11:50: Device Size C_SIZE                            :0xedc8
15:11:50: Reserv3                                       :0x0
15:11:50: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:11:50: Erase Sector Size SECTOR_SIZE                 :0x7f
15:11:50: Write Protect Group Size WP_GRP_SIZE          :0x0
15:11:50: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:11:50: Reserv4                                       :0x0
15:11:50: Write Speed Factor R2W_FACTOR                 :0x2
15:11:50: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:11:50: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:11:50: FILE_FORMAT_GRP                               :0x0
15:11:50: COPY flag                                     :0x1
15:11:50: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:11:50: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:11:50: File_Format                                   :0x0
15:11:50: CRC                                           :0x0
15:11:50: ####CSD Registe Values####  

15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C00>, <py_sfcl.CommandDataDefinition object at 0x06137AB0>) , Command count = 4442 ] 
15:11:50: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E900>, <py_sfcl.CommandDataDefinition object at 0x06111720>) , Command count = 4443 ] 
15:11:50: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127BA0>, <py_sfcl.CommandDataDefinition object at 0x06137BD0>) , Command count = 4444 ] 
15:11:50: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127210>, <py_sfcl.CommandDataDefinition object at 0x06111B70>) , Command count = 4445 ] 
15:11:50: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:50: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127C60>, <py_sfcl.CommandDataDefinition object at 0x06111D50>) , Command count = 4446 ] 
15:11:50: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:50: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:52: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:52: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4447 ] 
15:11:52: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:52: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:52: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:52: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:52: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:52: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:52: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4448 ] 
15:11:52: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:52: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E420>, <py_sfcl.CommandDataDefinition object at 0x06137CC0>) , Command count = 4449 ] 
15:11:52: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1990>, <py_sfcl.CommandDataDefinition object at 0x06137D20>) , Command count = 4450 ] 
15:11:52: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:52: [ SetCardRCA(0x1, 0xD555) , Command count = 4451 ] 
15:11:52: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061278A0>, <py_sfcl.CommandDataDefinition object at 0x060C1570>) , Command count = 4452 ] 
15:11:52: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:52: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:52: [ SetBusWidth(0x4) , Command count = 4453 ] 
15:11:52: [ GetCardStatus() , Command count = 4454 ] 
15:11:52: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:52: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:52: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061274B0>, <py_sfcl.CommandDataDefinition object at 0x06127AB0>) , Command count = 4455 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1750>, <py_sfcl.CommandDataDefinition object at 0x06111810>) , Command count = 4456 ] 
15:11:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061004B0>, <py_sfcl.CommandDataDefinition object at 0x06111B10>) , Command count = 4457 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:52: [ SetBusWidth(0x4) , Command count = 4458 ] 
15:11:52: VS_Flag========================1
15:11:52: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:52: [ CardSwitchCmd(True, [0x1, 0xF, 0x0, 0x0, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4459 ] 
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR25/HIGH SPEED SWITCHED', '200mA SWITCHED']
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:52: Host Frequency set to 46653 KHz

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:52: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4460 ] 
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:52: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119660>, <py_sfcl.CommandDataDefinition object at 0x06119510>) , Command count = 4461 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111120>, <py_sfcl.CommandDataDefinition object at 0x061BC090>) , Command count = 4462 ] 
15:11:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127930>, <py_sfcl.CommandDataDefinition object at 0x06119330>) , Command count = 4463 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119540>, <py_sfcl.CommandDataDefinition object at 0x06127E10>) , Command count = 4464 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E480>, <py_sfcl.CommandDataDefinition object at 0x061BC180>) , Command count = 4465 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F60>, <py_sfcl.CommandDataDefinition object at 0x061BC1E0>) , Command count = 4466 ] 
15:11:52: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:52: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118A0>, <py_sfcl.CommandDataDefinition object at 0x06127DB0>) , Command count = 4467 ] 
15:11:52: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:54: [DVTCommonLib]### Reset the card with OCR value : 0x41FF8000
15:11:55: [ CardReset(py_sfcl.CARD_MODE.SD, 0x41FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4468 ] 
15:11:55: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC1FF8000
15:11:55: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:55: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:55: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:55: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:55: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 called 
15:11:55: [ SwitchVolt_CMD11(True, 0x0, 0x5) , Command count = 4469 ] 
15:11:55: [DVTCommonLib]### SwitchVolt_CMD11 :SwitchVolt_CMD11 Completed
15:11:55: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061116C0>, <py_sfcl.CommandDataDefinition object at 0x0611E1B0>) , Command count = 4470 ] 
15:11:55: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111EA0>, <py_sfcl.CommandDataDefinition object at 0x06127AE0>) , Command count = 4471 ] 
15:11:55: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 0, 12]
15:11:55: [ SetCardRCA(0x1, 0xD555) , Command count = 4472 ] 
15:11:55: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061112D0>, <py_sfcl.CommandDataDefinition object at 0x061BC360>) , Command count = 4473 ] 
15:11:55: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:55: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:55: [ SetBusWidth(0x4) , Command count = 4474 ] 
15:11:55: [ GetCardStatus() , Command count = 4475 ] 
15:11:55: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:55: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:55: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F00>, <py_sfcl.CommandDataDefinition object at 0x0527C210>) , Command count = 4476 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BC4B0>, <py_sfcl.CommandDataDefinition object at 0x061BC540>) , Command count = 4477 ] 
15:11:55: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127720>, <py_sfcl.CommandDataDefinition object at 0x06127750>) , Command count = 4478 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119840>, <py_sfcl.CommandDataDefinition object at 0x061270C0>) , Command count = 4479 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111510>, <py_sfcl.CommandDataDefinition object at 0x06111C00>) , Command count = 4480 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061271B0>, <py_sfcl.CommandDataDefinition object at 0x061279F0>) , Command count = 4481 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127CC0>, <py_sfcl.CommandDataDefinition object at 0x06111300>) , Command count = 4482 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AF90>, <py_sfcl.CommandDataDefinition object at 0x061BC5D0>) , Command count = 4483 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C450>, <py_sfcl.CommandDataDefinition object at 0x061BC630>) , Command count = 4484 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127780>, <py_sfcl.CommandDataDefinition object at 0x06119C90>) , Command count = 4485 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119BD0>, <py_sfcl.CommandDataDefinition object at 0x06127540>) , Command count = 4486 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127360>, <py_sfcl.CommandDataDefinition object at 0x06111A50>) , Command count = 4487 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127180>, <py_sfcl.CommandDataDefinition object at 0x061277E0>) , Command count = 4488 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127E40>, <py_sfcl.CommandDataDefinition object at 0x060C1A80>) , Command count = 4489 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E060>, <py_sfcl.CommandDataDefinition object at 0x061BC750>) , Command count = 4490 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A7E0>, <py_sfcl.CommandDataDefinition object at 0x061BC7B0>) , Command count = 4491 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127150>, <py_sfcl.CommandDataDefinition object at 0x061BC810>) , Command count = 4492 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127EA0>, <py_sfcl.CommandDataDefinition object at 0x061BC870>) , Command count = 4493 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061198D0>, <py_sfcl.CommandDataDefinition object at 0x06127900>) , Command count = 4494 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111090>, <py_sfcl.CommandDataDefinition object at 0x061BC900>) , Command count = 4495 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111AE0>, <py_sfcl.CommandDataDefinition object at 0x061BC960>) , Command count = 4496 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061273C0>, <py_sfcl.CommandDataDefinition object at 0x06127DE0>) , Command count = 4497 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061111E0>, <py_sfcl.CommandDataDefinition object at 0x06111E10>) , Command count = 4498 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EED0>, <py_sfcl.CommandDataDefinition object at 0x06119CC0>) , Command count = 4499 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127690>, <py_sfcl.CommandDataDefinition object at 0x06127C30>) , Command count = 4500 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127ED0>, <py_sfcl.CommandDataDefinition object at 0x0611E360>) , Command count = 4501 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111CF0>, <py_sfcl.CommandDataDefinition object at 0x061BCA80>) , Command count = 4502 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061275D0>, <py_sfcl.CommandDataDefinition object at 0x06111CC0>) , Command count = 4503 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E6F0>, <py_sfcl.CommandDataDefinition object at 0x061271E0>) , Command count = 4504 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119C30>, <py_sfcl.CommandDataDefinition object at 0x0611E2A0>) , Command count = 4505 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127630>, <py_sfcl.CommandDataDefinition object at 0x0610EB70>) , Command count = 4506 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E990>, <py_sfcl.CommandDataDefinition object at 0x0610EC30>) , Command count = 4507 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E5A0>, <py_sfcl.CommandDataDefinition object at 0x061BCBA0>) , Command count = 4508 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061114B0>, <py_sfcl.CommandDataDefinition object at 0x061BCC00>) , Command count = 4509 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EED0>, <py_sfcl.CommandDataDefinition object at 0x061BCC60>) , Command count = 4510 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127F30>, <py_sfcl.CommandDataDefinition object at 0x061BCCC0>) , Command count = 4511 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E450>, <py_sfcl.CommandDataDefinition object at 0x06127420>) , Command count = 4512 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E4B0>, <py_sfcl.CommandDataDefinition object at 0x061BCD50>) , Command count = 4513 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E8A0>, <py_sfcl.CommandDataDefinition object at 0x061BCDB0>) , Command count = 4514 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127D50>, <py_sfcl.CommandDataDefinition object at 0x0611EB70>) , Command count = 4515 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EA80>, <py_sfcl.CommandDataDefinition object at 0x0611E5D0>) , Command count = 4516 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E840>, <py_sfcl.CommandDataDefinition object at 0x0610E7B0>) , Command count = 4517 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127B10>, <py_sfcl.CommandDataDefinition object at 0x0611EF90>) , Command count = 4518 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAE0>, <py_sfcl.CommandDataDefinition object at 0x0611E600>) , Command count = 4519 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EA20>, <py_sfcl.CommandDataDefinition object at 0x061BCED0>) , Command count = 4520 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E570>, <py_sfcl.CommandDataDefinition object at 0x061BCF30>) , Command count = 4521 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E510>, <py_sfcl.CommandDataDefinition object at 0x061BCF90>) , Command count = 4522 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F30>, <py_sfcl.CommandDataDefinition object at 0x061BC300>) , Command count = 4523 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127840>, <py_sfcl.CommandDataDefinition object at 0x06127A50>) , Command count = 4524 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E750>, <py_sfcl.CommandDataDefinition object at 0x061BC330>) , Command count = 4525 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061196C0>, <py_sfcl.CommandDataDefinition object at 0x061BC240>) , Command count = 4526 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E600>, <py_sfcl.CommandDataDefinition object at 0x06111AB0>) , Command count = 4527 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED50>, <py_sfcl.CommandDataDefinition object at 0x061278D0>) , Command count = 4528 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E5D0>, <py_sfcl.CommandDataDefinition object at 0x0611EBD0>) , Command count = 4529 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06127D20>, <py_sfcl.CommandDataDefinition object at 0x0611ECC0>) , Command count = 4530 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100210>, <py_sfcl.CommandDataDefinition object at 0x06137F90>) , Command count = 4531 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119090>, <py_sfcl.CommandDataDefinition object at 0x06137FC0>) , Command count = 4532 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061191B0>, <py_sfcl.CommandDataDefinition object at 0x06137E70>) , Command count = 4533 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF30>, <py_sfcl.CommandDataDefinition object at 0x06137EA0>) , Command count = 4534 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E660>, <py_sfcl.CommandDataDefinition object at 0x06111780>) , Command count = 4535 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061118D0>, <py_sfcl.CommandDataDefinition object at 0x06137C60>) , Command count = 4536 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E6F0>, <py_sfcl.CommandDataDefinition object at 0x06137C00>) , Command count = 4537 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119960>, <py_sfcl.CommandDataDefinition object at 0x061274E0>) , Command count = 4538 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E840>, <py_sfcl.CommandDataDefinition object at 0x06137A20>) , Command count = 4539 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EF00>, <py_sfcl.CommandDataDefinition object at 0x0610EE70>) , Command count = 4540 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E9F0>, <py_sfcl.CommandDataDefinition object at 0x06119750>) , Command count = 4541 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E690>, <py_sfcl.CommandDataDefinition object at 0x06119450>) , Command count = 4542 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EEA0>, <py_sfcl.CommandDataDefinition object at 0x06119F60>) , Command count = 4543 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06137990>, <py_sfcl.CommandDataDefinition object at 0x061379F0>) , Command count = 4544 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E8A0>, <py_sfcl.CommandDataDefinition object at 0x06137930>) , Command count = 4545 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E930>, <py_sfcl.CommandDataDefinition object at 0x06119810>) , Command count = 4546 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED80>, <py_sfcl.CommandDataDefinition object at 0x06119300>) , Command count = 4547 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119ED0>, <py_sfcl.CommandDataDefinition object at 0x061378A0>) , Command count = 4548 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E810>, <py_sfcl.CommandDataDefinition object at 0x0610ED20>) , Command count = 4549 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111E70>, <py_sfcl.CommandDataDefinition object at 0x06137870>) , Command count = 4550 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E720>, <py_sfcl.CommandDataDefinition object at 0x061376C0>) , Command count = 4551 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119060>, <py_sfcl.CommandDataDefinition object at 0x06137660>) , Command count = 4552 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E960>, <py_sfcl.CommandDataDefinition object at 0x06119F90>) , Command count = 4553 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EC00>, <py_sfcl.CommandDataDefinition object at 0x06137330>) , Command count = 4554 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EDE0>, <py_sfcl.CommandDataDefinition object at 0x0611E390>) , Command count = 4555 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111DE0>, <py_sfcl.CommandDataDefinition object at 0x06137270>) , Command count = 4556 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061372A0>, <py_sfcl.CommandDataDefinition object at 0x061371B0>) , Command count = 4557 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233F0>, <py_sfcl.CommandDataDefinition object at 0x0610E7E0>) , Command count = 4558 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111D80>, <py_sfcl.CommandDataDefinition object at 0x061B8060>) , Command count = 4559 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EAB0>, <py_sfcl.CommandDataDefinition object at 0x0611EC60>) , Command count = 4560 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EDB0>, <py_sfcl.CommandDataDefinition object at 0x0611E7B0>) , Command count = 4561 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED80>, <py_sfcl.CommandDataDefinition object at 0x061B8960>) , Command count = 4562 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EE40>, <py_sfcl.CommandDataDefinition object at 0x061197E0>) , Command count = 4563 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119360>, <py_sfcl.CommandDataDefinition object at 0x061B8B40>) , Command count = 4564 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EF00>, <py_sfcl.CommandDataDefinition object at 0x061B8C60>) , Command count = 4565 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EA50>, <py_sfcl.CommandDataDefinition object at 0x061B82A0>) , Command count = 4566 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B82D0>, <py_sfcl.CommandDataDefinition object at 0x061B8390>) , Command count = 4567 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E150>, <py_sfcl.CommandDataDefinition object at 0x061B84B0>) , Command count = 4568 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061238A0>, <py_sfcl.CommandDataDefinition object at 0x06119240>) , Command count = 4569 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EE70>, <py_sfcl.CommandDataDefinition object at 0x0610EF60>) , Command count = 4570 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061193F0>, <py_sfcl.CommandDataDefinition object at 0x061B8180>) , Command count = 4571 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119AE0>, <py_sfcl.CommandDataDefinition object at 0x061B8BD0>) , Command count = 4572 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119900>, <py_sfcl.CommandDataDefinition object at 0x061B8A50>) , Command count = 4573 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ECF0>, <py_sfcl.CommandDataDefinition object at 0x061B8EA0>) , Command count = 4574 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E240>, <py_sfcl.CommandDataDefinition object at 0x06123BA0>) , Command count = 4575 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119210>, <py_sfcl.CommandDataDefinition object at 0x0527C2A0>) , Command count = 4576 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ED50>, <py_sfcl.CommandDataDefinition object at 0x061198A0>) , Command count = 4577 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119D50>, <py_sfcl.CommandDataDefinition object at 0x061B85A0>) , Command count = 4578 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610E8D0>, <py_sfcl.CommandDataDefinition object at 0x06127570>) , Command count = 4579 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610ECC0>, <py_sfcl.CommandDataDefinition object at 0x0611E810>) , Command count = 4580 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8B10>, <py_sfcl.CommandDataDefinition object at 0x061B8600>) , Command count = 4581 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E9C0>, <py_sfcl.CommandDataDefinition object at 0x061B87E0>) , Command count = 4582 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E70>, <py_sfcl.CommandDataDefinition object at 0x0528AFC0>) , Command count = 4583 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EBA0>, <py_sfcl.CommandDataDefinition object at 0x061B8240>) , Command count = 4584 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8840>, <py_sfcl.CommandDataDefinition object at 0x061B8C30>) , Command count = 4585 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B85D0>, <py_sfcl.CommandDataDefinition object at 0x0611EEA0>) , Command count = 4586 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8300>, <py_sfcl.CommandDataDefinition object at 0x061BA6F0>) , Command count = 4587 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E3F0>, <py_sfcl.CommandDataDefinition object at 0x061BA750>) , Command count = 4588 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8270>, <py_sfcl.CommandDataDefinition object at 0x061BA7B0>) , Command count = 4589 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA450>, <py_sfcl.CommandDataDefinition object at 0x061BA660>) , Command count = 4590 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611ED20>, <py_sfcl.CommandDataDefinition object at 0x061BA630>) , Command count = 4591 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B40>, <py_sfcl.CommandDataDefinition object at 0x0611E8D0>) , Command count = 4592 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1510>, <py_sfcl.CommandDataDefinition object at 0x0610E900>) , Command count = 4593 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8900>, <py_sfcl.CommandDataDefinition object at 0x0528AA80>) , Command count = 4594 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119180>, <py_sfcl.CommandDataDefinition object at 0x061BA5D0>) , Command count = 4595 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05276F00>, <py_sfcl.CommandDataDefinition object at 0x061BA570>) , Command count = 4596 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061192D0>, <py_sfcl.CommandDataDefinition object at 0x061BA4B0>) , Command count = 4597 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B89C0>, <py_sfcl.CommandDataDefinition object at 0x061191E0>) , Command count = 4598 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8D20>, <py_sfcl.CommandDataDefinition object at 0x0528AF60>) , Command count = 4599 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8420>, <py_sfcl.CommandDataDefinition object at 0x061B8B70>) , Command count = 4600 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061000C0>, <py_sfcl.CommandDataDefinition object at 0x061B8810>) , Command count = 4601 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0610EC60>, <py_sfcl.CommandDataDefinition object at 0x061B8930>) , Command count = 4602 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8ED0>, <py_sfcl.CommandDataDefinition object at 0x061B8990>) , Command count = 4603 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123390>, <py_sfcl.CommandDataDefinition object at 0x061B8120>) , Command count = 4604 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0527C1E0>, <py_sfcl.CommandDataDefinition object at 0x061BA960>) , Command count = 4605 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100090>, <py_sfcl.CommandDataDefinition object at 0x0528A9F0>) , Command count = 4606 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1BD0>, <py_sfcl.CommandDataDefinition object at 0x06123810>) , Command count = 4607 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061231B0>, <py_sfcl.CommandDataDefinition object at 0x061190C0>) , Command count = 4608 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AA20>, <py_sfcl.CommandDataDefinition object at 0x061BA3F0>) , Command count = 4609 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1C30>, <py_sfcl.CommandDataDefinition object at 0x05172060>) , Command count = 4610 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8BA0>, <py_sfcl.CommandDataDefinition object at 0x0611E330>) , Command count = 4611 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061002A0>, <py_sfcl.CommandDataDefinition object at 0x061BA420>) , Command count = 4612 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05252810>, <py_sfcl.CommandDataDefinition object at 0x061B8CC0>) , Command count = 4613 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123D20>, <py_sfcl.CommandDataDefinition object at 0x061BA300>) , Command count = 4614 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119B70>, <py_sfcl.CommandDataDefinition object at 0x061BA330>) , Command count = 4615 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061119C0>, <py_sfcl.CommandDataDefinition object at 0x061BA2D0>) , Command count = 4616 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119FC0>, <py_sfcl.CommandDataDefinition object at 0x061B8E70>) , Command count = 4617 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1960>, <py_sfcl.CommandDataDefinition object at 0x061B8870>) , Command count = 4618 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E660>, <py_sfcl.CommandDataDefinition object at 0x061BA270>) , Command count = 4619 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1630>, <py_sfcl.CommandDataDefinition object at 0x061BA210>) , Command count = 4620 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285960>, <py_sfcl.CommandDataDefinition object at 0x061235A0>) , Command count = 4621 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061197B0>, <py_sfcl.CommandDataDefinition object at 0x061239C0>) , Command count = 4622 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119390>, <py_sfcl.CommandDataDefinition object at 0x061BA120>) , Command count = 4623 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0601A300>, <py_sfcl.CommandDataDefinition object at 0x060C1C60>) , Command count = 4624 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Prg']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119870>, <py_sfcl.CommandDataDefinition object at 0x061BA0C0>) , Command count = 4625 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[13, 0, 0, 9, 0, 7]
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BC540>, <py_sfcl.CommandDataDefinition object at 0x061BC4B0>) , Command count = 4626 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:55: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:55: [ SetBusWidth(0x4) , Command count = 4627 ] 
15:11:55: VS_Flag========================1
15:11:55: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:55: [ CardSwitchCmd(True, [0x1, 0xF, 0x0, 0x0, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4628 ] 
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR25/HIGH SPEED SWITCHED', '200mA SWITCHED']
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:55: Host Frequency set to 34967 KHz

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:55: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4629 ] 
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:55: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528ACC0>, <py_sfcl.CommandDataDefinition object at 0x06123030>) , Command count = 4630 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111F00>, <py_sfcl.CommandDataDefinition object at 0x061B8F30>) , Command count = 4631 ] 
15:11:55: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:55: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061110C0>, <py_sfcl.CommandDataDefinition object at 0x06119DE0>) , Command count = 4632 ] 
15:11:55: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123270>, <py_sfcl.CommandDataDefinition object at 0x0611EC30>) , Command count = 4633 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119DB0>, <py_sfcl.CommandDataDefinition object at 0x061BA030>) , Command count = 4634 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061BA090>, <py_sfcl.CommandDataDefinition object at 0x061BA060>) , Command count = 4635 ] 
15:11:56: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123B40>, <py_sfcl.CommandDataDefinition object at 0x06123CC0>) , Command count = 4636 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x05285510>, <py_sfcl.CommandDataDefinition object at 0x06100540>) , Command count = 4637 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061233C0>, <py_sfcl.CommandDataDefinition object at 0x06123600>) , Command count = 4638 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123960>, <py_sfcl.CommandDataDefinition object at 0x06123870>) , Command count = 4639 ] 
15:11:56: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 2, 0, 9, 0, 13]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111750>, <py_sfcl.CommandDataDefinition object at 0x0611EDB0>) , Command count = 4640 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:11:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4641 ] 
15:11:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:11:56: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119990>, <py_sfcl.CommandDataDefinition object at 0x06123BD0>) , Command count = 4642 ] 
15:11:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py_sfcl.CommandDataDefinition object at 0x06123B70>) , Command count = 4643 ] 
15:11:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:11:56: [ SetCardRCA(0x1, 0xD555) , Command count = 4644 ] 
15:11:56: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8D80>, <py_sfcl.CommandDataDefinition object at 0x0527CF90>) , Command count = 4645 ] 
15:11:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:56: [ SetBusWidth(0x4) , Command count = 4646 ] 
15:11:56: VS_Flag========================1
15:11:56: supported========================[32799, 49153, 32783, 32783, 32769, 32769]
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:56: [ CardSwitchCmd(True, [0x1, 0xF, 0x0, 0x0, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4647 ] 
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200 mA', 'SDR25/HIGH SPEED SWITCHED', '200mA SWITCHED']
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:56: Host Frequency set to 48334 KHz

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API called
15:11:56: [ CardSwitchCmd(False, [0xF, 0xF, 0xF, 0xF, 0xF, 0xF], <0x40/0x200, Spc, pat:0x0>, 0x40) , Command count = 4648 ] 
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:['OperatingCurrent:200', 'SDR12 SUPPORTED', 'SDR25/HIGH SPEED SUPPORTED', 'SDR50 SUPPORTED', 'SDR104 SUPPORTED', 'DDR50 SUPPORTED', 'Current: 200mA SUPPORTED', 'Current: 400mA SUPPORTED', 'Current: 600mA SUPPORTED', 'Current: 800mA SUPPORTED'] 

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] :[NOT ERROR option] Power Consumption value is not ZERO and its value(in mA) is 200
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Powerconsumption Value Compare 

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[1] index,Matched with response Compare value :0x801F and Response Value : 0x801F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[2] index,Matched with response Compare value :0xC001 and Response Value : 0xC001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[3] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[4] index,Matched with response Compare value :0x800F and Response Value : 0x800F
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[5] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported[6] index,Matched with response Compare value :0x8001 and Response Value : 0x8001
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Supported Value Compare 

15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[1] index,Matched with response Compare value :0x1 and Response Value : 0x1
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[2] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[3] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[4] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[5] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched[6] index,Matched with response Compare value :0x0 and Response Value : 0x0
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO] : Switched Value Compare
15:11:56: [DVTCommonLib]### CardSwitchCommand[INFO]:Swithing Speed class API completed 

15:11:56: [GET_CSD] Passed and returns CSD 16 byte buffer: [64, 14, 0, 90, 91, 89, 0, 0, 237, 200, 127, 128, 10, 64, 64, 0]
15:11:56: ####CSD Registe 2.0 Values####
15:11:56: CSD_STRUCTURE                                 :0x1
15:11:56: Reserv1                                       :0x0
15:11:56: Time Access 1 TAAC                            :0xe
15:11:56: Time Access 2 NSAC*100                        :0x0
15:11:56: Data Transfer Rate TRAN_SPEED                 :0x5a
15:11:56: Card Command Classess CCC                     :0x5b5
15:11:56: Max Read Data Block Length  READ_BL_LEN       :0x9
15:11:56: Partial Blocks for Read READ_BL_PARTIAL       :0x0
15:11:56: Write Block Misalignment WRITE_BLK_MISALIGN   :0x0
15:11:56: Read Block Misalignment READ_BLK_MISALIGN     :0x0
15:11:56: DSR(driver stage register)  DSR_IMP           :0x0
15:11:56: Reserv2                                       :0x0
15:11:56: Device Size C_SIZE                            :0xedc8
15:11:56: Reserv3                                       :0x0
15:11:56: Erase Single Block Enable ERASE_BLK_EN        :0x1
15:11:56: Erase Sector Size SECTOR_SIZE                 :0x7f
15:11:56: Write Protect Group Size WP_GRP_SIZE          :0x0
15:11:56: Write Protect Group Enable  WP_GRP_ENABLE     :0x0
15:11:56: Reserv4                                       :0x0
15:11:56: Write Speed Factor R2W_FACTOR                 :0x2
15:11:56: Max. Write Data Block Length WRITE_BL_LEN     :0x9
15:11:56: Partial Blocks For Write  WRITE_BL_PARTIAL    :0x0
15:11:56: FILE_FORMAT_GRP                               :0x0
15:11:56: COPY flag                                     :0x1
15:11:56: Permanent Write Protection PERM_WRITE_PROTECT :0x0
15:11:56: Temporary Write Protection TMP_WRITE_PROTECT  :0x0
15:11:56: File_Format                                   :0x0
15:11:56: CRC                                           :0x0
15:11:56: ####CSD Registe Values####  

15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py_sfcl.CommandDataDefinition object at 0x0601A510>) , Command count = 4649 ] 
15:11:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 0, 0, 7, 0, 14]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py_sfcl.CommandDataDefinition object at 0x06123DE0>) , Command count = 4650 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py_sfcl.CommandDataDefinition object at 0x06137060>) , Command count = 4651 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123C30>, <py_sfcl.CommandDataDefinition object at 0x06123EA0>) , Command count = 4652 ] 
15:11:56: CMD42[ LOCK_UNLOCK ] Passed with R1 type response:[42, 0, 0, 9, 0, 12]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111150>, <py_sfcl.CommandDataDefinition object at 0x061230F0>) , Command count = 4653 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119A80>, <py_sfcl.CommandDataDefinition object at 0x06111A20>) , Command count = 4654 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:11:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]##### CARD IS NOT LOCKED and Ready for Data as expected.
15:11:56: [DVTCommonLib]### Reset the card with OCR value : 0x50FF8000
15:11:56: [ CardReset(py_sfcl.CARD_MODE.SD, 0x50FF8000, 0x1, True, <0x200/0x200, Spc, pat:0x0>, 0x0, 0x0, 0x1, True, False, 0x0, 0x1, 0xAA, 0x0) , Command count = 4655 ] 
15:11:56: [DVTCommonLib]### Reset[INFO] :Response of CardReset : 0xC0FF8000
15:11:56: [DVTCommonLib]### Reset[INFO]: Card response as High Capacity from card.
15:11:56: [DVTCommonLib]### Reset[INFO]: VOLA from card : 0x1
15:11:56: [DVTCommonLib]### Reset[INFO]: CMD Pattern from card : 0xAA
15:11:56: [DVTCommonLib]### Reset[INFO]: Reserved bits from card : 0x0
15:11:56: [DVTCommonLib]### Identification :Idenfication of card(CMD2 and CMD3)
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EB40>, <py_sfcl.CommandDataDefinition object at 0x061BA9F0>) , Command count = 4656 ] 
15:11:56: CMD2[ ALL_SEND_CID ] Passed with R2 type response:[63, 3, 83, 68, 65, 71, 71, 67, 68, 128, 35, 72, 41, 0, 0, 11]
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06137240>, <py_sfcl.CommandDataDefinition object at 0x06137120>) , Command count = 4657 ] 
15:11:56: CMD3[ SET_RELATIVE_ADDRESS ] Passed with R6 type response:[3, 213, 85, 5, 32, 0]
15:11:56: [ SetCardRCA(0x1, 0xD555) , Command count = 4658 ] 
15:11:56: [DVTCommonLib]### Identification :Idenfication of card completed 

15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06100480>, <py_sfcl.CommandDataDefinition object at 0x06137210>) , Command count = 4659 ] 
15:11:56: CMD7[ SEL_DESELECT_CARD ] Passed with R1 type response:[7, 2, 0, 7, 0, 15]
15:11:56: [DVTCommonLib]### SetBusWidth :Set the Bus width to 4 

15:11:56: [ SetBusWidth(0x4) , Command count = 4660 ] 
15:11:56: [ GetCardStatus() , Command count = 4661 ] 
15:11:56: [DVTCommonLib]### SetBusWidth[Error] :Failed to Set the Bus width
15:11:56: [DVTCommonLib]### Exception_Details :Card is reporting illegal command
15:11:56: [SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST]###[INFO] : Card is reporting illegal command,Expected
15:11:56: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py_sfcl.CommandDataDefinition object at 0x06127810>) , Command count = 4662 ] 
15:11:56: CMD13[ SEND_STATUS ] Passed with R1 type response:[13, 'CARD_IS_LOCKED', 'CURRENT_STATE:Tran', 'READY_FOR_DATA']
15:12:07: [ SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x061372D0>) , Command count = 4663 ] 
15:12:07: [ GetCardStatus() , Command count = 4664 ] 
15:12:07: CMD42[ LOCK_UNLOCK ] Erasing the Card/Card is Busy......
15:12:07: CMD42[ LOCK_UNLOCK ] Erase Failed with an exception
15:12:07: [DVTCommonLib]### Lock_unlock[ERROR] :Lock unlock operation failed
15:12:07: Failed Running script <module 'SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST' from 'C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS109_DVT_SD3_00_UHS_LOCK_UNLOCK_TEST.pyc'> with error 
CardCommandError:                                  
card access failed on protocol=sd: 
   Error 0xF5L (245) executing command 'SendBasicCommand'
   Description : POWER_ON_OFF_GENERAL_ERR
   Error Layer : UNKNOWN
   SW Error Location : UNKNOWN - UNKNOWN : 0
   Arguments: ('(<py_sfcl.CommandDefinition object at 0x06119F30>, <py_sfcl.CommandDataDefinition object at 0x061372D0>)')
   Extended error information:
      Status         : <CantDetermine>
      Is busy?       : <CantDetermine>
 
15:12:07: ########################################
15:12:07: ########################################
15:12:07: Stated Running script SD3UHS112_DVT_SD3_00_UHS_MODES_RANDOM_TEST_overcurrent 
15:12:07: ########################################
15:12:07: ###### Running SD3UHS112_DVT_SD3_00_UHS_MODES_RANDOM_TEST_overcurrent Test 
15:12:07: [GO4_globalInitCard]### Switch to Specify Card Type
15:12:07: Failed Running script <module 'SD3UHS112_DVT_SD3_00_UHS_MODES_RANDOM_TEST_overcurrent' from 'C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS112_DVT_SD3_00_UHS_MODES_RANDOM_TEST_overcurrent.pyc'> with error 
GenericPowerError:                                 
   Error 0xF5L (245):
   Failed power off card, rc=245
 
15:12:07: ########################################
15:12:07: ########################################
15:12:07: Stated Running script SD3UHS114_DVT_SD3_00_UHS_RESET_RANDOM_TEST 
15:12:07: ########################################
15:12:07: ###### Running SD3UHS114_DVT_SD3_00_UHS_RESET_RANDOM_TEST Test 
15:12:07: [GO4_globalInitCard]### Switch to Specify Card Type
15:12:07: Failed Running script <module 'SD3UHS114_DVT_SD3_00_UHS_RESET_RANDOM_TEST' from 'C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS114_DVT_SD3_00_UHS_RESET_RANDOM_TEST.pyc'> with error 
GenericPowerError:                                 
   Error 0xF5L (245):
   Failed power off card, rc=245
 
15:12:07: ########################################
15:12:07: ########################################
15:12:07: The Script <class 'SD3UHS101_CallAll_UHS-I.CallAll_UHS_I'> has 5 error on running 
15:12:07: ########################################

2016-11-21 15:12:07: 


<<<<<<<<<<<<<<<       PYTHON TRACEBACK       >>>>>>>>>>>>>>>

   File "C:\Program Files\SanDisk\CTF\LIBS\General\AppDriver.py", line 269, in _DoRunApp
     returnData = appMainFunction( *functionArgs, **functionKwArgs )
   File "C:\SDDVT_Python_Package\SDDVT\TestRunner.py", line 121, in Main
     testProcedureObj.RunTestProcedure(randomObj)
   File "C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS101_CallAll_UHS-I.py", line 115, in RunTestProcedure
     self.CallAll_UHS_IObj.Run(randomObj)
   File "C:\SDDVT_Python_Package\SDDVT\SD\SpecDVT\SD_SPEC_Ver3_00\UHS-1\SD3UHS101_CallAll_UHS-I.py", line 86, in Run
     raise TestError.TestFailedError("The Script %s has %d error on running "%(self.__class__,ScriptsStatus))



<<<<<<<<<<<<<<<                              >>>>>>>>>>>>>>>  



<<<<<<<<<<<<<<<        ERROR SUMMARY         >>>>>>>>>>>>>>>


 Test reported an error
    The Script <class 'SD<NUM>UHS<NUM>_CallAll_UHS-I.CallAll_UHS_I'> has <NUM> error on running 



<<<<<<<<<<<<<<<                              >>>>>>>>>>>>>>>  




<<<<<<<<<<<<<<<      SCRIPT FAILS WITH       >>>>>>>>>>>>>>>


 TestFailedError:                                   
    The Script <class 'SD3UHS101_CallAll_UHS-I.CallAll_UHS_I'> has 5 error on running



<<<<<<<<<<<<<<<                              >>>>>>>>>>>>>>>  


<<<<<<<<<<<<<<<       COMMAND HISTORY        >>>>>>>>>>>>>>>

The command history may not capture all of the commands going
to the card so use this information with caution. This is not meant
to be a replacement for a logic or protocol analyzer.

Last 20 commands before error:
      # Command                                                                FromStart(s) Elapsed(ms)   LatencyMax(ms)                      RV      
   4645 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111060>, <py     1167.258         3.1   read=  0, write=  0                 0       
   4646 SetBusWidth(4)                                                             1167.261         3.5   read=  0, write=  0                 0       
   4647 CardSwitchCmd(T, [1,F,0,0,F,F], <40/200, 0>, 40)                           1167.265         8.6   read=  0, write=  0                 0       
   4648 CardSwitchCmd(F, [F,F,F,F,F,F], <40/200, 0>, 40)                           1167.367         6.2   read=  0, write=  0                 0       
   4649 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061B8D80>, <py     1167.380         3.0   read=  0, write=  0                 0       
   4650 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061115A0>, <py     1167.383         3.0   read=  0, write=  0                 0       
   4651 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111390>, <py     1167.387         3.1   read=  0, write=  0                 0       
   4652 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061005D0>, <py     1167.390         6.8   read=  0, write=  0                 0       
   4653 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123C30>, <py     1167.397         3.1   read=  0, write=  0                 0       
   4654 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111150>, <py     1167.400         3.1   read=  0, write=  0                 0       
   4655 CardReset(py_sfcl.CARD_MODE.SD, 50FF8000, 1, T, <200/200, 0>, 0, 0, 1,     1167.404       189.0   read=  0, write=  0                 C0FF8000
   4656 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119A80>, <py     1167.593         4.0   read=  0, write=  0                 0       
   4657 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611EB40>, <py     1167.597         3.5   read=  0, write=  0                 0       
   4658 SetCardRCA(1, D555)                                                        1167.601         1.3   read=  0, write=  0                 'Obj'   
   4659 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06137240>, <py     1167.684         3.2   read=  0, write=  0                 0       
   4660 SetBusWidth(4)                                                             1167.688         4.8   read=  0, write=  0                 8       
   4661 GetCardStatus()                                                            1167.692         3.1   read=  0, write=  0                 'List'  
   4662 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06137210>, <py     1167.697         3.1   read=  0, write=  0                 0       
   4663 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py     1167.700     10679.6   read=  0, write=  0                 F5      
   4664 GetCardStatus()                                                            1178.380         5.9   read=  0, write=  0                 'Obj'   

      # Command                                                                FromStart(s) Elapsed(ms)   LatencyMax(ms)                      RV      
   ------------------------------------------------------------------------------------------------------------------------------------------------
   20 commands.  Total time 00:19:38


Start LBA: 0xffffffff Transferred block amount: 0xffffffff

Latency data
--------------------------------------------------
Time Interval  Reset        Read         Write        
  0 -   8 :    0            103          48           
  8 -  13 :    0            0            0            
 13 -  17 :    0            0            0            
 17 -  21 :    0            0            0            
 21 -  26 :    0            0            0            
 26 -  30 :    0            0            0            
 30 -  34 :    0            0            0            
 34 -  39 :    0            0            0            
 39 -  43 :    0            0            0            
 43 -  48 :    0            0            0            
 48 -  52 :    0            0            0            
 52 -  56 :    0            0            0            
 56 -  61 :    0            0            0            
 61 -  65 :    0            0            0            
 65 -  69 :    0            0            0            
 69 -  74 :    0            0            0            
 74 -  78 :    0            0            0            
 78 -  82 :    0            0            0            
 82 -  87 :    0            0            0            
 87 -  91 :    0            0            0            
 91 -  96 :    0            0            0            
 96 - 100 :    0            0            0            
100 - 104 :    0            0            0            
104 - 109 :    0            0            0            
109 - 113 :    0            0            0            
113 - 117 :    0            0            0            
117 - 122 :    0            0            0            
122 - 126 :    0            0            0            
126 - 131 :    0            0            0            
131 - 135 :    0            0            0            
135 - 139 :    0            0            0            
139 - 144 :    0            0            0            
144 - 148 :    0            0            0            
148 - 152 :    0            0            0            
152 - 157 :    0            0            0            
157 - 161 :    0            0            0            
161 - 165 :    0            0            0            
165 - 170 :    0            0            0            
170 - 174 :    0            0            0            
174 - 179 :    0            0            0            
179 - 183 :    0            0            0            
183 - 187 :    0            0            0            
187 - 192 :    0            0            0            
192 - 196 :    0            0            0            
196 - 200 :    0            0            0            
200 - 205 :    0            0            0            
205 - 209 :    0            0            0            
209 - 214 :    0            0            0            
214 - 218 :    0            0            0            
--------------------------------------------------


List of commands that took the most time to execute:
----------------------------------------------------
      # Command                                                                FromStart(s) Elapsed(ms)   LatencyMax(ms)                      RV      

    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x060C1540>, <py           NA 10679.881434   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x061195A0>, <py           NA 10679.707870   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0611E7E0>, <py           NA 10679.692174   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06123300>, <py           NA 10679.625767   NA                                  245     
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06119E40>, <py           NA 10679.284074   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x0528AC60>, <py           NA 10419.468685   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111330>, <py           NA 10419.137254   NA                                  37      
    250 SendBasicCommand(<py_sfcl.CommandDefinition object at 0x06111DB0>, <py           NA 10419.107069   NA                                  37      
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc           NA  633.131597   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc           NA  632.999085   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc,           NA  632.946262   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Sp           NA  632.862046   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Sp           NA  632.837898   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc,           NA  632.757606   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc           NA  632.716856   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Sp           NA  632.696632   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Sp           NA  632.689086   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x10FF8000, 0x1, 0x1, <0x200/0x200, Sp           NA  632.686973   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0xFF8000, 0x1, 0x1, <0x200/0x200, Spc,           NA  632.682747   NA                                  None    
    250 CardReset(py_sfcl.CARD_MODE.SD, 0x1FF8000, 0x1, 0x1, <0x200/0x200, Spc           NA  632.681238   NA                                  None    

      # Command                                                                FromStart(s) Elapsed(ms)   LatencyMax(ms)                      RV      

Last resetup command number: 4663


<<<<<<<<<<<<<<<                              >>>>>>>>>>>>>>>  

TestFailedError error at 00:19:39.


<<<<<<<<<<<<<<<      SCRIPT FAILS WITH       >>>>>>>>>>>>>>>


 TestFailedError:                                   
    The Script <class 'SD3UHS101_CallAll_UHS-I.CallAll_UHS_I'> has 5 error on running



<<<<<<<<<<<<<<<                              >>>>>>>>>>>>>>>  




   #######    ##     ####  ####    
    ##   #   ####     ##    ##     
    ## #    ##  ##    ##    ##     
    ####    ##  ##    ##    ##     
    ## #    ######    ##    ##     
    ##      ##  ##    ##    ##  ## 
   ####     ##  ##   ####  ####### 
                                   

 

